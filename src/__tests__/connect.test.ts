/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assert, expect, it, test } from "vitest";
import { Vercel } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

it.skip("Connect Update Shared Connect Links", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step updateSharedConnectLinks.test referencing operation updateSharedConnectLinks not found in document`]",
  );
});

test("Connect Update Static Ips", async () => {
  const testHttpClient = createTestHTTPClient("updateStaticIps");

  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerToken: "<YOUR_BEARER_TOKEN_HERE>",
  });

  const result = await vercel.connect.updateStaticIps({
    idOrName: "<value>",
    teamId: "team_1a2b3c4d5e6f7g8h9i0j1k2l",
    slug: "my-team-url-slug",
    requestBody: {
      regions: [
        "iad1",
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      envId: "<id>",
      connectConfigurationId: "<id>",
      passive: true,
      buildsEnabled: false,
      createdAt: 5943.97,
      updatedAt: 7734.38,
    },
  ]);
});
