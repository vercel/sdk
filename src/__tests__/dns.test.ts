/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Vercel } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Dns Create Record", async () => {
  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: createTestHTTPClient("createRecord"),
    bearerToken: "<YOUR_BEARER_TOKEN_HERE>",
  });

  const result = await vercel.dns.createRecord({
    domain: "example.com",
    teamId: "team_1a2b3c4d5e6f7g8h9i0j1k2l",
    slug: "my-team-url-slug",
    requestBody: {
      type: "CNAME",
      ttl: 60,
      https: {
        priority: 10,
        target: "host.example.com",
        params: "alpn=h2,h3",
      },
      comment: "used to verify ownership of domain",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uid: "rec_V0fra8eEgQwEpFhYG2vTzC3K",
  });
});

test("Dns Update Record", async () => {
  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: createTestHTTPClient("updateRecord"),
    bearerToken: "<YOUR_BEARER_TOKEN_HERE>",
  });

  const result = await vercel.dns.updateRecord({
    recordId: "rec_2qn7pzrx89yxy34vezpd31y9",
    teamId: "team_1a2b3c4d5e6f7g8h9i0j1k2l",
    slug: "my-team-url-slug",
    requestBody: {
      name: "example-1",
      value: "google.com",
      type: "A",
      ttl: 60,
      srv: {
        target: "example2.com.",
        weight: 97604,
        port: 570172,
        priority: 199524,
      },
      https: {
        priority: 35000,
        target: "example2.com.",
      },
      comment: "used to verify ownership of domain",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    creator: "<value>",
    domain: "rectangular-peninsula.net",
    id: "<id>",
    name: "<value>",
    recordType: "SRV",
    type: "record-sys",
    value: "<value>",
  });
});

test("Dns Remove Record", async () => {
  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: createTestHTTPClient("removeRecord"),
    bearerToken: "<YOUR_BEARER_TOKEN_HERE>",
  });

  const result = await vercel.dns.removeRecord({
    domain: "example.com",
    recordId: "rec_V0fra8eEgQwEpFhYG2vTzC3K",
    teamId: "team_1a2b3c4d5e6f7g8h9i0j1k2l",
    slug: "my-team-url-slug",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});
