// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ExpectedPriceMismatchCode string

const (
	ExpectedPriceMismatchCodeExpectedPriceMismatch ExpectedPriceMismatchCode = "expected_price_mismatch"
)

func (e ExpectedPriceMismatchCode) ToPointer() *ExpectedPriceMismatchCode {
	return &e
}
func (e *ExpectedPriceMismatchCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "expected_price_mismatch":
		*e = ExpectedPriceMismatchCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExpectedPriceMismatchCode: %v", v)
	}
}

type ExpectedPriceMismatchTag string

const (
	ExpectedPriceMismatchTagExpectedPriceMismatch ExpectedPriceMismatchTag = "ExpectedPriceMismatch"
)

func (e ExpectedPriceMismatchTag) ToPointer() *ExpectedPriceMismatchTag {
	return &e
}
func (e *ExpectedPriceMismatchTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ExpectedPriceMismatch":
		*e = ExpectedPriceMismatchTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExpectedPriceMismatchTag: %v", v)
	}
}
