// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type InvalidAdditionalContactInfoCode string

const (
	InvalidAdditionalContactInfoCodeInvalidAdditionalContactInfo InvalidAdditionalContactInfoCode = "invalid_additional_contact_info"
)

func (e InvalidAdditionalContactInfoCode) ToPointer() *InvalidAdditionalContactInfoCode {
	return &e
}
func (e *InvalidAdditionalContactInfoCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_additional_contact_info":
		*e = InvalidAdditionalContactInfoCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvalidAdditionalContactInfoCode: %v", v)
	}
}

type InvalidAdditionalContactInfoTag string

const (
	InvalidAdditionalContactInfoTagInvalidAdditionalContactInfo InvalidAdditionalContactInfoTag = "InvalidAdditionalContactInfo"
)

func (e InvalidAdditionalContactInfoTag) ToPointer() *InvalidAdditionalContactInfoTag {
	return &e
}
func (e *InvalidAdditionalContactInfoTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InvalidAdditionalContactInfo":
		*e = InvalidAdditionalContactInfoTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvalidAdditionalContactInfoTag: %v", v)
	}
}
