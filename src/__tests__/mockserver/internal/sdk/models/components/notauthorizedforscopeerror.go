// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type NotAuthorizedForScopeCode string

const (
	NotAuthorizedForScopeCodeNotAuthorizedForScope NotAuthorizedForScopeCode = "not_authorized_for_scope"
)

func (e NotAuthorizedForScopeCode) ToPointer() *NotAuthorizedForScopeCode {
	return &e
}
func (e *NotAuthorizedForScopeCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "not_authorized_for_scope":
		*e = NotAuthorizedForScopeCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotAuthorizedForScopeCode: %v", v)
	}
}

type NotAuthorizedForScopeTag string

const (
	NotAuthorizedForScopeTagNotAuthorizedForScope NotAuthorizedForScopeTag = "NotAuthorizedForScope"
)

func (e NotAuthorizedForScopeTag) ToPointer() *NotAuthorizedForScopeTag {
	return &e
}
func (e *NotAuthorizedForScopeTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NotAuthorizedForScope":
		*e = NotAuthorizedForScopeTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotAuthorizedForScopeTag: %v", v)
	}
}
