// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ConnectIntegrationResourceToProjectRequestBody struct {
	ProjectID string `json:"projectId"`
}

func (o *ConnectIntegrationResourceToProjectRequestBody) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

type ConnectIntegrationResourceToProjectRequest struct {
	IntegrationConfigurationID string `pathParam:"style=simple,explode=false,name=integrationConfigurationId"`
	ResourceID                 string `pathParam:"style=simple,explode=false,name=resourceId"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                                         `queryParam:"style=form,explode=true,name=slug"`
	RequestBody *ConnectIntegrationResourceToProjectRequestBody `request:"mediaType=application/json"`
}

func (o *ConnectIntegrationResourceToProjectRequest) GetIntegrationConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationConfigurationID
}

func (o *ConnectIntegrationResourceToProjectRequest) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *ConnectIntegrationResourceToProjectRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *ConnectIntegrationResourceToProjectRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *ConnectIntegrationResourceToProjectRequest) GetRequestBody() *ConnectIntegrationResourceToProjectRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type ConnectIntegrationResourceToProjectResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *ConnectIntegrationResourceToProjectResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
