// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CreateAuthTokenRequestBody struct {
	Name      string   `json:"name"`
	ExpiresAt *float64 `json:"expiresAt,omitempty"`
}

func (o *CreateAuthTokenRequestBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateAuthTokenRequestBody) GetExpiresAt() *float64 {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}

type CreateAuthTokenRequest struct {
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                    `queryParam:"style=form,explode=true,name=slug"`
	RequestBody CreateAuthTokenRequestBody `request:"mediaType=application/json"`
}

func (o *CreateAuthTokenRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *CreateAuthTokenRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CreateAuthTokenRequest) GetRequestBody() CreateAuthTokenRequestBody {
	if o == nil {
		return CreateAuthTokenRequestBody{}
	}
	return o.RequestBody
}

// CreateAuthTokenResponseBody - Successful response.
type CreateAuthTokenResponseBody struct {
	// Authentication token metadata.
	Token components.AuthToken `json:"token"`
	// The authentication token's actual value. This token is only provided in this response, and can never be retrieved again in the future. Be sure to save it somewhere safe!
	BearerToken string `json:"bearerToken"`
}

func (o *CreateAuthTokenResponseBody) GetToken() components.AuthToken {
	if o == nil {
		return components.AuthToken{}
	}
	return o.Token
}

func (o *CreateAuthTokenResponseBody) GetBearerToken() string {
	if o == nil {
		return ""
	}
	return o.BearerToken
}

type CreateAuthTokenResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response.
	Object *CreateAuthTokenResponseBody
}

func (o *CreateAuthTokenResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateAuthTokenResponse) GetObject() *CreateAuthTokenResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
