// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CreateEdgeConfigTokenRequestBody struct {
	Label string `json:"label"`
}

func (o *CreateEdgeConfigTokenRequestBody) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

type CreateEdgeConfigTokenRequest struct {
	EdgeConfigID string `pathParam:"style=simple,explode=false,name=edgeConfigId"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                          `queryParam:"style=form,explode=true,name=slug"`
	RequestBody CreateEdgeConfigTokenRequestBody `request:"mediaType=application/json"`
}

func (o *CreateEdgeConfigTokenRequest) GetEdgeConfigID() string {
	if o == nil {
		return ""
	}
	return o.EdgeConfigID
}

func (o *CreateEdgeConfigTokenRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *CreateEdgeConfigTokenRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CreateEdgeConfigTokenRequest) GetRequestBody() CreateEdgeConfigTokenRequestBody {
	if o == nil {
		return CreateEdgeConfigTokenRequestBody{}
	}
	return o.RequestBody
}

type CreateEdgeConfigTokenResponseBody struct {
	Token string `json:"token"`
	ID    string `json:"id"`
}

func (o *CreateEdgeConfigTokenResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *CreateEdgeConfigTokenResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type CreateEdgeConfigTokenResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *CreateEdgeConfigTokenResponseBody
}

func (o *CreateEdgeConfigTokenResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateEdgeConfigTokenResponse) GetObject() *CreateEdgeConfigTokenResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
