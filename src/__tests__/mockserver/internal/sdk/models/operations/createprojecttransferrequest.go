// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CreateProjectTransferRequestRequestBody struct {
	// The URL to send a webhook to when the transfer is accepted.
	CallbackURL *string `json:"callbackUrl,omitempty"`
	// The secret to use to sign the webhook payload with HMAC-SHA256.
	CallbackSecret *string `json:"callbackSecret,omitempty"`
}

func (o *CreateProjectTransferRequestRequestBody) GetCallbackURL() *string {
	if o == nil {
		return nil
	}
	return o.CallbackURL
}

func (o *CreateProjectTransferRequestRequestBody) GetCallbackSecret() *string {
	if o == nil {
		return nil
	}
	return o.CallbackSecret
}

type CreateProjectTransferRequestRequest struct {
	// The ID or name of the project to transfer.
	IDOrName string `pathParam:"style=simple,explode=false,name=idOrName"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                                  `queryParam:"style=form,explode=true,name=slug"`
	RequestBody *CreateProjectTransferRequestRequestBody `request:"mediaType=application/json"`
}

func (o *CreateProjectTransferRequestRequest) GetIDOrName() string {
	if o == nil {
		return ""
	}
	return o.IDOrName
}

func (o *CreateProjectTransferRequestRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *CreateProjectTransferRequestRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CreateProjectTransferRequestRequest) GetRequestBody() *CreateProjectTransferRequestRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

// CreateProjectTransferRequestResponseBody - The project transfer request has been initiated successfully.
type CreateProjectTransferRequestResponseBody struct {
	// Code that can be used to accept the project transfer request.
	Code string `json:"code"`
}

func (o *CreateProjectTransferRequestResponseBody) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

type CreateProjectTransferRequestResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The project transfer request has been initiated successfully.
	Object *CreateProjectTransferRequestResponseBody
}

func (o *CreateProjectTransferRequestResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateProjectTransferRequestResponse) GetObject() *CreateProjectTransferRequestResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
