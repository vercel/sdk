// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type Utm struct {
	// UTM source
	UtmSource *string `json:"utmSource,omitempty"`
	// UTM medium
	UtmMedium *string `json:"utmMedium,omitempty"`
	// UTM campaign
	UtmCampaign *string `json:"utmCampaign,omitempty"`
	// UTM term
	UtmTerm *string `json:"utmTerm,omitempty"`
}

func (o *Utm) GetUtmSource() *string {
	if o == nil {
		return nil
	}
	return o.UtmSource
}

func (o *Utm) GetUtmMedium() *string {
	if o == nil {
		return nil
	}
	return o.UtmMedium
}

func (o *Utm) GetUtmCampaign() *string {
	if o == nil {
		return nil
	}
	return o.UtmCampaign
}

func (o *Utm) GetUtmTerm() *string {
	if o == nil {
		return nil
	}
	return o.UtmTerm
}

// Attribution information for the session or current page
type Attribution struct {
	// Session referrer
	SessionReferrer *string `json:"sessionReferrer,omitempty"`
	// Session landing page
	LandingPage *string `json:"landingPage,omitempty"`
	// Referrer to the signup page
	PageBeforeConversionPage *string `json:"pageBeforeConversionPage,omitempty"`
	Utm                      *Utm    `json:"utm,omitempty"`
}

func (o *Attribution) GetSessionReferrer() *string {
	if o == nil {
		return nil
	}
	return o.SessionReferrer
}

func (o *Attribution) GetLandingPage() *string {
	if o == nil {
		return nil
	}
	return o.LandingPage
}

func (o *Attribution) GetPageBeforeConversionPage() *string {
	if o == nil {
		return nil
	}
	return o.PageBeforeConversionPage
}

func (o *Attribution) GetUtm() *Utm {
	if o == nil {
		return nil
	}
	return o.Utm
}

type CreateTeamRequest struct {
	// The desired slug for the Team
	Slug string `json:"slug"`
	// The desired name for the Team. It will be generated from the provided slug if nothing is provided
	Name *string `json:"name,omitempty"`
	// Attribution information for the session or current page
	Attribution *Attribution `json:"attribution,omitempty"`
}

func (o *CreateTeamRequest) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *CreateTeamRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CreateTeamRequest) GetAttribution() *Attribution {
	if o == nil {
		return nil
	}
	return o.Attribution
}

// CreateTeamResponseBody - The team was created successfully
type CreateTeamResponseBody struct {
	// Id of the created team
	ID   string `json:"id"`
	Slug string `json:"slug"`
}

func (o *CreateTeamResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateTeamResponseBody) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

type CreateTeamResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The team was created successfully
	Object *CreateTeamResponseBody
}

func (o *CreateTeamResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateTeamResponse) GetObject() *CreateTeamResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
