// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type DeleteAliasRequest struct {
	// The ID or alias that will be removed
	AliasID string `pathParam:"style=simple,explode=false,name=aliasId"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *DeleteAliasRequest) GetAliasID() string {
	if o == nil {
		return ""
	}
	return o.AliasID
}

func (o *DeleteAliasRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *DeleteAliasRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type DeleteAliasStatus string

const (
	DeleteAliasStatusSuccess DeleteAliasStatus = "SUCCESS"
)

func (e DeleteAliasStatus) ToPointer() *DeleteAliasStatus {
	return &e
}
func (e *DeleteAliasStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = DeleteAliasStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAliasStatus: %v", v)
	}
}

// DeleteAliasResponseBody - The alias was successfully removed
type DeleteAliasResponseBody struct {
	Status DeleteAliasStatus `json:"status"`
}

func (o *DeleteAliasResponseBody) GetStatus() DeleteAliasStatus {
	if o == nil {
		return DeleteAliasStatus("")
	}
	return o.Status
}

type DeleteAliasResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The alias was successfully removed
	Object *DeleteAliasResponseBody
}

func (o *DeleteAliasResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteAliasResponse) GetObject() *DeleteAliasResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
