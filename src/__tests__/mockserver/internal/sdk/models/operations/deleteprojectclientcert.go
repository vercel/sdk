// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type DeleteProjectClientCertRequest struct {
	// The unique project identifier or the project name
	IDOrName string `pathParam:"style=simple,explode=false,name=idOrName"`
	// The certificate identifier
	CertID string `pathParam:"style=simple,explode=false,name=certId"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *DeleteProjectClientCertRequest) GetIDOrName() string {
	if o == nil {
		return ""
	}
	return o.IDOrName
}

func (o *DeleteProjectClientCertRequest) GetCertID() string {
	if o == nil {
		return ""
	}
	return o.CertID
}

func (o *DeleteProjectClientCertRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *DeleteProjectClientCertRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

// DeleteProjectClientCertResponseBody - Client certificate deleted successfully
type DeleteProjectClientCertResponseBody struct {
	Origin string `json:"origin"`
	CertID string `json:"certId"`
}

func (o *DeleteProjectClientCertResponseBody) GetOrigin() string {
	if o == nil {
		return ""
	}
	return o.Origin
}

func (o *DeleteProjectClientCertResponseBody) GetCertID() string {
	if o == nil {
		return ""
	}
	return o.CertID
}

type DeleteProjectClientCertResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Client certificate deleted successfully
	Object *DeleteProjectClientCertResponseBody
}

func (o *DeleteProjectClientCertResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteProjectClientCertResponse) GetObject() *DeleteProjectClientCertResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
