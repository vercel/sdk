// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetAliasRequest struct {
	// Get the alias only if it was created after the provided timestamp
	From *float64 `queryParam:"style=form,explode=true,name=from"`
	// The alias or alias ID to be retrieved
	IDOrAlias string `pathParam:"style=simple,explode=false,name=idOrAlias"`
	// Get the alias only if it is assigned to the provided project ID
	ProjectID *string `queryParam:"style=form,explode=true,name=projectId"`
	// Get the alias only if it was created after this JavaScript timestamp
	Since *float64 `queryParam:"style=form,explode=true,name=since"`
	// Get the alias only if it was created before this JavaScript timestamp
	Until *float64 `queryParam:"style=form,explode=true,name=until"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetAliasRequest) GetFrom() *float64 {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *GetAliasRequest) GetIDOrAlias() string {
	if o == nil {
		return ""
	}
	return o.IDOrAlias
}

func (o *GetAliasRequest) GetProjectID() *string {
	if o == nil {
		return nil
	}
	return o.ProjectID
}

func (o *GetAliasRequest) GetSince() *float64 {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *GetAliasRequest) GetUntil() *float64 {
	if o == nil {
		return nil
	}
	return o.Until
}

func (o *GetAliasRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetAliasRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type GetAliasResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The alias information
	Any any
}

func (o *GetAliasResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAliasResponse) GetAny() any {
	if o == nil {
		return nil
	}
	return o.Any
}
