// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetCertByIDRequest struct {
	// The cert id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetCertByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetCertByIDRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetCertByIDRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type GetCertByIDResponseBody struct {
	ID        string   `json:"id"`
	CreatedAt float64  `json:"createdAt"`
	ExpiresAt float64  `json:"expiresAt"`
	AutoRenew bool     `json:"autoRenew"`
	Cns       []string `json:"cns"`
}

func (o *GetCertByIDResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetCertByIDResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *GetCertByIDResponseBody) GetExpiresAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.ExpiresAt
}

func (o *GetCertByIDResponseBody) GetAutoRenew() bool {
	if o == nil {
		return false
	}
	return o.AutoRenew
}

func (o *GetCertByIDResponseBody) GetCns() []string {
	if o == nil {
		return []string{}
	}
	return o.Cns
}

type GetCertByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetCertByIDResponseBody
}

func (o *GetCertByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCertByIDResponse) GetObject() *GetCertByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
