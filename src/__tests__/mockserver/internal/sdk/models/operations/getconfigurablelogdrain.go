// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type GetConfigurableLogDrainRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetConfigurableLogDrainRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetConfigurableLogDrainRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetConfigurableLogDrainRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type GetConfigurableLogDrainFramework string

const (
	GetConfigurableLogDrainFrameworkBlitzjs        GetConfigurableLogDrainFramework = "blitzjs"
	GetConfigurableLogDrainFrameworkNextjs         GetConfigurableLogDrainFramework = "nextjs"
	GetConfigurableLogDrainFrameworkGatsby         GetConfigurableLogDrainFramework = "gatsby"
	GetConfigurableLogDrainFrameworkRemix          GetConfigurableLogDrainFramework = "remix"
	GetConfigurableLogDrainFrameworkReactRouter    GetConfigurableLogDrainFramework = "react-router"
	GetConfigurableLogDrainFrameworkAstro          GetConfigurableLogDrainFramework = "astro"
	GetConfigurableLogDrainFrameworkHexo           GetConfigurableLogDrainFramework = "hexo"
	GetConfigurableLogDrainFrameworkEleventy       GetConfigurableLogDrainFramework = "eleventy"
	GetConfigurableLogDrainFrameworkDocusaurus2    GetConfigurableLogDrainFramework = "docusaurus-2"
	GetConfigurableLogDrainFrameworkDocusaurus     GetConfigurableLogDrainFramework = "docusaurus"
	GetConfigurableLogDrainFrameworkPreact         GetConfigurableLogDrainFramework = "preact"
	GetConfigurableLogDrainFrameworkSolidstart1    GetConfigurableLogDrainFramework = "solidstart-1"
	GetConfigurableLogDrainFrameworkSolidstart     GetConfigurableLogDrainFramework = "solidstart"
	GetConfigurableLogDrainFrameworkDojo           GetConfigurableLogDrainFramework = "dojo"
	GetConfigurableLogDrainFrameworkEmber          GetConfigurableLogDrainFramework = "ember"
	GetConfigurableLogDrainFrameworkVue            GetConfigurableLogDrainFramework = "vue"
	GetConfigurableLogDrainFrameworkScully         GetConfigurableLogDrainFramework = "scully"
	GetConfigurableLogDrainFrameworkIonicAngular   GetConfigurableLogDrainFramework = "ionic-angular"
	GetConfigurableLogDrainFrameworkAngular        GetConfigurableLogDrainFramework = "angular"
	GetConfigurableLogDrainFrameworkPolymer        GetConfigurableLogDrainFramework = "polymer"
	GetConfigurableLogDrainFrameworkSvelte         GetConfigurableLogDrainFramework = "svelte"
	GetConfigurableLogDrainFrameworkSveltekit      GetConfigurableLogDrainFramework = "sveltekit"
	GetConfigurableLogDrainFrameworkSveltekit1     GetConfigurableLogDrainFramework = "sveltekit-1"
	GetConfigurableLogDrainFrameworkIonicReact     GetConfigurableLogDrainFramework = "ionic-react"
	GetConfigurableLogDrainFrameworkCreateReactApp GetConfigurableLogDrainFramework = "create-react-app"
	GetConfigurableLogDrainFrameworkGridsome       GetConfigurableLogDrainFramework = "gridsome"
	GetConfigurableLogDrainFrameworkUmijs          GetConfigurableLogDrainFramework = "umijs"
	GetConfigurableLogDrainFrameworkSapper         GetConfigurableLogDrainFramework = "sapper"
	GetConfigurableLogDrainFrameworkSaber          GetConfigurableLogDrainFramework = "saber"
	GetConfigurableLogDrainFrameworkStencil        GetConfigurableLogDrainFramework = "stencil"
	GetConfigurableLogDrainFrameworkNuxtjs         GetConfigurableLogDrainFramework = "nuxtjs"
	GetConfigurableLogDrainFrameworkRedwoodjs      GetConfigurableLogDrainFramework = "redwoodjs"
	GetConfigurableLogDrainFrameworkHugo           GetConfigurableLogDrainFramework = "hugo"
	GetConfigurableLogDrainFrameworkJekyll         GetConfigurableLogDrainFramework = "jekyll"
	GetConfigurableLogDrainFrameworkBrunch         GetConfigurableLogDrainFramework = "brunch"
	GetConfigurableLogDrainFrameworkMiddleman      GetConfigurableLogDrainFramework = "middleman"
	GetConfigurableLogDrainFrameworkZola           GetConfigurableLogDrainFramework = "zola"
	GetConfigurableLogDrainFrameworkHydrogen       GetConfigurableLogDrainFramework = "hydrogen"
	GetConfigurableLogDrainFrameworkVite           GetConfigurableLogDrainFramework = "vite"
	GetConfigurableLogDrainFrameworkVitepress      GetConfigurableLogDrainFramework = "vitepress"
	GetConfigurableLogDrainFrameworkVuepress       GetConfigurableLogDrainFramework = "vuepress"
	GetConfigurableLogDrainFrameworkParcel         GetConfigurableLogDrainFramework = "parcel"
	GetConfigurableLogDrainFrameworkFastapi        GetConfigurableLogDrainFramework = "fastapi"
	GetConfigurableLogDrainFrameworkFlask          GetConfigurableLogDrainFramework = "flask"
	GetConfigurableLogDrainFrameworkFasthtml       GetConfigurableLogDrainFramework = "fasthtml"
	GetConfigurableLogDrainFrameworkSanityV3       GetConfigurableLogDrainFramework = "sanity-v3"
	GetConfigurableLogDrainFrameworkSanity         GetConfigurableLogDrainFramework = "sanity"
	GetConfigurableLogDrainFrameworkStorybook      GetConfigurableLogDrainFramework = "storybook"
	GetConfigurableLogDrainFrameworkNitro          GetConfigurableLogDrainFramework = "nitro"
	GetConfigurableLogDrainFrameworkHono           GetConfigurableLogDrainFramework = "hono"
	GetConfigurableLogDrainFrameworkExpress        GetConfigurableLogDrainFramework = "express"
	GetConfigurableLogDrainFrameworkH3             GetConfigurableLogDrainFramework = "h3"
	GetConfigurableLogDrainFrameworkNestjs         GetConfigurableLogDrainFramework = "nestjs"
	GetConfigurableLogDrainFrameworkXmcp           GetConfigurableLogDrainFramework = "xmcp"
)

func (e GetConfigurableLogDrainFramework) ToPointer() *GetConfigurableLogDrainFramework {
	return &e
}
func (e *GetConfigurableLogDrainFramework) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "blitzjs":
		fallthrough
	case "nextjs":
		fallthrough
	case "gatsby":
		fallthrough
	case "remix":
		fallthrough
	case "react-router":
		fallthrough
	case "astro":
		fallthrough
	case "hexo":
		fallthrough
	case "eleventy":
		fallthrough
	case "docusaurus-2":
		fallthrough
	case "docusaurus":
		fallthrough
	case "preact":
		fallthrough
	case "solidstart-1":
		fallthrough
	case "solidstart":
		fallthrough
	case "dojo":
		fallthrough
	case "ember":
		fallthrough
	case "vue":
		fallthrough
	case "scully":
		fallthrough
	case "ionic-angular":
		fallthrough
	case "angular":
		fallthrough
	case "polymer":
		fallthrough
	case "svelte":
		fallthrough
	case "sveltekit":
		fallthrough
	case "sveltekit-1":
		fallthrough
	case "ionic-react":
		fallthrough
	case "create-react-app":
		fallthrough
	case "gridsome":
		fallthrough
	case "umijs":
		fallthrough
	case "sapper":
		fallthrough
	case "saber":
		fallthrough
	case "stencil":
		fallthrough
	case "nuxtjs":
		fallthrough
	case "redwoodjs":
		fallthrough
	case "hugo":
		fallthrough
	case "jekyll":
		fallthrough
	case "brunch":
		fallthrough
	case "middleman":
		fallthrough
	case "zola":
		fallthrough
	case "hydrogen":
		fallthrough
	case "vite":
		fallthrough
	case "vitepress":
		fallthrough
	case "vuepress":
		fallthrough
	case "parcel":
		fallthrough
	case "fastapi":
		fallthrough
	case "flask":
		fallthrough
	case "fasthtml":
		fallthrough
	case "sanity-v3":
		fallthrough
	case "sanity":
		fallthrough
	case "storybook":
		fallthrough
	case "nitro":
		fallthrough
	case "hono":
		fallthrough
	case "express":
		fallthrough
	case "h3":
		fallthrough
	case "nestjs":
		fallthrough
	case "xmcp":
		*e = GetConfigurableLogDrainFramework(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurableLogDrainFramework: %v", v)
	}
}

type GetConfigurableLogDrainProjectsMetadatum struct {
	ID               string                            `json:"id"`
	Name             string                            `json:"name"`
	Framework        *GetConfigurableLogDrainFramework `json:"framework,omitempty"`
	LatestDeployment *string                           `json:"latestDeployment,omitempty"`
}

func (o *GetConfigurableLogDrainProjectsMetadatum) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetConfigurableLogDrainProjectsMetadatum) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetConfigurableLogDrainProjectsMetadatum) GetFramework() *GetConfigurableLogDrainFramework {
	if o == nil {
		return nil
	}
	return o.Framework
}

func (o *GetConfigurableLogDrainProjectsMetadatum) GetLatestDeployment() *string {
	if o == nil {
		return nil
	}
	return o.LatestDeployment
}

type GetConfigurableLogDrainResponseBody struct {
	ProjectsMetadata            []GetConfigurableLogDrainProjectsMetadatum `json:"projectsMetadata,omitempty"`
	IntegrationIcon             *string                                    `json:"integrationIcon,omitempty"`
	IntegrationConfigurationURI *string                                    `json:"integrationConfigurationUri,omitempty"`
	IntegrationWebsite          *string                                    `json:"integrationWebsite,omitempty"`
}

func (o *GetConfigurableLogDrainResponseBody) GetProjectsMetadata() []GetConfigurableLogDrainProjectsMetadatum {
	if o == nil {
		return nil
	}
	return o.ProjectsMetadata
}

func (o *GetConfigurableLogDrainResponseBody) GetIntegrationIcon() *string {
	if o == nil {
		return nil
	}
	return o.IntegrationIcon
}

func (o *GetConfigurableLogDrainResponseBody) GetIntegrationConfigurationURI() *string {
	if o == nil {
		return nil
	}
	return o.IntegrationConfigurationURI
}

func (o *GetConfigurableLogDrainResponseBody) GetIntegrationWebsite() *string {
	if o == nil {
		return nil
	}
	return o.IntegrationWebsite
}

type GetConfigurableLogDrainResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetConfigurableLogDrainResponseBody
}

func (o *GetConfigurableLogDrainResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetConfigurableLogDrainResponse) GetObject() *GetConfigurableLogDrainResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
