// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type GetConfigurationProductsRequest struct {
	// ID of the integration configuration
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetConfigurationProductsRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetConfigurationProductsRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetConfigurationProductsRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type StorageStatus string

const (
	StorageStatusDisabled StorageStatus = "disabled"
	StorageStatusEnabled  StorageStatus = "enabled"
)

func (e StorageStatus) ToPointer() *StorageStatus {
	return &e
}
func (e *StorageStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = StorageStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageStatus: %v", v)
	}
}

type GetConfigurationProductsRepl struct {
	Enabled              bool    `json:"enabled"`
	SupportsReadOnlyMode bool    `json:"supportsReadOnlyMode"`
	WelcomeMessage       *string `json:"welcomeMessage,omitempty"`
}

func (o *GetConfigurationProductsRepl) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *GetConfigurationProductsRepl) GetSupportsReadOnlyMode() bool {
	if o == nil {
		return false
	}
	return o.SupportsReadOnlyMode
}

func (o *GetConfigurationProductsRepl) GetWelcomeMessage() *string {
	if o == nil {
		return nil
	}
	return o.WelcomeMessage
}

type Storage struct {
	Status StorageStatus                 `json:"status"`
	Repl   *GetConfigurationProductsRepl `json:"repl,omitempty"`
}

func (o *Storage) GetStatus() StorageStatus {
	if o == nil {
		return StorageStatus("")
	}
	return o.Status
}

func (o *Storage) GetRepl() *GetConfigurationProductsRepl {
	if o == nil {
		return nil
	}
	return o.Repl
}

type ExperimentationStatus string

const (
	ExperimentationStatusDisabled ExperimentationStatus = "disabled"
	ExperimentationStatusEnabled  ExperimentationStatus = "enabled"
)

func (e ExperimentationStatus) ToPointer() *ExperimentationStatus {
	return &e
}
func (e *ExperimentationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = ExperimentationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExperimentationStatus: %v", v)
	}
}

type GetConfigurationProductsExperimentation struct {
	Status                   ExperimentationStatus `json:"status"`
	EdgeConfigSyncingSupport *bool                 `json:"edgeConfigSyncingSupport,omitempty"`
}

func (o *GetConfigurationProductsExperimentation) GetStatus() ExperimentationStatus {
	if o == nil {
		return ExperimentationStatus("")
	}
	return o.Status
}

func (o *GetConfigurationProductsExperimentation) GetEdgeConfigSyncingSupport() *bool {
	if o == nil {
		return nil
	}
	return o.EdgeConfigSyncingSupport
}

type AiStatus string

const (
	AiStatusDisabled AiStatus = "disabled"
	AiStatusEnabled  AiStatus = "enabled"
)

func (e AiStatus) ToPointer() *AiStatus {
	return &e
}
func (e *AiStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = AiStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AiStatus: %v", v)
	}
}

type Ai struct {
	Status AiStatus `json:"status"`
}

func (o *Ai) GetStatus() AiStatus {
	if o == nil {
		return AiStatus("")
	}
	return o.Status
}

type AuthenticationStatus string

const (
	AuthenticationStatusDisabled AuthenticationStatus = "disabled"
	AuthenticationStatusEnabled  AuthenticationStatus = "enabled"
)

func (e AuthenticationStatus) ToPointer() *AuthenticationStatus {
	return &e
}
func (e *AuthenticationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = AuthenticationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthenticationStatus: %v", v)
	}
}

type Authentication struct {
	Status AuthenticationStatus `json:"status"`
}

func (o *Authentication) GetStatus() AuthenticationStatus {
	if o == nil {
		return AuthenticationStatus("")
	}
	return o.Status
}

type ObservabilityStatus string

const (
	ObservabilityStatusDisabled ObservabilityStatus = "disabled"
	ObservabilityStatusEnabled  ObservabilityStatus = "enabled"
)

func (e ObservabilityStatus) ToPointer() *ObservabilityStatus {
	return &e
}
func (e *ObservabilityStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = ObservabilityStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ObservabilityStatus: %v", v)
	}
}

type Observability struct {
	Status ObservabilityStatus `json:"status"`
}

func (o *Observability) GetStatus() ObservabilityStatus {
	if o == nil {
		return ObservabilityStatus("")
	}
	return o.Status
}

type VideoStatus string

const (
	VideoStatusDisabled VideoStatus = "disabled"
	VideoStatusEnabled  VideoStatus = "enabled"
)

func (e VideoStatus) ToPointer() *VideoStatus {
	return &e
}
func (e *VideoStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = VideoStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoStatus: %v", v)
	}
}

type Video struct {
	Status VideoStatus `json:"status"`
}

func (o *Video) GetStatus() VideoStatus {
	if o == nil {
		return VideoStatus("")
	}
	return o.Status
}

type WorkflowStatus string

const (
	WorkflowStatusDisabled WorkflowStatus = "disabled"
	WorkflowStatusEnabled  WorkflowStatus = "enabled"
)

func (e WorkflowStatus) ToPointer() *WorkflowStatus {
	return &e
}
func (e *WorkflowStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = WorkflowStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowStatus: %v", v)
	}
}

type Workflow struct {
	Status WorkflowStatus `json:"status"`
}

func (o *Workflow) GetStatus() WorkflowStatus {
	if o == nil {
		return WorkflowStatus("")
	}
	return o.Status
}

type GetConfigurationProductsChecksStatus string

const (
	GetConfigurationProductsChecksStatusDisabled GetConfigurationProductsChecksStatus = "disabled"
	GetConfigurationProductsChecksStatusEnabled  GetConfigurationProductsChecksStatus = "enabled"
)

func (e GetConfigurationProductsChecksStatus) ToPointer() *GetConfigurationProductsChecksStatus {
	return &e
}
func (e *GetConfigurationProductsChecksStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = GetConfigurationProductsChecksStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsChecksStatus: %v", v)
	}
}

type GetConfigurationProductsChecks struct {
	Status GetConfigurationProductsChecksStatus `json:"status"`
}

func (o *GetConfigurationProductsChecks) GetStatus() GetConfigurationProductsChecksStatus {
	if o == nil {
		return GetConfigurationProductsChecksStatus("")
	}
	return o.Status
}

type LogDrainStatus string

const (
	LogDrainStatusDisabled LogDrainStatus = "disabled"
	LogDrainStatusEnabled  LogDrainStatus = "enabled"
)

func (e LogDrainStatus) ToPointer() *LogDrainStatus {
	return &e
}
func (e *LogDrainStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = LogDrainStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LogDrainStatus: %v", v)
	}
}

type LogDrainFormat string

const (
	LogDrainFormatJSON   LogDrainFormat = "json"
	LogDrainFormatNdjson LogDrainFormat = "ndjson"
)

func (e LogDrainFormat) ToPointer() *LogDrainFormat {
	return &e
}
func (e *LogDrainFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "ndjson":
		*e = LogDrainFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LogDrainFormat: %v", v)
	}
}

type LogDrain struct {
	Status   LogDrainStatus    `json:"status"`
	Endpoint string            `json:"endpoint"`
	Headers  map[string]string `json:"headers,omitempty"`
	Format   LogDrainFormat    `json:"format"`
}

func (o *LogDrain) GetStatus() LogDrainStatus {
	if o == nil {
		return LogDrainStatus("")
	}
	return o.Status
}

func (o *LogDrain) GetEndpoint() string {
	if o == nil {
		return ""
	}
	return o.Endpoint
}

func (o *LogDrain) GetHeaders() map[string]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *LogDrain) GetFormat() LogDrainFormat {
	if o == nil {
		return LogDrainFormat("")
	}
	return o.Format
}

type TraceDrainStatus string

const (
	TraceDrainStatusDisabled TraceDrainStatus = "disabled"
	TraceDrainStatusEnabled  TraceDrainStatus = "enabled"
)

func (e TraceDrainStatus) ToPointer() *TraceDrainStatus {
	return &e
}
func (e *TraceDrainStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = TraceDrainStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TraceDrainStatus: %v", v)
	}
}

type TraceDrainFormat string

const (
	TraceDrainFormatJSON  TraceDrainFormat = "json"
	TraceDrainFormatProto TraceDrainFormat = "proto"
)

func (e TraceDrainFormat) ToPointer() *TraceDrainFormat {
	return &e
}
func (e *TraceDrainFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "proto":
		*e = TraceDrainFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TraceDrainFormat: %v", v)
	}
}

type TraceDrain struct {
	Status   TraceDrainStatus  `json:"status"`
	Endpoint string            `json:"endpoint"`
	Headers  map[string]string `json:"headers,omitempty"`
	Format   TraceDrainFormat  `json:"format"`
}

func (o *TraceDrain) GetStatus() TraceDrainStatus {
	if o == nil {
		return TraceDrainStatus("")
	}
	return o.Status
}

func (o *TraceDrain) GetEndpoint() string {
	if o == nil {
		return ""
	}
	return o.Endpoint
}

func (o *TraceDrain) GetHeaders() map[string]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *TraceDrain) GetFormat() TraceDrainFormat {
	if o == nil {
		return TraceDrainFormat("")
	}
	return o.Format
}

type MessagingStatus string

const (
	MessagingStatusDisabled MessagingStatus = "disabled"
	MessagingStatusEnabled  MessagingStatus = "enabled"
)

func (e MessagingStatus) ToPointer() *MessagingStatus {
	return &e
}
func (e *MessagingStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = MessagingStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessagingStatus: %v", v)
	}
}

type Messaging struct {
	Status MessagingStatus `json:"status"`
}

func (o *Messaging) GetStatus() MessagingStatus {
	if o == nil {
		return MessagingStatus("")
	}
	return o.Status
}

type OtherStatus string

const (
	OtherStatusDisabled OtherStatus = "disabled"
	OtherStatusEnabled  OtherStatus = "enabled"
)

func (e OtherStatus) ToPointer() *OtherStatus {
	return &e
}
func (e *OtherStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = OtherStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OtherStatus: %v", v)
	}
}

type Other struct {
	Status OtherStatus `json:"status"`
}

func (o *Other) GetStatus() OtherStatus {
	if o == nil {
		return OtherStatus("")
	}
	return o.Status
}

type Protocols struct {
	Storage         *Storage                                 `json:"storage,omitempty"`
	Experimentation *GetConfigurationProductsExperimentation `json:"experimentation,omitempty"`
	Ai              *Ai                                      `json:"ai,omitempty"`
	Authentication  *Authentication                          `json:"authentication,omitempty"`
	Observability   *Observability                           `json:"observability,omitempty"`
	Video           *Video                                   `json:"video,omitempty"`
	Workflow        *Workflow                                `json:"workflow,omitempty"`
	Checks          *GetConfigurationProductsChecks          `json:"checks,omitempty"`
	LogDrain        *LogDrain                                `json:"logDrain,omitempty"`
	TraceDrain      *TraceDrain                              `json:"traceDrain,omitempty"`
	Messaging       *Messaging                               `json:"messaging,omitempty"`
	Other           *Other                                   `json:"other,omitempty"`
}

func (o *Protocols) GetStorage() *Storage {
	if o == nil {
		return nil
	}
	return o.Storage
}

func (o *Protocols) GetExperimentation() *GetConfigurationProductsExperimentation {
	if o == nil {
		return nil
	}
	return o.Experimentation
}

func (o *Protocols) GetAi() *Ai {
	if o == nil {
		return nil
	}
	return o.Ai
}

func (o *Protocols) GetAuthentication() *Authentication {
	if o == nil {
		return nil
	}
	return o.Authentication
}

func (o *Protocols) GetObservability() *Observability {
	if o == nil {
		return nil
	}
	return o.Observability
}

func (o *Protocols) GetVideo() *Video {
	if o == nil {
		return nil
	}
	return o.Video
}

func (o *Protocols) GetWorkflow() *Workflow {
	if o == nil {
		return nil
	}
	return o.Workflow
}

func (o *Protocols) GetChecks() *GetConfigurationProductsChecks {
	if o == nil {
		return nil
	}
	return o.Checks
}

func (o *Protocols) GetLogDrain() *LogDrain {
	if o == nil {
		return nil
	}
	return o.LogDrain
}

func (o *Protocols) GetTraceDrain() *TraceDrain {
	if o == nil {
		return nil
	}
	return o.TraceDrain
}

func (o *Protocols) GetMessaging() *Messaging {
	if o == nil {
		return nil
	}
	return o.Messaging
}

func (o *Protocols) GetOther() *Other {
	if o == nil {
		return nil
	}
	return o.Other
}

type PrimaryProtocol string

const (
	PrimaryProtocolStorage         PrimaryProtocol = "storage"
	PrimaryProtocolExperimentation PrimaryProtocol = "experimentation"
	PrimaryProtocolAi              PrimaryProtocol = "ai"
	PrimaryProtocolObservability   PrimaryProtocol = "observability"
	PrimaryProtocolVideo           PrimaryProtocol = "video"
	PrimaryProtocolAuthentication  PrimaryProtocol = "authentication"
	PrimaryProtocolWorkflow        PrimaryProtocol = "workflow"
	PrimaryProtocolChecks          PrimaryProtocol = "checks"
	PrimaryProtocolLogDrain        PrimaryProtocol = "logDrain"
	PrimaryProtocolTraceDrain      PrimaryProtocol = "traceDrain"
	PrimaryProtocolMessaging       PrimaryProtocol = "messaging"
	PrimaryProtocolOther           PrimaryProtocol = "other"
)

func (e PrimaryProtocol) ToPointer() *PrimaryProtocol {
	return &e
}
func (e *PrimaryProtocol) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "storage":
		fallthrough
	case "experimentation":
		fallthrough
	case "ai":
		fallthrough
	case "observability":
		fallthrough
	case "video":
		fallthrough
	case "authentication":
		fallthrough
	case "workflow":
		fallthrough
	case "checks":
		fallthrough
	case "logDrain":
		fallthrough
	case "traceDrain":
		fallthrough
	case "messaging":
		fallthrough
	case "other":
		*e = PrimaryProtocol(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrimaryProtocol: %v", v)
	}
}

type GetConfigurationProductsType string

const (
	GetConfigurationProductsTypeObject GetConfigurationProductsType = "object"
)

func (e GetConfigurationProductsType) ToPointer() *GetConfigurationProductsType {
	return &e
}
func (e *GetConfigurationProductsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object":
		*e = GetConfigurationProductsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsType: %v", v)
	}
}

type ValueAtBRANDAt626754 struct {
}

func (v ValueAtBRANDAt626754) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *ValueAtBRANDAt626754) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsValue struct {
	AtBRANDAt626754 ValueAtBRANDAt626754 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsValue) GetAtBRANDAt626754() ValueAtBRANDAt626754 {
	if o == nil {
		return ValueAtBRANDAt626754{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsDisabledEnum string

const (
	GetConfigurationProductsDisabledEnumUpdate GetConfigurationProductsDisabledEnum = "update"
	GetConfigurationProductsDisabledEnumCreate GetConfigurationProductsDisabledEnum = "create"
)

func (e GetConfigurationProductsDisabledEnum) ToPointer() *GetConfigurationProductsDisabledEnum {
	return &e
}
func (e *GetConfigurationProductsDisabledEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsDisabledEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsDisabledEnum: %v", v)
	}
}

type GetConfigurationProductsDisabled struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsDisabled) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsDisabled) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsDisabled) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsDisabledUnionType string

const (
	GetConfigurationProductsDisabledUnionTypeBoolean                              GetConfigurationProductsDisabledUnionType = "boolean"
	GetConfigurationProductsDisabledUnionTypeGetConfigurationProductsDisabled     GetConfigurationProductsDisabledUnionType = "getConfigurationProducts_disabled"
	GetConfigurationProductsDisabledUnionTypeGetConfigurationProductsDisabledEnum GetConfigurationProductsDisabledUnionType = "getConfigurationProducts_disabled_enum"
)

type GetConfigurationProductsDisabledUnion struct {
	Boolean                              *bool                                 `queryParam:"inline"`
	GetConfigurationProductsDisabled     *GetConfigurationProductsDisabled     `queryParam:"inline"`
	GetConfigurationProductsDisabledEnum *GetConfigurationProductsDisabledEnum `queryParam:"inline"`

	Type GetConfigurationProductsDisabledUnionType
}

func CreateGetConfigurationProductsDisabledUnionBoolean(boolean bool) GetConfigurationProductsDisabledUnion {
	typ := GetConfigurationProductsDisabledUnionTypeBoolean

	return GetConfigurationProductsDisabledUnion{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsDisabledUnionGetConfigurationProductsDisabled(getConfigurationProductsDisabled GetConfigurationProductsDisabled) GetConfigurationProductsDisabledUnion {
	typ := GetConfigurationProductsDisabledUnionTypeGetConfigurationProductsDisabled

	return GetConfigurationProductsDisabledUnion{
		GetConfigurationProductsDisabled: &getConfigurationProductsDisabled,
		Type:                             typ,
	}
}

func CreateGetConfigurationProductsDisabledUnionGetConfigurationProductsDisabledEnum(getConfigurationProductsDisabledEnum GetConfigurationProductsDisabledEnum) GetConfigurationProductsDisabledUnion {
	typ := GetConfigurationProductsDisabledUnionTypeGetConfigurationProductsDisabledEnum

	return GetConfigurationProductsDisabledUnion{
		GetConfigurationProductsDisabledEnum: &getConfigurationProductsDisabledEnum,
		Type:                                 typ,
	}
}

func (u *GetConfigurationProductsDisabledUnion) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsDisabled GetConfigurationProductsDisabled = GetConfigurationProductsDisabled{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsDisabled, "", true, nil); err == nil {
		u.GetConfigurationProductsDisabled = &getConfigurationProductsDisabled
		u.Type = GetConfigurationProductsDisabledUnionTypeGetConfigurationProductsDisabled
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsDisabledUnionTypeBoolean
		return nil
	}

	var getConfigurationProductsDisabledEnum GetConfigurationProductsDisabledEnum = GetConfigurationProductsDisabledEnum("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsDisabledEnum, "", true, nil); err == nil {
		u.GetConfigurationProductsDisabledEnum = &getConfigurationProductsDisabledEnum
		u.Type = GetConfigurationProductsDisabledUnionTypeGetConfigurationProductsDisabledEnum
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsDisabledUnion", string(data))
}

func (u GetConfigurationProductsDisabledUnion) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsDisabled != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsDisabled, "", true)
	}

	if u.GetConfigurationProductsDisabledEnum != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsDisabledEnum, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsDisabledUnion: all fields are null")
}

type GetConfigurationProductsHiddenEnum string

const (
	GetConfigurationProductsHiddenEnumUpdate GetConfigurationProductsHiddenEnum = "update"
	GetConfigurationProductsHiddenEnumCreate GetConfigurationProductsHiddenEnum = "create"
)

func (e GetConfigurationProductsHiddenEnum) ToPointer() *GetConfigurationProductsHiddenEnum {
	return &e
}
func (e *GetConfigurationProductsHiddenEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsHiddenEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsHiddenEnum: %v", v)
	}
}

type GetConfigurationProductsHidden struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsHidden) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsHidden) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsHidden) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsHiddenUnionType string

const (
	GetConfigurationProductsHiddenUnionTypeBoolean                            GetConfigurationProductsHiddenUnionType = "boolean"
	GetConfigurationProductsHiddenUnionTypeGetConfigurationProductsHidden     GetConfigurationProductsHiddenUnionType = "getConfigurationProducts_hidden"
	GetConfigurationProductsHiddenUnionTypeGetConfigurationProductsHiddenEnum GetConfigurationProductsHiddenUnionType = "getConfigurationProducts_hidden_enum"
)

type GetConfigurationProductsHiddenUnion struct {
	Boolean                            *bool                               `queryParam:"inline"`
	GetConfigurationProductsHidden     *GetConfigurationProductsHidden     `queryParam:"inline"`
	GetConfigurationProductsHiddenEnum *GetConfigurationProductsHiddenEnum `queryParam:"inline"`

	Type GetConfigurationProductsHiddenUnionType
}

func CreateGetConfigurationProductsHiddenUnionBoolean(boolean bool) GetConfigurationProductsHiddenUnion {
	typ := GetConfigurationProductsHiddenUnionTypeBoolean

	return GetConfigurationProductsHiddenUnion{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsHiddenUnionGetConfigurationProductsHidden(getConfigurationProductsHidden GetConfigurationProductsHidden) GetConfigurationProductsHiddenUnion {
	typ := GetConfigurationProductsHiddenUnionTypeGetConfigurationProductsHidden

	return GetConfigurationProductsHiddenUnion{
		GetConfigurationProductsHidden: &getConfigurationProductsHidden,
		Type:                           typ,
	}
}

func CreateGetConfigurationProductsHiddenUnionGetConfigurationProductsHiddenEnum(getConfigurationProductsHiddenEnum GetConfigurationProductsHiddenEnum) GetConfigurationProductsHiddenUnion {
	typ := GetConfigurationProductsHiddenUnionTypeGetConfigurationProductsHiddenEnum

	return GetConfigurationProductsHiddenUnion{
		GetConfigurationProductsHiddenEnum: &getConfigurationProductsHiddenEnum,
		Type:                               typ,
	}
}

func (u *GetConfigurationProductsHiddenUnion) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsHidden GetConfigurationProductsHidden = GetConfigurationProductsHidden{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsHidden, "", true, nil); err == nil {
		u.GetConfigurationProductsHidden = &getConfigurationProductsHidden
		u.Type = GetConfigurationProductsHiddenUnionTypeGetConfigurationProductsHidden
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsHiddenUnionTypeBoolean
		return nil
	}

	var getConfigurationProductsHiddenEnum GetConfigurationProductsHiddenEnum = GetConfigurationProductsHiddenEnum("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsHiddenEnum, "", true, nil); err == nil {
		u.GetConfigurationProductsHiddenEnum = &getConfigurationProductsHiddenEnum
		u.Type = GetConfigurationProductsHiddenUnionTypeGetConfigurationProductsHiddenEnum
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsHiddenUnion", string(data))
}

func (u GetConfigurationProductsHiddenUnion) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsHidden != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsHidden, "", true)
	}

	if u.GetConfigurationProductsHiddenEnum != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsHiddenEnum, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsHiddenUnion: all fields are null")
}

type GetConfigurationProductsProperties struct {
	Value    GetConfigurationProductsValue          `json:"value"`
	Disabled *GetConfigurationProductsDisabledUnion `json:"disabled,omitempty"`
	Hidden   *GetConfigurationProductsHiddenUnion   `json:"hidden,omitempty"`
}

func (g GetConfigurationProductsProperties) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsProperties) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"value"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsProperties) GetValue() GetConfigurationProductsValue {
	if o == nil {
		return GetConfigurationProductsValue{}
	}
	return o.Value
}

func (o *GetConfigurationProductsProperties) GetDisabled() *GetConfigurationProductsDisabledUnion {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *GetConfigurationProductsProperties) GetHidden() *GetConfigurationProductsHiddenUnion {
	if o == nil {
		return nil
	}
	return o.Hidden
}

type GetConfigurationProductsTypeString6 string

const (
	GetConfigurationProductsTypeString6String GetConfigurationProductsTypeString6 = "string"
)

func (e GetConfigurationProductsTypeString6) ToPointer() *GetConfigurationProductsTypeString6 {
	return &e
}
func (e *GetConfigurationProductsTypeString6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		*e = GetConfigurationProductsTypeString6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeString6: %v", v)
	}
}

type GetConfigurationProductsUIControlDomain string

const (
	GetConfigurationProductsUIControlDomainDomain GetConfigurationProductsUIControlDomain = "domain"
)

func (e GetConfigurationProductsUIControlDomain) ToPointer() *GetConfigurationProductsUIControlDomain {
	return &e
}
func (e *GetConfigurationProductsUIControlDomain) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "domain":
		*e = GetConfigurationProductsUIControlDomain(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlDomain: %v", v)
	}
}

type MinLengthAtBRANDAt6267544 struct {
}

func (m MinLengthAtBRANDAt6267544) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MinLengthAtBRANDAt6267544) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMinLength4 struct {
	AtBRANDAt626754 MinLengthAtBRANDAt6267544 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMinLength4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMinLength4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMinLength4) GetAtBRANDAt626754() MinLengthAtBRANDAt6267544 {
	if o == nil {
		return MinLengthAtBRANDAt6267544{}
	}
	return o.AtBRANDAt626754
}

type MaxLengthAtBRANDAt6267544 struct {
}

func (m MaxLengthAtBRANDAt6267544) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MaxLengthAtBRANDAt6267544) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMaxLength4 struct {
	AtBRANDAt626754 MaxLengthAtBRANDAt6267544 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMaxLength4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMaxLength4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMaxLength4) GetAtBRANDAt626754() MaxLengthAtBRANDAt6267544 {
	if o == nil {
		return MaxLengthAtBRANDAt6267544{}
	}
	return o.AtBRANDAt626754
}

type PatternAtBRANDAt6267544 struct {
}

func (p PatternAtBRANDAt6267544) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatternAtBRANDAt6267544) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsPattern4 struct {
	AtBRANDAt626754 PatternAtBRANDAt6267544 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsPattern4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPattern4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPattern4) GetAtBRANDAt626754() PatternAtBRANDAt6267544 {
	if o == nil {
		return PatternAtBRANDAt6267544{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIReadOnlyEnum9 string

const (
	GetConfigurationProductsUIReadOnlyEnum9Update GetConfigurationProductsUIReadOnlyEnum9 = "update"
	GetConfigurationProductsUIReadOnlyEnum9Create GetConfigurationProductsUIReadOnlyEnum9 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum9) ToPointer() *GetConfigurationProductsUIReadOnlyEnum9 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum9) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum9(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum9: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly9 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly9) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly9) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly9) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion9Type string

const (
	GetConfigurationProductsUIReadOnlyUnion9TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion9Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion9TypeGetConfigurationProductsUIReadOnly9     GetConfigurationProductsUIReadOnlyUnion9Type = "getConfigurationProducts_ui:read-only_9"
	GetConfigurationProductsUIReadOnlyUnion9TypeGetConfigurationProductsUIReadOnlyEnum9 GetConfigurationProductsUIReadOnlyUnion9Type = "getConfigurationProducts_ui:read-only_enum_9"
)

type GetConfigurationProductsUIReadOnlyUnion9 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly9     *GetConfigurationProductsUIReadOnly9     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum9 *GetConfigurationProductsUIReadOnlyEnum9 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion9Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion9Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion9 {
	typ := GetConfigurationProductsUIReadOnlyUnion9TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion9{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion9GetConfigurationProductsUIReadOnly9(getConfigurationProductsUIReadOnly9 GetConfigurationProductsUIReadOnly9) GetConfigurationProductsUIReadOnlyUnion9 {
	typ := GetConfigurationProductsUIReadOnlyUnion9TypeGetConfigurationProductsUIReadOnly9

	return GetConfigurationProductsUIReadOnlyUnion9{
		GetConfigurationProductsUIReadOnly9: &getConfigurationProductsUIReadOnly9,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion9GetConfigurationProductsUIReadOnlyEnum9(getConfigurationProductsUIReadOnlyEnum9 GetConfigurationProductsUIReadOnlyEnum9) GetConfigurationProductsUIReadOnlyUnion9 {
	typ := GetConfigurationProductsUIReadOnlyUnion9TypeGetConfigurationProductsUIReadOnlyEnum9

	return GetConfigurationProductsUIReadOnlyUnion9{
		GetConfigurationProductsUIReadOnlyEnum9: &getConfigurationProductsUIReadOnlyEnum9,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion9) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly9 GetConfigurationProductsUIReadOnly9 = GetConfigurationProductsUIReadOnly9{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly9, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly9 = &getConfigurationProductsUIReadOnly9
		u.Type = GetConfigurationProductsUIReadOnlyUnion9TypeGetConfigurationProductsUIReadOnly9
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion9TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum9 GetConfigurationProductsUIReadOnlyEnum9 = GetConfigurationProductsUIReadOnlyEnum9("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum9, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum9 = &getConfigurationProductsUIReadOnlyEnum9
		u.Type = GetConfigurationProductsUIReadOnlyUnion9TypeGetConfigurationProductsUIReadOnlyEnum9
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion9", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion9) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly9 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly9, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum9 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum9, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion9: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum9 string

const (
	GetConfigurationProductsUIHiddenEnum9Update GetConfigurationProductsUIHiddenEnum9 = "update"
	GetConfigurationProductsUIHiddenEnum9Create GetConfigurationProductsUIHiddenEnum9 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum9) ToPointer() *GetConfigurationProductsUIHiddenEnum9 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum9) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum9(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum9: %v", v)
	}
}

type GetConfigurationProductsUIHidden9 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden9) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden9) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden9) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion9Type string

const (
	GetConfigurationProductsUIHiddenUnion9TypeBoolean                               GetConfigurationProductsUIHiddenUnion9Type = "boolean"
	GetConfigurationProductsUIHiddenUnion9TypeGetConfigurationProductsUIHidden9     GetConfigurationProductsUIHiddenUnion9Type = "getConfigurationProducts_ui:hidden_9"
	GetConfigurationProductsUIHiddenUnion9TypeGetConfigurationProductsUIHiddenEnum9 GetConfigurationProductsUIHiddenUnion9Type = "getConfigurationProducts_ui:hidden_enum_9"
)

type GetConfigurationProductsUIHiddenUnion9 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden9     *GetConfigurationProductsUIHidden9     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum9 *GetConfigurationProductsUIHiddenEnum9 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion9Type
}

func CreateGetConfigurationProductsUIHiddenUnion9Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion9 {
	typ := GetConfigurationProductsUIHiddenUnion9TypeBoolean

	return GetConfigurationProductsUIHiddenUnion9{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion9GetConfigurationProductsUIHidden9(getConfigurationProductsUIHidden9 GetConfigurationProductsUIHidden9) GetConfigurationProductsUIHiddenUnion9 {
	typ := GetConfigurationProductsUIHiddenUnion9TypeGetConfigurationProductsUIHidden9

	return GetConfigurationProductsUIHiddenUnion9{
		GetConfigurationProductsUIHidden9: &getConfigurationProductsUIHidden9,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion9GetConfigurationProductsUIHiddenEnum9(getConfigurationProductsUIHiddenEnum9 GetConfigurationProductsUIHiddenEnum9) GetConfigurationProductsUIHiddenUnion9 {
	typ := GetConfigurationProductsUIHiddenUnion9TypeGetConfigurationProductsUIHiddenEnum9

	return GetConfigurationProductsUIHiddenUnion9{
		GetConfigurationProductsUIHiddenEnum9: &getConfigurationProductsUIHiddenEnum9,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion9) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden9 GetConfigurationProductsUIHidden9 = GetConfigurationProductsUIHidden9{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden9, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden9 = &getConfigurationProductsUIHidden9
		u.Type = GetConfigurationProductsUIHiddenUnion9TypeGetConfigurationProductsUIHidden9
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion9TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum9 GetConfigurationProductsUIHiddenEnum9 = GetConfigurationProductsUIHiddenEnum9("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum9, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum9 = &getConfigurationProductsUIHiddenEnum9
		u.Type = GetConfigurationProductsUIHiddenUnion9TypeGetConfigurationProductsUIHiddenEnum9
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion9", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion9) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden9 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden9, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum9 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum9, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion9: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum9 string

const (
	GetConfigurationProductsUIDisabledEnum9Update GetConfigurationProductsUIDisabledEnum9 = "update"
	GetConfigurationProductsUIDisabledEnum9Create GetConfigurationProductsUIDisabledEnum9 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum9) ToPointer() *GetConfigurationProductsUIDisabledEnum9 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum9) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum9(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum9: %v", v)
	}
}

type GetConfigurationProductsUIDisabled9 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled9) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled9) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled9) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion9Type string

const (
	GetConfigurationProductsUIDisabledUnion9TypeBoolean                                 GetConfigurationProductsUIDisabledUnion9Type = "boolean"
	GetConfigurationProductsUIDisabledUnion9TypeGetConfigurationProductsUIDisabled9     GetConfigurationProductsUIDisabledUnion9Type = "getConfigurationProducts_ui:disabled_9"
	GetConfigurationProductsUIDisabledUnion9TypeGetConfigurationProductsUIDisabledEnum9 GetConfigurationProductsUIDisabledUnion9Type = "getConfigurationProducts_ui:disabled_enum_9"
)

type GetConfigurationProductsUIDisabledUnion9 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled9     *GetConfigurationProductsUIDisabled9     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum9 *GetConfigurationProductsUIDisabledEnum9 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion9Type
}

func CreateGetConfigurationProductsUIDisabledUnion9Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion9 {
	typ := GetConfigurationProductsUIDisabledUnion9TypeBoolean

	return GetConfigurationProductsUIDisabledUnion9{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion9GetConfigurationProductsUIDisabled9(getConfigurationProductsUIDisabled9 GetConfigurationProductsUIDisabled9) GetConfigurationProductsUIDisabledUnion9 {
	typ := GetConfigurationProductsUIDisabledUnion9TypeGetConfigurationProductsUIDisabled9

	return GetConfigurationProductsUIDisabledUnion9{
		GetConfigurationProductsUIDisabled9: &getConfigurationProductsUIDisabled9,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion9GetConfigurationProductsUIDisabledEnum9(getConfigurationProductsUIDisabledEnum9 GetConfigurationProductsUIDisabledEnum9) GetConfigurationProductsUIDisabledUnion9 {
	typ := GetConfigurationProductsUIDisabledUnion9TypeGetConfigurationProductsUIDisabledEnum9

	return GetConfigurationProductsUIDisabledUnion9{
		GetConfigurationProductsUIDisabledEnum9: &getConfigurationProductsUIDisabledEnum9,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion9) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled9 GetConfigurationProductsUIDisabled9 = GetConfigurationProductsUIDisabled9{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled9, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled9 = &getConfigurationProductsUIDisabled9
		u.Type = GetConfigurationProductsUIDisabledUnion9TypeGetConfigurationProductsUIDisabled9
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion9TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum9 GetConfigurationProductsUIDisabledEnum9 = GetConfigurationProductsUIDisabledEnum9("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum9, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum9 = &getConfigurationProductsUIDisabledEnum9
		u.Type = GetConfigurationProductsUIDisabledUnion9TypeGetConfigurationProductsUIDisabledEnum9
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion9", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion9) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled9 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled9, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum9 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum9, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion9: all fields are null")
}

type GetConfigurationProductsUIDescription9 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription9) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription9) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription9) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion9Type string

const (
	GetConfigurationProductsUIDescriptionUnion9TypeStr                                    GetConfigurationProductsUIDescriptionUnion9Type = "str"
	GetConfigurationProductsUIDescriptionUnion9TypeGetConfigurationProductsUIDescription9 GetConfigurationProductsUIDescriptionUnion9Type = "getConfigurationProducts_ui:description_9"
)

type GetConfigurationProductsUIDescriptionUnion9 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription9 *GetConfigurationProductsUIDescription9 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion9Type
}

func CreateGetConfigurationProductsUIDescriptionUnion9Str(str string) GetConfigurationProductsUIDescriptionUnion9 {
	typ := GetConfigurationProductsUIDescriptionUnion9TypeStr

	return GetConfigurationProductsUIDescriptionUnion9{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion9GetConfigurationProductsUIDescription9(getConfigurationProductsUIDescription9 GetConfigurationProductsUIDescription9) GetConfigurationProductsUIDescriptionUnion9 {
	typ := GetConfigurationProductsUIDescriptionUnion9TypeGetConfigurationProductsUIDescription9

	return GetConfigurationProductsUIDescriptionUnion9{
		GetConfigurationProductsUIDescription9: &getConfigurationProductsUIDescription9,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion9) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription9 GetConfigurationProductsUIDescription9 = GetConfigurationProductsUIDescription9{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription9, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription9 = &getConfigurationProductsUIDescription9
		u.Type = GetConfigurationProductsUIDescriptionUnion9TypeGetConfigurationProductsUIDescription9
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion9TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion9", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion9) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription9 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription9, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion9: all fields are null")
}

type GetConfigurationProductsUIFormattedValue9 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue9) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue9) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue9) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesDomain struct {
	Type             GetConfigurationProductsTypeString6          `json:"type"`
	UIControl        GetConfigurationProductsUIControlDomain      `json:"ui:control"`
	Description      *string                                      `json:"description,omitempty"`
	MinLength        *GetConfigurationProductsMinLength4          `json:"minLength,omitempty"`
	MaxLength        *GetConfigurationProductsMaxLength4          `json:"maxLength,omitempty"`
	Pattern          *GetConfigurationProductsPattern4            `json:"pattern,omitempty"`
	Default          *string                                      `json:"default,omitempty"`
	Enum             []string                                     `json:"enum,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion9    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion9      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion9    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion9 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue9   `json:"ui:formatted-value,omitempty"`
	UIPlaceholder    *string                                      `json:"ui:placeholder,omitempty"`
}

func (g GetConfigurationProductsPropertiesDomain) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesDomain) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesDomain) GetType() GetConfigurationProductsTypeString6 {
	if o == nil {
		return GetConfigurationProductsTypeString6("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesDomain) GetUIControl() GetConfigurationProductsUIControlDomain {
	if o == nil {
		return GetConfigurationProductsUIControlDomain("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesDomain) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesDomain) GetMinLength() *GetConfigurationProductsMinLength4 {
	if o == nil {
		return nil
	}
	return o.MinLength
}

func (o *GetConfigurationProductsPropertiesDomain) GetMaxLength() *GetConfigurationProductsMaxLength4 {
	if o == nil {
		return nil
	}
	return o.MaxLength
}

func (o *GetConfigurationProductsPropertiesDomain) GetPattern() *GetConfigurationProductsPattern4 {
	if o == nil {
		return nil
	}
	return o.Pattern
}

func (o *GetConfigurationProductsPropertiesDomain) GetDefault() *string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsPropertiesDomain) GetEnum() []string {
	if o == nil {
		return nil
	}
	return o.Enum
}

func (o *GetConfigurationProductsPropertiesDomain) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesDomain) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion9 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesDomain) GetUIHidden() *GetConfigurationProductsUIHiddenUnion9 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesDomain) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion9 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesDomain) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion9 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesDomain) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue9 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *GetConfigurationProductsPropertiesDomain) GetUIPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.UIPlaceholder
}

type GetConfigurationProductsTypeArray3 string

const (
	GetConfigurationProductsTypeArray3Array GetConfigurationProductsTypeArray3 = "array"
)

func (e GetConfigurationProductsTypeArray3) ToPointer() *GetConfigurationProductsTypeArray3 {
	return &e
}
func (e *GetConfigurationProductsTypeArray3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "array":
		*e = GetConfigurationProductsTypeArray3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeArray3: %v", v)
	}
}

type UIControlMultiVercelRegion string

const (
	UIControlMultiVercelRegionMultiVercelRegion UIControlMultiVercelRegion = "multi-vercel-region"
)

func (e UIControlMultiVercelRegion) ToPointer() *UIControlMultiVercelRegion {
	return &e
}
func (e *UIControlMultiVercelRegion) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "multi-vercel-region":
		*e = UIControlMultiVercelRegion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UIControlMultiVercelRegion: %v", v)
	}
}

type GetConfigurationProductsTypeString5 string

const (
	GetConfigurationProductsTypeString5String GetConfigurationProductsTypeString5 = "string"
)

func (e GetConfigurationProductsTypeString5) ToPointer() *GetConfigurationProductsTypeString5 {
	return &e
}
func (e *GetConfigurationProductsTypeString5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		*e = GetConfigurationProductsTypeString5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeString5: %v", v)
	}
}

type MinLengthAtBRANDAt626754String2 struct {
}

func (m MinLengthAtBRANDAt626754String2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MinLengthAtBRANDAt626754String2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMinLengthString2 struct {
	AtBRANDAt626754 MinLengthAtBRANDAt626754String2 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMinLengthString2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMinLengthString2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMinLengthString2) GetAtBRANDAt626754() MinLengthAtBRANDAt626754String2 {
	if o == nil {
		return MinLengthAtBRANDAt626754String2{}
	}
	return o.AtBRANDAt626754
}

type MaxLengthAtBRANDAt626754String2 struct {
}

func (m MaxLengthAtBRANDAt626754String2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MaxLengthAtBRANDAt626754String2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMaxLengthString2 struct {
	AtBRANDAt626754 MaxLengthAtBRANDAt626754String2 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMaxLengthString2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMaxLengthString2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMaxLengthString2) GetAtBRANDAt626754() MaxLengthAtBRANDAt626754String2 {
	if o == nil {
		return MaxLengthAtBRANDAt626754String2{}
	}
	return o.AtBRANDAt626754
}

type PatternAtBRANDAt626754String2 struct {
}

func (p PatternAtBRANDAt626754String2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatternAtBRANDAt626754String2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsPatternString2 struct {
	AtBRANDAt626754 PatternAtBRANDAt626754String2 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsPatternString2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPatternString2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPatternString2) GetAtBRANDAt626754() PatternAtBRANDAt626754String2 {
	if o == nil {
		return PatternAtBRANDAt626754String2{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsItemsString2 struct {
	Type        GetConfigurationProductsTypeString5       `json:"type"`
	Description *string                                   `json:"description,omitempty"`
	MinLength   *GetConfigurationProductsMinLengthString2 `json:"minLength,omitempty"`
	MaxLength   *GetConfigurationProductsMaxLengthString2 `json:"maxLength,omitempty"`
	Pattern     *GetConfigurationProductsPatternString2   `json:"pattern,omitempty"`
	Default     *string                                   `json:"default,omitempty"`
	Enum        []string                                  `json:"enum,omitempty"`
}

func (g GetConfigurationProductsItemsString2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsItemsString2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsItemsString2) GetType() GetConfigurationProductsTypeString5 {
	if o == nil {
		return GetConfigurationProductsTypeString5("")
	}
	return o.Type
}

func (o *GetConfigurationProductsItemsString2) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsItemsString2) GetMinLength() *GetConfigurationProductsMinLengthString2 {
	if o == nil {
		return nil
	}
	return o.MinLength
}

func (o *GetConfigurationProductsItemsString2) GetMaxLength() *GetConfigurationProductsMaxLengthString2 {
	if o == nil {
		return nil
	}
	return o.MaxLength
}

func (o *GetConfigurationProductsItemsString2) GetPattern() *GetConfigurationProductsPatternString2 {
	if o == nil {
		return nil
	}
	return o.Pattern
}

func (o *GetConfigurationProductsItemsString2) GetDefault() *string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsItemsString2) GetEnum() []string {
	if o == nil {
		return nil
	}
	return o.Enum
}

type UIOptionValueAtBRANDAt6267542 struct {
}

func (u UIOptionValueAtBRANDAt6267542) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UIOptionValueAtBRANDAt6267542) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsUIOptionValue2 struct {
	AtBRANDAt626754 UIOptionValueAtBRANDAt6267542 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsUIOptionValue2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionValue2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionValue2) GetAtBRANDAt626754() UIOptionValueAtBRANDAt6267542 {
	if o == nil {
		return UIOptionValueAtBRANDAt6267542{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIOptionDisabledEnum4 string

const (
	GetConfigurationProductsUIOptionDisabledEnum4Update GetConfigurationProductsUIOptionDisabledEnum4 = "update"
	GetConfigurationProductsUIOptionDisabledEnum4Create GetConfigurationProductsUIOptionDisabledEnum4 = "create"
)

func (e GetConfigurationProductsUIOptionDisabledEnum4) ToPointer() *GetConfigurationProductsUIOptionDisabledEnum4 {
	return &e
}
func (e *GetConfigurationProductsUIOptionDisabledEnum4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionDisabledEnum4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionDisabledEnum4: %v", v)
	}
}

type GetConfigurationProductsUIOptionDisabled4 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionDisabled4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionDisabled4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionDisabled4) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionDisabledUnion6Type string

const (
	GetConfigurationProductsUIOptionDisabledUnion6TypeBoolean                                       GetConfigurationProductsUIOptionDisabledUnion6Type = "boolean"
	GetConfigurationProductsUIOptionDisabledUnion6TypeGetConfigurationProductsUIOptionDisabled4     GetConfigurationProductsUIOptionDisabledUnion6Type = "getConfigurationProducts_ui:option_disabled_4"
	GetConfigurationProductsUIOptionDisabledUnion6TypeGetConfigurationProductsUIOptionDisabledEnum4 GetConfigurationProductsUIOptionDisabledUnion6Type = "getConfigurationProducts_ui:option_disabled_enum_4"
)

type GetConfigurationProductsUIOptionDisabledUnion6 struct {
	Boolean                                       *bool                                          `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabled4     *GetConfigurationProductsUIOptionDisabled4     `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabledEnum4 *GetConfigurationProductsUIOptionDisabledEnum4 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionDisabledUnion6Type
}

func CreateGetConfigurationProductsUIOptionDisabledUnion6Boolean(boolean bool) GetConfigurationProductsUIOptionDisabledUnion6 {
	typ := GetConfigurationProductsUIOptionDisabledUnion6TypeBoolean

	return GetConfigurationProductsUIOptionDisabledUnion6{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion6GetConfigurationProductsUIOptionDisabled4(getConfigurationProductsUIOptionDisabled4 GetConfigurationProductsUIOptionDisabled4) GetConfigurationProductsUIOptionDisabledUnion6 {
	typ := GetConfigurationProductsUIOptionDisabledUnion6TypeGetConfigurationProductsUIOptionDisabled4

	return GetConfigurationProductsUIOptionDisabledUnion6{
		GetConfigurationProductsUIOptionDisabled4: &getConfigurationProductsUIOptionDisabled4,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion6GetConfigurationProductsUIOptionDisabledEnum4(getConfigurationProductsUIOptionDisabledEnum4 GetConfigurationProductsUIOptionDisabledEnum4) GetConfigurationProductsUIOptionDisabledUnion6 {
	typ := GetConfigurationProductsUIOptionDisabledUnion6TypeGetConfigurationProductsUIOptionDisabledEnum4

	return GetConfigurationProductsUIOptionDisabledUnion6{
		GetConfigurationProductsUIOptionDisabledEnum4: &getConfigurationProductsUIOptionDisabledEnum4,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionDisabledUnion6) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionDisabled4 GetConfigurationProductsUIOptionDisabled4 = GetConfigurationProductsUIOptionDisabled4{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabled4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabled4 = &getConfigurationProductsUIOptionDisabled4
		u.Type = GetConfigurationProductsUIOptionDisabledUnion6TypeGetConfigurationProductsUIOptionDisabled4
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionDisabledUnion6TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionDisabledEnum4 GetConfigurationProductsUIOptionDisabledEnum4 = GetConfigurationProductsUIOptionDisabledEnum4("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabledEnum4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabledEnum4 = &getConfigurationProductsUIOptionDisabledEnum4
		u.Type = GetConfigurationProductsUIOptionDisabledUnion6TypeGetConfigurationProductsUIOptionDisabledEnum4
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionDisabledUnion6", string(data))
}

func (u GetConfigurationProductsUIOptionDisabledUnion6) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabled4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabled4, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabledEnum4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabledEnum4, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionDisabledUnion6: all fields are null")
}

type GetConfigurationProductsUIOptionHiddenEnum4 string

const (
	GetConfigurationProductsUIOptionHiddenEnum4Update GetConfigurationProductsUIOptionHiddenEnum4 = "update"
	GetConfigurationProductsUIOptionHiddenEnum4Create GetConfigurationProductsUIOptionHiddenEnum4 = "create"
)

func (e GetConfigurationProductsUIOptionHiddenEnum4) ToPointer() *GetConfigurationProductsUIOptionHiddenEnum4 {
	return &e
}
func (e *GetConfigurationProductsUIOptionHiddenEnum4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionHiddenEnum4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionHiddenEnum4: %v", v)
	}
}

type GetConfigurationProductsUIOptionHidden4 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionHidden4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionHidden4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionHidden4) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionHiddenUnion6Type string

const (
	GetConfigurationProductsUIOptionHiddenUnion6TypeBoolean                                     GetConfigurationProductsUIOptionHiddenUnion6Type = "boolean"
	GetConfigurationProductsUIOptionHiddenUnion6TypeGetConfigurationProductsUIOptionHidden4     GetConfigurationProductsUIOptionHiddenUnion6Type = "getConfigurationProducts_ui:option_hidden_4"
	GetConfigurationProductsUIOptionHiddenUnion6TypeGetConfigurationProductsUIOptionHiddenEnum4 GetConfigurationProductsUIOptionHiddenUnion6Type = "getConfigurationProducts_ui:option_hidden_enum_4"
)

type GetConfigurationProductsUIOptionHiddenUnion6 struct {
	Boolean                                     *bool                                        `queryParam:"inline"`
	GetConfigurationProductsUIOptionHidden4     *GetConfigurationProductsUIOptionHidden4     `queryParam:"inline"`
	GetConfigurationProductsUIOptionHiddenEnum4 *GetConfigurationProductsUIOptionHiddenEnum4 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionHiddenUnion6Type
}

func CreateGetConfigurationProductsUIOptionHiddenUnion6Boolean(boolean bool) GetConfigurationProductsUIOptionHiddenUnion6 {
	typ := GetConfigurationProductsUIOptionHiddenUnion6TypeBoolean

	return GetConfigurationProductsUIOptionHiddenUnion6{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion6GetConfigurationProductsUIOptionHidden4(getConfigurationProductsUIOptionHidden4 GetConfigurationProductsUIOptionHidden4) GetConfigurationProductsUIOptionHiddenUnion6 {
	typ := GetConfigurationProductsUIOptionHiddenUnion6TypeGetConfigurationProductsUIOptionHidden4

	return GetConfigurationProductsUIOptionHiddenUnion6{
		GetConfigurationProductsUIOptionHidden4: &getConfigurationProductsUIOptionHidden4,
		Type:                                    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion6GetConfigurationProductsUIOptionHiddenEnum4(getConfigurationProductsUIOptionHiddenEnum4 GetConfigurationProductsUIOptionHiddenEnum4) GetConfigurationProductsUIOptionHiddenUnion6 {
	typ := GetConfigurationProductsUIOptionHiddenUnion6TypeGetConfigurationProductsUIOptionHiddenEnum4

	return GetConfigurationProductsUIOptionHiddenUnion6{
		GetConfigurationProductsUIOptionHiddenEnum4: &getConfigurationProductsUIOptionHiddenEnum4,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionHiddenUnion6) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionHidden4 GetConfigurationProductsUIOptionHidden4 = GetConfigurationProductsUIOptionHidden4{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHidden4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHidden4 = &getConfigurationProductsUIOptionHidden4
		u.Type = GetConfigurationProductsUIOptionHiddenUnion6TypeGetConfigurationProductsUIOptionHidden4
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionHiddenUnion6TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionHiddenEnum4 GetConfigurationProductsUIOptionHiddenEnum4 = GetConfigurationProductsUIOptionHiddenEnum4("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHiddenEnum4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHiddenEnum4 = &getConfigurationProductsUIOptionHiddenEnum4
		u.Type = GetConfigurationProductsUIOptionHiddenUnion6TypeGetConfigurationProductsUIOptionHiddenEnum4
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionHiddenUnion6", string(data))
}

func (u GetConfigurationProductsUIOptionHiddenUnion6) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionHidden4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHidden4, "", true)
	}

	if u.GetConfigurationProductsUIOptionHiddenEnum4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHiddenEnum4, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionHiddenUnion6: all fields are null")
}

type GetConfigurationProductsUIOption8 struct {
	Value    GetConfigurationProductsUIOptionValue2          `json:"value"`
	Disabled *GetConfigurationProductsUIOptionDisabledUnion6 `json:"disabled,omitempty"`
	Hidden   *GetConfigurationProductsUIOptionHiddenUnion6   `json:"hidden,omitempty"`
}

func (g GetConfigurationProductsUIOption8) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption8) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"value"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption8) GetValue() GetConfigurationProductsUIOptionValue2 {
	if o == nil {
		return GetConfigurationProductsUIOptionValue2{}
	}
	return o.Value
}

func (o *GetConfigurationProductsUIOption8) GetDisabled() *GetConfigurationProductsUIOptionDisabledUnion6 {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *GetConfigurationProductsUIOption8) GetHidden() *GetConfigurationProductsUIOptionHiddenUnion6 {
	if o == nil {
		return nil
	}
	return o.Hidden
}

type UIOptionAtBRANDAt6267542 struct {
}

func (u UIOptionAtBRANDAt6267542) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UIOptionAtBRANDAt6267542) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsUIOption7 struct {
	AtBRANDAt626754 UIOptionAtBRANDAt6267542 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsUIOption7) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption7) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption7) GetAtBRANDAt626754() UIOptionAtBRANDAt6267542 {
	if o == nil {
		return UIOptionAtBRANDAt6267542{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIOptionDisabledEnum3 string

const (
	GetConfigurationProductsUIOptionDisabledEnum3Update GetConfigurationProductsUIOptionDisabledEnum3 = "update"
	GetConfigurationProductsUIOptionDisabledEnum3Create GetConfigurationProductsUIOptionDisabledEnum3 = "create"
)

func (e GetConfigurationProductsUIOptionDisabledEnum3) ToPointer() *GetConfigurationProductsUIOptionDisabledEnum3 {
	return &e
}
func (e *GetConfigurationProductsUIOptionDisabledEnum3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionDisabledEnum3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionDisabledEnum3: %v", v)
	}
}

type GetConfigurationProductsUIOptionDisabled3 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionDisabled3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionDisabled3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionDisabled3) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionDisabledUnion5Type string

const (
	GetConfigurationProductsUIOptionDisabledUnion5TypeBoolean                                       GetConfigurationProductsUIOptionDisabledUnion5Type = "boolean"
	GetConfigurationProductsUIOptionDisabledUnion5TypeGetConfigurationProductsUIOptionDisabled3     GetConfigurationProductsUIOptionDisabledUnion5Type = "getConfigurationProducts_ui:option_disabled_3"
	GetConfigurationProductsUIOptionDisabledUnion5TypeGetConfigurationProductsUIOptionDisabledEnum3 GetConfigurationProductsUIOptionDisabledUnion5Type = "getConfigurationProducts_ui:option_disabled_enum_3"
)

type GetConfigurationProductsUIOptionDisabledUnion5 struct {
	Boolean                                       *bool                                          `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabled3     *GetConfigurationProductsUIOptionDisabled3     `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabledEnum3 *GetConfigurationProductsUIOptionDisabledEnum3 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionDisabledUnion5Type
}

func CreateGetConfigurationProductsUIOptionDisabledUnion5Boolean(boolean bool) GetConfigurationProductsUIOptionDisabledUnion5 {
	typ := GetConfigurationProductsUIOptionDisabledUnion5TypeBoolean

	return GetConfigurationProductsUIOptionDisabledUnion5{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion5GetConfigurationProductsUIOptionDisabled3(getConfigurationProductsUIOptionDisabled3 GetConfigurationProductsUIOptionDisabled3) GetConfigurationProductsUIOptionDisabledUnion5 {
	typ := GetConfigurationProductsUIOptionDisabledUnion5TypeGetConfigurationProductsUIOptionDisabled3

	return GetConfigurationProductsUIOptionDisabledUnion5{
		GetConfigurationProductsUIOptionDisabled3: &getConfigurationProductsUIOptionDisabled3,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion5GetConfigurationProductsUIOptionDisabledEnum3(getConfigurationProductsUIOptionDisabledEnum3 GetConfigurationProductsUIOptionDisabledEnum3) GetConfigurationProductsUIOptionDisabledUnion5 {
	typ := GetConfigurationProductsUIOptionDisabledUnion5TypeGetConfigurationProductsUIOptionDisabledEnum3

	return GetConfigurationProductsUIOptionDisabledUnion5{
		GetConfigurationProductsUIOptionDisabledEnum3: &getConfigurationProductsUIOptionDisabledEnum3,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionDisabledUnion5) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionDisabled3 GetConfigurationProductsUIOptionDisabled3 = GetConfigurationProductsUIOptionDisabled3{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabled3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabled3 = &getConfigurationProductsUIOptionDisabled3
		u.Type = GetConfigurationProductsUIOptionDisabledUnion5TypeGetConfigurationProductsUIOptionDisabled3
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionDisabledUnion5TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionDisabledEnum3 GetConfigurationProductsUIOptionDisabledEnum3 = GetConfigurationProductsUIOptionDisabledEnum3("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabledEnum3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabledEnum3 = &getConfigurationProductsUIOptionDisabledEnum3
		u.Type = GetConfigurationProductsUIOptionDisabledUnion5TypeGetConfigurationProductsUIOptionDisabledEnum3
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionDisabledUnion5", string(data))
}

func (u GetConfigurationProductsUIOptionDisabledUnion5) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabled3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabled3, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabledEnum3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabledEnum3, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionDisabledUnion5: all fields are null")
}

type GetConfigurationProductsUIOptionHiddenEnum3 string

const (
	GetConfigurationProductsUIOptionHiddenEnum3Update GetConfigurationProductsUIOptionHiddenEnum3 = "update"
	GetConfigurationProductsUIOptionHiddenEnum3Create GetConfigurationProductsUIOptionHiddenEnum3 = "create"
)

func (e GetConfigurationProductsUIOptionHiddenEnum3) ToPointer() *GetConfigurationProductsUIOptionHiddenEnum3 {
	return &e
}
func (e *GetConfigurationProductsUIOptionHiddenEnum3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionHiddenEnum3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionHiddenEnum3: %v", v)
	}
}

type GetConfigurationProductsUIOptionHidden3 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionHidden3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionHidden3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionHidden3) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionHiddenUnion5Type string

const (
	GetConfigurationProductsUIOptionHiddenUnion5TypeBoolean                                     GetConfigurationProductsUIOptionHiddenUnion5Type = "boolean"
	GetConfigurationProductsUIOptionHiddenUnion5TypeGetConfigurationProductsUIOptionHidden3     GetConfigurationProductsUIOptionHiddenUnion5Type = "getConfigurationProducts_ui:option_hidden_3"
	GetConfigurationProductsUIOptionHiddenUnion5TypeGetConfigurationProductsUIOptionHiddenEnum3 GetConfigurationProductsUIOptionHiddenUnion5Type = "getConfigurationProducts_ui:option_hidden_enum_3"
)

type GetConfigurationProductsUIOptionHiddenUnion5 struct {
	Boolean                                     *bool                                        `queryParam:"inline"`
	GetConfigurationProductsUIOptionHidden3     *GetConfigurationProductsUIOptionHidden3     `queryParam:"inline"`
	GetConfigurationProductsUIOptionHiddenEnum3 *GetConfigurationProductsUIOptionHiddenEnum3 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionHiddenUnion5Type
}

func CreateGetConfigurationProductsUIOptionHiddenUnion5Boolean(boolean bool) GetConfigurationProductsUIOptionHiddenUnion5 {
	typ := GetConfigurationProductsUIOptionHiddenUnion5TypeBoolean

	return GetConfigurationProductsUIOptionHiddenUnion5{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion5GetConfigurationProductsUIOptionHidden3(getConfigurationProductsUIOptionHidden3 GetConfigurationProductsUIOptionHidden3) GetConfigurationProductsUIOptionHiddenUnion5 {
	typ := GetConfigurationProductsUIOptionHiddenUnion5TypeGetConfigurationProductsUIOptionHidden3

	return GetConfigurationProductsUIOptionHiddenUnion5{
		GetConfigurationProductsUIOptionHidden3: &getConfigurationProductsUIOptionHidden3,
		Type:                                    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion5GetConfigurationProductsUIOptionHiddenEnum3(getConfigurationProductsUIOptionHiddenEnum3 GetConfigurationProductsUIOptionHiddenEnum3) GetConfigurationProductsUIOptionHiddenUnion5 {
	typ := GetConfigurationProductsUIOptionHiddenUnion5TypeGetConfigurationProductsUIOptionHiddenEnum3

	return GetConfigurationProductsUIOptionHiddenUnion5{
		GetConfigurationProductsUIOptionHiddenEnum3: &getConfigurationProductsUIOptionHiddenEnum3,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionHiddenUnion5) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionHidden3 GetConfigurationProductsUIOptionHidden3 = GetConfigurationProductsUIOptionHidden3{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHidden3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHidden3 = &getConfigurationProductsUIOptionHidden3
		u.Type = GetConfigurationProductsUIOptionHiddenUnion5TypeGetConfigurationProductsUIOptionHidden3
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionHiddenUnion5TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionHiddenEnum3 GetConfigurationProductsUIOptionHiddenEnum3 = GetConfigurationProductsUIOptionHiddenEnum3("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHiddenEnum3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHiddenEnum3 = &getConfigurationProductsUIOptionHiddenEnum3
		u.Type = GetConfigurationProductsUIOptionHiddenUnion5TypeGetConfigurationProductsUIOptionHiddenEnum3
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionHiddenUnion5", string(data))
}

func (u GetConfigurationProductsUIOptionHiddenUnion5) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionHidden3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHidden3, "", true)
	}

	if u.GetConfigurationProductsUIOptionHiddenEnum3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHiddenEnum3, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionHiddenUnion5: all fields are null")
}

type GetConfigurationProductsUIOption6 struct {
	Value    string                                          `json:"value"`
	Label    string                                          `json:"label"`
	Disabled *GetConfigurationProductsUIOptionDisabledUnion5 `json:"disabled,omitempty"`
	Hidden   *GetConfigurationProductsUIOptionHiddenUnion5   `json:"hidden,omitempty"`
}

func (g GetConfigurationProductsUIOption6) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption6) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"value", "label"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption6) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *GetConfigurationProductsUIOption6) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *GetConfigurationProductsUIOption6) GetDisabled() *GetConfigurationProductsUIOptionDisabledUnion5 {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *GetConfigurationProductsUIOption6) GetHidden() *GetConfigurationProductsUIOptionHiddenUnion5 {
	if o == nil {
		return nil
	}
	return o.Hidden
}

type GetConfigurationProductsUIOptionUnion2Type string

const (
	GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption6 GetConfigurationProductsUIOptionUnion2Type = "getConfigurationProducts_ui:option_6"
	GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption7 GetConfigurationProductsUIOptionUnion2Type = "getConfigurationProducts_ui:option_7"
	GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption8 GetConfigurationProductsUIOptionUnion2Type = "getConfigurationProducts_ui:option_8"
)

type GetConfigurationProductsUIOptionUnion2 struct {
	GetConfigurationProductsUIOption6 *GetConfigurationProductsUIOption6 `queryParam:"inline"`
	GetConfigurationProductsUIOption7 *GetConfigurationProductsUIOption7 `queryParam:"inline"`
	GetConfigurationProductsUIOption8 *GetConfigurationProductsUIOption8 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionUnion2Type
}

func CreateGetConfigurationProductsUIOptionUnion2GetConfigurationProductsUIOption6(getConfigurationProductsUIOption6 GetConfigurationProductsUIOption6) GetConfigurationProductsUIOptionUnion2 {
	typ := GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption6

	return GetConfigurationProductsUIOptionUnion2{
		GetConfigurationProductsUIOption6: &getConfigurationProductsUIOption6,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIOptionUnion2GetConfigurationProductsUIOption7(getConfigurationProductsUIOption7 GetConfigurationProductsUIOption7) GetConfigurationProductsUIOptionUnion2 {
	typ := GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption7

	return GetConfigurationProductsUIOptionUnion2{
		GetConfigurationProductsUIOption7: &getConfigurationProductsUIOption7,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIOptionUnion2GetConfigurationProductsUIOption8(getConfigurationProductsUIOption8 GetConfigurationProductsUIOption8) GetConfigurationProductsUIOptionUnion2 {
	typ := GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption8

	return GetConfigurationProductsUIOptionUnion2{
		GetConfigurationProductsUIOption8: &getConfigurationProductsUIOption8,
		Type:                              typ,
	}
}

func (u *GetConfigurationProductsUIOptionUnion2) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOption6 GetConfigurationProductsUIOption6 = GetConfigurationProductsUIOption6{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOption6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOption6 = &getConfigurationProductsUIOption6
		u.Type = GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption6
		return nil
	}

	var getConfigurationProductsUIOption7 GetConfigurationProductsUIOption7 = GetConfigurationProductsUIOption7{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOption7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOption7 = &getConfigurationProductsUIOption7
		u.Type = GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption7
		return nil
	}

	var getConfigurationProductsUIOption8 GetConfigurationProductsUIOption8 = GetConfigurationProductsUIOption8{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOption8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOption8 = &getConfigurationProductsUIOption8
		u.Type = GetConfigurationProductsUIOptionUnion2TypeGetConfigurationProductsUIOption8
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionUnion2", string(data))
}

func (u GetConfigurationProductsUIOptionUnion2) MarshalJSON() ([]byte, error) {
	if u.GetConfigurationProductsUIOption6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOption6, "", true)
	}

	if u.GetConfigurationProductsUIOption7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOption7, "", true)
	}

	if u.GetConfigurationProductsUIOption8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOption8, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionUnion2: all fields are null")
}

type GetConfigurationProductsUIReadOnlyEnum8 string

const (
	GetConfigurationProductsUIReadOnlyEnum8Update GetConfigurationProductsUIReadOnlyEnum8 = "update"
	GetConfigurationProductsUIReadOnlyEnum8Create GetConfigurationProductsUIReadOnlyEnum8 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum8) ToPointer() *GetConfigurationProductsUIReadOnlyEnum8 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum8) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum8(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum8: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly8 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly8) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly8) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly8) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion8Type string

const (
	GetConfigurationProductsUIReadOnlyUnion8TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion8Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion8TypeGetConfigurationProductsUIReadOnly8     GetConfigurationProductsUIReadOnlyUnion8Type = "getConfigurationProducts_ui:read-only_8"
	GetConfigurationProductsUIReadOnlyUnion8TypeGetConfigurationProductsUIReadOnlyEnum8 GetConfigurationProductsUIReadOnlyUnion8Type = "getConfigurationProducts_ui:read-only_enum_8"
)

type GetConfigurationProductsUIReadOnlyUnion8 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly8     *GetConfigurationProductsUIReadOnly8     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum8 *GetConfigurationProductsUIReadOnlyEnum8 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion8Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion8Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion8 {
	typ := GetConfigurationProductsUIReadOnlyUnion8TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion8{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion8GetConfigurationProductsUIReadOnly8(getConfigurationProductsUIReadOnly8 GetConfigurationProductsUIReadOnly8) GetConfigurationProductsUIReadOnlyUnion8 {
	typ := GetConfigurationProductsUIReadOnlyUnion8TypeGetConfigurationProductsUIReadOnly8

	return GetConfigurationProductsUIReadOnlyUnion8{
		GetConfigurationProductsUIReadOnly8: &getConfigurationProductsUIReadOnly8,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion8GetConfigurationProductsUIReadOnlyEnum8(getConfigurationProductsUIReadOnlyEnum8 GetConfigurationProductsUIReadOnlyEnum8) GetConfigurationProductsUIReadOnlyUnion8 {
	typ := GetConfigurationProductsUIReadOnlyUnion8TypeGetConfigurationProductsUIReadOnlyEnum8

	return GetConfigurationProductsUIReadOnlyUnion8{
		GetConfigurationProductsUIReadOnlyEnum8: &getConfigurationProductsUIReadOnlyEnum8,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion8) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly8 GetConfigurationProductsUIReadOnly8 = GetConfigurationProductsUIReadOnly8{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly8 = &getConfigurationProductsUIReadOnly8
		u.Type = GetConfigurationProductsUIReadOnlyUnion8TypeGetConfigurationProductsUIReadOnly8
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion8TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum8 GetConfigurationProductsUIReadOnlyEnum8 = GetConfigurationProductsUIReadOnlyEnum8("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum8 = &getConfigurationProductsUIReadOnlyEnum8
		u.Type = GetConfigurationProductsUIReadOnlyUnion8TypeGetConfigurationProductsUIReadOnlyEnum8
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion8", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion8) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly8, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum8, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion8: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum8 string

const (
	GetConfigurationProductsUIHiddenEnum8Update GetConfigurationProductsUIHiddenEnum8 = "update"
	GetConfigurationProductsUIHiddenEnum8Create GetConfigurationProductsUIHiddenEnum8 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum8) ToPointer() *GetConfigurationProductsUIHiddenEnum8 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum8) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum8(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum8: %v", v)
	}
}

type GetConfigurationProductsUIHidden8 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden8) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden8) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden8) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion8Type string

const (
	GetConfigurationProductsUIHiddenUnion8TypeBoolean                               GetConfigurationProductsUIHiddenUnion8Type = "boolean"
	GetConfigurationProductsUIHiddenUnion8TypeGetConfigurationProductsUIHidden8     GetConfigurationProductsUIHiddenUnion8Type = "getConfigurationProducts_ui:hidden_8"
	GetConfigurationProductsUIHiddenUnion8TypeGetConfigurationProductsUIHiddenEnum8 GetConfigurationProductsUIHiddenUnion8Type = "getConfigurationProducts_ui:hidden_enum_8"
)

type GetConfigurationProductsUIHiddenUnion8 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden8     *GetConfigurationProductsUIHidden8     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum8 *GetConfigurationProductsUIHiddenEnum8 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion8Type
}

func CreateGetConfigurationProductsUIHiddenUnion8Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion8 {
	typ := GetConfigurationProductsUIHiddenUnion8TypeBoolean

	return GetConfigurationProductsUIHiddenUnion8{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion8GetConfigurationProductsUIHidden8(getConfigurationProductsUIHidden8 GetConfigurationProductsUIHidden8) GetConfigurationProductsUIHiddenUnion8 {
	typ := GetConfigurationProductsUIHiddenUnion8TypeGetConfigurationProductsUIHidden8

	return GetConfigurationProductsUIHiddenUnion8{
		GetConfigurationProductsUIHidden8: &getConfigurationProductsUIHidden8,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion8GetConfigurationProductsUIHiddenEnum8(getConfigurationProductsUIHiddenEnum8 GetConfigurationProductsUIHiddenEnum8) GetConfigurationProductsUIHiddenUnion8 {
	typ := GetConfigurationProductsUIHiddenUnion8TypeGetConfigurationProductsUIHiddenEnum8

	return GetConfigurationProductsUIHiddenUnion8{
		GetConfigurationProductsUIHiddenEnum8: &getConfigurationProductsUIHiddenEnum8,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion8) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden8 GetConfigurationProductsUIHidden8 = GetConfigurationProductsUIHidden8{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden8 = &getConfigurationProductsUIHidden8
		u.Type = GetConfigurationProductsUIHiddenUnion8TypeGetConfigurationProductsUIHidden8
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion8TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum8 GetConfigurationProductsUIHiddenEnum8 = GetConfigurationProductsUIHiddenEnum8("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum8 = &getConfigurationProductsUIHiddenEnum8
		u.Type = GetConfigurationProductsUIHiddenUnion8TypeGetConfigurationProductsUIHiddenEnum8
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion8", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion8) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden8, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum8, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion8: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum8 string

const (
	GetConfigurationProductsUIDisabledEnum8Update GetConfigurationProductsUIDisabledEnum8 = "update"
	GetConfigurationProductsUIDisabledEnum8Create GetConfigurationProductsUIDisabledEnum8 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum8) ToPointer() *GetConfigurationProductsUIDisabledEnum8 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum8) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum8(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum8: %v", v)
	}
}

type GetConfigurationProductsUIDisabled8 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled8) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled8) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled8) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion8Type string

const (
	GetConfigurationProductsUIDisabledUnion8TypeBoolean                                 GetConfigurationProductsUIDisabledUnion8Type = "boolean"
	GetConfigurationProductsUIDisabledUnion8TypeGetConfigurationProductsUIDisabled8     GetConfigurationProductsUIDisabledUnion8Type = "getConfigurationProducts_ui:disabled_8"
	GetConfigurationProductsUIDisabledUnion8TypeGetConfigurationProductsUIDisabledEnum8 GetConfigurationProductsUIDisabledUnion8Type = "getConfigurationProducts_ui:disabled_enum_8"
)

type GetConfigurationProductsUIDisabledUnion8 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled8     *GetConfigurationProductsUIDisabled8     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum8 *GetConfigurationProductsUIDisabledEnum8 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion8Type
}

func CreateGetConfigurationProductsUIDisabledUnion8Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion8 {
	typ := GetConfigurationProductsUIDisabledUnion8TypeBoolean

	return GetConfigurationProductsUIDisabledUnion8{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion8GetConfigurationProductsUIDisabled8(getConfigurationProductsUIDisabled8 GetConfigurationProductsUIDisabled8) GetConfigurationProductsUIDisabledUnion8 {
	typ := GetConfigurationProductsUIDisabledUnion8TypeGetConfigurationProductsUIDisabled8

	return GetConfigurationProductsUIDisabledUnion8{
		GetConfigurationProductsUIDisabled8: &getConfigurationProductsUIDisabled8,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion8GetConfigurationProductsUIDisabledEnum8(getConfigurationProductsUIDisabledEnum8 GetConfigurationProductsUIDisabledEnum8) GetConfigurationProductsUIDisabledUnion8 {
	typ := GetConfigurationProductsUIDisabledUnion8TypeGetConfigurationProductsUIDisabledEnum8

	return GetConfigurationProductsUIDisabledUnion8{
		GetConfigurationProductsUIDisabledEnum8: &getConfigurationProductsUIDisabledEnum8,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion8) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled8 GetConfigurationProductsUIDisabled8 = GetConfigurationProductsUIDisabled8{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled8 = &getConfigurationProductsUIDisabled8
		u.Type = GetConfigurationProductsUIDisabledUnion8TypeGetConfigurationProductsUIDisabled8
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion8TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum8 GetConfigurationProductsUIDisabledEnum8 = GetConfigurationProductsUIDisabledEnum8("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum8 = &getConfigurationProductsUIDisabledEnum8
		u.Type = GetConfigurationProductsUIDisabledUnion8TypeGetConfigurationProductsUIDisabledEnum8
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion8", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion8) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled8, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum8, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion8: all fields are null")
}

type GetConfigurationProductsUIDescription8 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription8) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription8) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription8) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion8Type string

const (
	GetConfigurationProductsUIDescriptionUnion8TypeStr                                    GetConfigurationProductsUIDescriptionUnion8Type = "str"
	GetConfigurationProductsUIDescriptionUnion8TypeGetConfigurationProductsUIDescription8 GetConfigurationProductsUIDescriptionUnion8Type = "getConfigurationProducts_ui:description_8"
)

type GetConfigurationProductsUIDescriptionUnion8 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription8 *GetConfigurationProductsUIDescription8 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion8Type
}

func CreateGetConfigurationProductsUIDescriptionUnion8Str(str string) GetConfigurationProductsUIDescriptionUnion8 {
	typ := GetConfigurationProductsUIDescriptionUnion8TypeStr

	return GetConfigurationProductsUIDescriptionUnion8{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion8GetConfigurationProductsUIDescription8(getConfigurationProductsUIDescription8 GetConfigurationProductsUIDescription8) GetConfigurationProductsUIDescriptionUnion8 {
	typ := GetConfigurationProductsUIDescriptionUnion8TypeGetConfigurationProductsUIDescription8

	return GetConfigurationProductsUIDescriptionUnion8{
		GetConfigurationProductsUIDescription8: &getConfigurationProductsUIDescription8,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion8) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription8 GetConfigurationProductsUIDescription8 = GetConfigurationProductsUIDescription8{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription8, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription8 = &getConfigurationProductsUIDescription8
		u.Type = GetConfigurationProductsUIDescriptionUnion8TypeGetConfigurationProductsUIDescription8
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion8TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion8", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion8) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription8 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription8, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion8: all fields are null")
}

type GetConfigurationProductsUIFormattedValue8 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue8) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue8) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue8) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type DefaultAtBRANDAt626754 struct {
}

func (d DefaultAtBRANDAt626754) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DefaultAtBRANDAt626754) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, nil); err != nil {
		return err
	}
	return nil
}

type Default struct {
	AtBRANDAt626754 DefaultAtBRANDAt626754 `json:"__@BRAND@626754"`
}

func (d Default) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *Default) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *Default) GetAtBRANDAt626754() DefaultAtBRANDAt626754 {
	if o == nil {
		return DefaultAtBRANDAt626754{}
	}
	return o.AtBRANDAt626754
}

type ExampleAtBRANDAt626754 struct {
}

func (e ExampleAtBRANDAt626754) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *ExampleAtBRANDAt626754) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, nil); err != nil {
		return err
	}
	return nil
}

type Example struct {
	AtBRANDAt626754 ExampleAtBRANDAt626754 `json:"__@BRAND@626754"`
}

func (e Example) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Example) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *Example) GetAtBRANDAt626754() ExampleAtBRANDAt626754 {
	if o == nil {
		return ExampleAtBRANDAt626754{}
	}
	return o.AtBRANDAt626754
}

type PropertiesMultiVercelRegion struct {
	Type             GetConfigurationProductsTypeArray3           `json:"type"`
	UIControl        UIControlMultiVercelRegion                   `json:"ui:control"`
	Items            GetConfigurationProductsItemsString2         `json:"items"`
	UIOptions        []GetConfigurationProductsUIOptionUnion2     `json:"ui:options"`
	Description      *string                                      `json:"description,omitempty"`
	MinItems         *float64                                     `json:"minItems,omitempty"`
	MaxItems         *float64                                     `json:"maxItems,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion8    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion8      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion8    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion8 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue8   `json:"ui:formatted-value,omitempty"`
	UIPlaceholder    *string                                      `json:"ui:placeholder,omitempty"`
	Default          []Default                                    `json:"default,omitempty"`
	Example          []Example                                    `json:"example,omitempty"`
}

func (p PropertiesMultiVercelRegion) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PropertiesMultiVercelRegion) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"type", "ui:control", "items", "ui:options"}); err != nil {
		return err
	}
	return nil
}

func (o *PropertiesMultiVercelRegion) GetType() GetConfigurationProductsTypeArray3 {
	if o == nil {
		return GetConfigurationProductsTypeArray3("")
	}
	return o.Type
}

func (o *PropertiesMultiVercelRegion) GetUIControl() UIControlMultiVercelRegion {
	if o == nil {
		return UIControlMultiVercelRegion("")
	}
	return o.UIControl
}

func (o *PropertiesMultiVercelRegion) GetItems() GetConfigurationProductsItemsString2 {
	if o == nil {
		return GetConfigurationProductsItemsString2{}
	}
	return o.Items
}

func (o *PropertiesMultiVercelRegion) GetUIOptions() []GetConfigurationProductsUIOptionUnion2 {
	if o == nil {
		return []GetConfigurationProductsUIOptionUnion2{}
	}
	return o.UIOptions
}

func (o *PropertiesMultiVercelRegion) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PropertiesMultiVercelRegion) GetMinItems() *float64 {
	if o == nil {
		return nil
	}
	return o.MinItems
}

func (o *PropertiesMultiVercelRegion) GetMaxItems() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxItems
}

func (o *PropertiesMultiVercelRegion) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *PropertiesMultiVercelRegion) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion8 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *PropertiesMultiVercelRegion) GetUIHidden() *GetConfigurationProductsUIHiddenUnion8 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *PropertiesMultiVercelRegion) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion8 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *PropertiesMultiVercelRegion) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion8 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *PropertiesMultiVercelRegion) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue8 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *PropertiesMultiVercelRegion) GetUIPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.UIPlaceholder
}

func (o *PropertiesMultiVercelRegion) GetDefault() []Default {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *PropertiesMultiVercelRegion) GetExample() []Example {
	if o == nil {
		return nil
	}
	return o.Example
}

type GetConfigurationProductsTypeString4 string

const (
	GetConfigurationProductsTypeString4String GetConfigurationProductsTypeString4 = "string"
)

func (e GetConfigurationProductsTypeString4) ToPointer() *GetConfigurationProductsTypeString4 {
	return &e
}
func (e *GetConfigurationProductsTypeString4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		*e = GetConfigurationProductsTypeString4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeString4: %v", v)
	}
}

type GetConfigurationProductsUIControlVercelRegion string

const (
	GetConfigurationProductsUIControlVercelRegionVercelRegion GetConfigurationProductsUIControlVercelRegion = "vercel-region"
)

func (e GetConfigurationProductsUIControlVercelRegion) ToPointer() *GetConfigurationProductsUIControlVercelRegion {
	return &e
}
func (e *GetConfigurationProductsUIControlVercelRegion) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vercel-region":
		*e = GetConfigurationProductsUIControlVercelRegion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlVercelRegion: %v", v)
	}
}

type UIOptionValueAtBRANDAt6267541 struct {
}

func (u UIOptionValueAtBRANDAt6267541) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UIOptionValueAtBRANDAt6267541) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsUIOptionValue1 struct {
	AtBRANDAt626754 UIOptionValueAtBRANDAt6267541 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsUIOptionValue1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionValue1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionValue1) GetAtBRANDAt626754() UIOptionValueAtBRANDAt6267541 {
	if o == nil {
		return UIOptionValueAtBRANDAt6267541{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIOptionDisabledEnum2 string

const (
	GetConfigurationProductsUIOptionDisabledEnum2Update GetConfigurationProductsUIOptionDisabledEnum2 = "update"
	GetConfigurationProductsUIOptionDisabledEnum2Create GetConfigurationProductsUIOptionDisabledEnum2 = "create"
)

func (e GetConfigurationProductsUIOptionDisabledEnum2) ToPointer() *GetConfigurationProductsUIOptionDisabledEnum2 {
	return &e
}
func (e *GetConfigurationProductsUIOptionDisabledEnum2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionDisabledEnum2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionDisabledEnum2: %v", v)
	}
}

type GetConfigurationProductsUIOptionDisabled2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionDisabled2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionDisabled2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionDisabled2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionDisabledUnion4Type string

const (
	GetConfigurationProductsUIOptionDisabledUnion4TypeBoolean                                       GetConfigurationProductsUIOptionDisabledUnion4Type = "boolean"
	GetConfigurationProductsUIOptionDisabledUnion4TypeGetConfigurationProductsUIOptionDisabled2     GetConfigurationProductsUIOptionDisabledUnion4Type = "getConfigurationProducts_ui:option_disabled_2"
	GetConfigurationProductsUIOptionDisabledUnion4TypeGetConfigurationProductsUIOptionDisabledEnum2 GetConfigurationProductsUIOptionDisabledUnion4Type = "getConfigurationProducts_ui:option_disabled_enum_2"
)

type GetConfigurationProductsUIOptionDisabledUnion4 struct {
	Boolean                                       *bool                                          `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabled2     *GetConfigurationProductsUIOptionDisabled2     `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabledEnum2 *GetConfigurationProductsUIOptionDisabledEnum2 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionDisabledUnion4Type
}

func CreateGetConfigurationProductsUIOptionDisabledUnion4Boolean(boolean bool) GetConfigurationProductsUIOptionDisabledUnion4 {
	typ := GetConfigurationProductsUIOptionDisabledUnion4TypeBoolean

	return GetConfigurationProductsUIOptionDisabledUnion4{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion4GetConfigurationProductsUIOptionDisabled2(getConfigurationProductsUIOptionDisabled2 GetConfigurationProductsUIOptionDisabled2) GetConfigurationProductsUIOptionDisabledUnion4 {
	typ := GetConfigurationProductsUIOptionDisabledUnion4TypeGetConfigurationProductsUIOptionDisabled2

	return GetConfigurationProductsUIOptionDisabledUnion4{
		GetConfigurationProductsUIOptionDisabled2: &getConfigurationProductsUIOptionDisabled2,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion4GetConfigurationProductsUIOptionDisabledEnum2(getConfigurationProductsUIOptionDisabledEnum2 GetConfigurationProductsUIOptionDisabledEnum2) GetConfigurationProductsUIOptionDisabledUnion4 {
	typ := GetConfigurationProductsUIOptionDisabledUnion4TypeGetConfigurationProductsUIOptionDisabledEnum2

	return GetConfigurationProductsUIOptionDisabledUnion4{
		GetConfigurationProductsUIOptionDisabledEnum2: &getConfigurationProductsUIOptionDisabledEnum2,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionDisabledUnion4) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionDisabled2 GetConfigurationProductsUIOptionDisabled2 = GetConfigurationProductsUIOptionDisabled2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabled2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabled2 = &getConfigurationProductsUIOptionDisabled2
		u.Type = GetConfigurationProductsUIOptionDisabledUnion4TypeGetConfigurationProductsUIOptionDisabled2
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionDisabledUnion4TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionDisabledEnum2 GetConfigurationProductsUIOptionDisabledEnum2 = GetConfigurationProductsUIOptionDisabledEnum2("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabledEnum2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabledEnum2 = &getConfigurationProductsUIOptionDisabledEnum2
		u.Type = GetConfigurationProductsUIOptionDisabledUnion4TypeGetConfigurationProductsUIOptionDisabledEnum2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionDisabledUnion4", string(data))
}

func (u GetConfigurationProductsUIOptionDisabledUnion4) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabled2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabled2, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabledEnum2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabledEnum2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionDisabledUnion4: all fields are null")
}

type GetConfigurationProductsUIOptionHiddenEnum2 string

const (
	GetConfigurationProductsUIOptionHiddenEnum2Update GetConfigurationProductsUIOptionHiddenEnum2 = "update"
	GetConfigurationProductsUIOptionHiddenEnum2Create GetConfigurationProductsUIOptionHiddenEnum2 = "create"
)

func (e GetConfigurationProductsUIOptionHiddenEnum2) ToPointer() *GetConfigurationProductsUIOptionHiddenEnum2 {
	return &e
}
func (e *GetConfigurationProductsUIOptionHiddenEnum2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionHiddenEnum2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionHiddenEnum2: %v", v)
	}
}

type GetConfigurationProductsUIOptionHidden2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionHidden2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionHidden2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionHidden2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionHiddenUnion4Type string

const (
	GetConfigurationProductsUIOptionHiddenUnion4TypeBoolean                                     GetConfigurationProductsUIOptionHiddenUnion4Type = "boolean"
	GetConfigurationProductsUIOptionHiddenUnion4TypeGetConfigurationProductsUIOptionHidden2     GetConfigurationProductsUIOptionHiddenUnion4Type = "getConfigurationProducts_ui:option_hidden_2"
	GetConfigurationProductsUIOptionHiddenUnion4TypeGetConfigurationProductsUIOptionHiddenEnum2 GetConfigurationProductsUIOptionHiddenUnion4Type = "getConfigurationProducts_ui:option_hidden_enum_2"
)

type GetConfigurationProductsUIOptionHiddenUnion4 struct {
	Boolean                                     *bool                                        `queryParam:"inline"`
	GetConfigurationProductsUIOptionHidden2     *GetConfigurationProductsUIOptionHidden2     `queryParam:"inline"`
	GetConfigurationProductsUIOptionHiddenEnum2 *GetConfigurationProductsUIOptionHiddenEnum2 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionHiddenUnion4Type
}

func CreateGetConfigurationProductsUIOptionHiddenUnion4Boolean(boolean bool) GetConfigurationProductsUIOptionHiddenUnion4 {
	typ := GetConfigurationProductsUIOptionHiddenUnion4TypeBoolean

	return GetConfigurationProductsUIOptionHiddenUnion4{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion4GetConfigurationProductsUIOptionHidden2(getConfigurationProductsUIOptionHidden2 GetConfigurationProductsUIOptionHidden2) GetConfigurationProductsUIOptionHiddenUnion4 {
	typ := GetConfigurationProductsUIOptionHiddenUnion4TypeGetConfigurationProductsUIOptionHidden2

	return GetConfigurationProductsUIOptionHiddenUnion4{
		GetConfigurationProductsUIOptionHidden2: &getConfigurationProductsUIOptionHidden2,
		Type:                                    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion4GetConfigurationProductsUIOptionHiddenEnum2(getConfigurationProductsUIOptionHiddenEnum2 GetConfigurationProductsUIOptionHiddenEnum2) GetConfigurationProductsUIOptionHiddenUnion4 {
	typ := GetConfigurationProductsUIOptionHiddenUnion4TypeGetConfigurationProductsUIOptionHiddenEnum2

	return GetConfigurationProductsUIOptionHiddenUnion4{
		GetConfigurationProductsUIOptionHiddenEnum2: &getConfigurationProductsUIOptionHiddenEnum2,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionHiddenUnion4) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionHidden2 GetConfigurationProductsUIOptionHidden2 = GetConfigurationProductsUIOptionHidden2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHidden2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHidden2 = &getConfigurationProductsUIOptionHidden2
		u.Type = GetConfigurationProductsUIOptionHiddenUnion4TypeGetConfigurationProductsUIOptionHidden2
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionHiddenUnion4TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionHiddenEnum2 GetConfigurationProductsUIOptionHiddenEnum2 = GetConfigurationProductsUIOptionHiddenEnum2("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHiddenEnum2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHiddenEnum2 = &getConfigurationProductsUIOptionHiddenEnum2
		u.Type = GetConfigurationProductsUIOptionHiddenUnion4TypeGetConfigurationProductsUIOptionHiddenEnum2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionHiddenUnion4", string(data))
}

func (u GetConfigurationProductsUIOptionHiddenUnion4) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionHidden2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHidden2, "", true)
	}

	if u.GetConfigurationProductsUIOptionHiddenEnum2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHiddenEnum2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionHiddenUnion4: all fields are null")
}

type GetConfigurationProductsUIOption5 struct {
	Value    GetConfigurationProductsUIOptionValue1          `json:"value"`
	Disabled *GetConfigurationProductsUIOptionDisabledUnion4 `json:"disabled,omitempty"`
	Hidden   *GetConfigurationProductsUIOptionHiddenUnion4   `json:"hidden,omitempty"`
}

func (g GetConfigurationProductsUIOption5) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption5) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"value"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption5) GetValue() GetConfigurationProductsUIOptionValue1 {
	if o == nil {
		return GetConfigurationProductsUIOptionValue1{}
	}
	return o.Value
}

func (o *GetConfigurationProductsUIOption5) GetDisabled() *GetConfigurationProductsUIOptionDisabledUnion4 {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *GetConfigurationProductsUIOption5) GetHidden() *GetConfigurationProductsUIOptionHiddenUnion4 {
	if o == nil {
		return nil
	}
	return o.Hidden
}

type UIOptionAtBRANDAt6267541 struct {
}

func (u UIOptionAtBRANDAt6267541) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UIOptionAtBRANDAt6267541) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsUIOption4 struct {
	AtBRANDAt626754 UIOptionAtBRANDAt6267541 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsUIOption4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption4) GetAtBRANDAt626754() UIOptionAtBRANDAt6267541 {
	if o == nil {
		return UIOptionAtBRANDAt6267541{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIOptionDisabledEnum1 string

const (
	GetConfigurationProductsUIOptionDisabledEnum1Update GetConfigurationProductsUIOptionDisabledEnum1 = "update"
	GetConfigurationProductsUIOptionDisabledEnum1Create GetConfigurationProductsUIOptionDisabledEnum1 = "create"
)

func (e GetConfigurationProductsUIOptionDisabledEnum1) ToPointer() *GetConfigurationProductsUIOptionDisabledEnum1 {
	return &e
}
func (e *GetConfigurationProductsUIOptionDisabledEnum1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionDisabledEnum1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionDisabledEnum1: %v", v)
	}
}

type GetConfigurationProductsUIOptionDisabled1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionDisabled1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionDisabled1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionDisabled1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionDisabledUnion3Type string

const (
	GetConfigurationProductsUIOptionDisabledUnion3TypeBoolean                                       GetConfigurationProductsUIOptionDisabledUnion3Type = "boolean"
	GetConfigurationProductsUIOptionDisabledUnion3TypeGetConfigurationProductsUIOptionDisabled1     GetConfigurationProductsUIOptionDisabledUnion3Type = "getConfigurationProducts_ui:option_disabled_1"
	GetConfigurationProductsUIOptionDisabledUnion3TypeGetConfigurationProductsUIOptionDisabledEnum1 GetConfigurationProductsUIOptionDisabledUnion3Type = "getConfigurationProducts_ui:option_disabled_enum_1"
)

type GetConfigurationProductsUIOptionDisabledUnion3 struct {
	Boolean                                       *bool                                          `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabled1     *GetConfigurationProductsUIOptionDisabled1     `queryParam:"inline"`
	GetConfigurationProductsUIOptionDisabledEnum1 *GetConfigurationProductsUIOptionDisabledEnum1 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionDisabledUnion3Type
}

func CreateGetConfigurationProductsUIOptionDisabledUnion3Boolean(boolean bool) GetConfigurationProductsUIOptionDisabledUnion3 {
	typ := GetConfigurationProductsUIOptionDisabledUnion3TypeBoolean

	return GetConfigurationProductsUIOptionDisabledUnion3{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion3GetConfigurationProductsUIOptionDisabled1(getConfigurationProductsUIOptionDisabled1 GetConfigurationProductsUIOptionDisabled1) GetConfigurationProductsUIOptionDisabledUnion3 {
	typ := GetConfigurationProductsUIOptionDisabledUnion3TypeGetConfigurationProductsUIOptionDisabled1

	return GetConfigurationProductsUIOptionDisabledUnion3{
		GetConfigurationProductsUIOptionDisabled1: &getConfigurationProductsUIOptionDisabled1,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion3GetConfigurationProductsUIOptionDisabledEnum1(getConfigurationProductsUIOptionDisabledEnum1 GetConfigurationProductsUIOptionDisabledEnum1) GetConfigurationProductsUIOptionDisabledUnion3 {
	typ := GetConfigurationProductsUIOptionDisabledUnion3TypeGetConfigurationProductsUIOptionDisabledEnum1

	return GetConfigurationProductsUIOptionDisabledUnion3{
		GetConfigurationProductsUIOptionDisabledEnum1: &getConfigurationProductsUIOptionDisabledEnum1,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionDisabledUnion3) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionDisabled1 GetConfigurationProductsUIOptionDisabled1 = GetConfigurationProductsUIOptionDisabled1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabled1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabled1 = &getConfigurationProductsUIOptionDisabled1
		u.Type = GetConfigurationProductsUIOptionDisabledUnion3TypeGetConfigurationProductsUIOptionDisabled1
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionDisabledUnion3TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionDisabledEnum1 GetConfigurationProductsUIOptionDisabledEnum1 = GetConfigurationProductsUIOptionDisabledEnum1("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionDisabledEnum1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionDisabledEnum1 = &getConfigurationProductsUIOptionDisabledEnum1
		u.Type = GetConfigurationProductsUIOptionDisabledUnion3TypeGetConfigurationProductsUIOptionDisabledEnum1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionDisabledUnion3", string(data))
}

func (u GetConfigurationProductsUIOptionDisabledUnion3) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabled1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabled1, "", true)
	}

	if u.GetConfigurationProductsUIOptionDisabledEnum1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionDisabledEnum1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionDisabledUnion3: all fields are null")
}

type GetConfigurationProductsUIOptionHiddenEnum1 string

const (
	GetConfigurationProductsUIOptionHiddenEnum1Update GetConfigurationProductsUIOptionHiddenEnum1 = "update"
	GetConfigurationProductsUIOptionHiddenEnum1Create GetConfigurationProductsUIOptionHiddenEnum1 = "create"
)

func (e GetConfigurationProductsUIOptionHiddenEnum1) ToPointer() *GetConfigurationProductsUIOptionHiddenEnum1 {
	return &e
}
func (e *GetConfigurationProductsUIOptionHiddenEnum1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIOptionHiddenEnum1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIOptionHiddenEnum1: %v", v)
	}
}

type GetConfigurationProductsUIOptionHidden1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIOptionHidden1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOptionHidden1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOptionHidden1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionHiddenUnion3Type string

const (
	GetConfigurationProductsUIOptionHiddenUnion3TypeBoolean                                     GetConfigurationProductsUIOptionHiddenUnion3Type = "boolean"
	GetConfigurationProductsUIOptionHiddenUnion3TypeGetConfigurationProductsUIOptionHidden1     GetConfigurationProductsUIOptionHiddenUnion3Type = "getConfigurationProducts_ui:option_hidden_1"
	GetConfigurationProductsUIOptionHiddenUnion3TypeGetConfigurationProductsUIOptionHiddenEnum1 GetConfigurationProductsUIOptionHiddenUnion3Type = "getConfigurationProducts_ui:option_hidden_enum_1"
)

type GetConfigurationProductsUIOptionHiddenUnion3 struct {
	Boolean                                     *bool                                        `queryParam:"inline"`
	GetConfigurationProductsUIOptionHidden1     *GetConfigurationProductsUIOptionHidden1     `queryParam:"inline"`
	GetConfigurationProductsUIOptionHiddenEnum1 *GetConfigurationProductsUIOptionHiddenEnum1 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionHiddenUnion3Type
}

func CreateGetConfigurationProductsUIOptionHiddenUnion3Boolean(boolean bool) GetConfigurationProductsUIOptionHiddenUnion3 {
	typ := GetConfigurationProductsUIOptionHiddenUnion3TypeBoolean

	return GetConfigurationProductsUIOptionHiddenUnion3{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion3GetConfigurationProductsUIOptionHidden1(getConfigurationProductsUIOptionHidden1 GetConfigurationProductsUIOptionHidden1) GetConfigurationProductsUIOptionHiddenUnion3 {
	typ := GetConfigurationProductsUIOptionHiddenUnion3TypeGetConfigurationProductsUIOptionHidden1

	return GetConfigurationProductsUIOptionHiddenUnion3{
		GetConfigurationProductsUIOptionHidden1: &getConfigurationProductsUIOptionHidden1,
		Type:                                    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion3GetConfigurationProductsUIOptionHiddenEnum1(getConfigurationProductsUIOptionHiddenEnum1 GetConfigurationProductsUIOptionHiddenEnum1) GetConfigurationProductsUIOptionHiddenUnion3 {
	typ := GetConfigurationProductsUIOptionHiddenUnion3TypeGetConfigurationProductsUIOptionHiddenEnum1

	return GetConfigurationProductsUIOptionHiddenUnion3{
		GetConfigurationProductsUIOptionHiddenEnum1: &getConfigurationProductsUIOptionHiddenEnum1,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionHiddenUnion3) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOptionHidden1 GetConfigurationProductsUIOptionHidden1 = GetConfigurationProductsUIOptionHidden1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHidden1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHidden1 = &getConfigurationProductsUIOptionHidden1
		u.Type = GetConfigurationProductsUIOptionHiddenUnion3TypeGetConfigurationProductsUIOptionHidden1
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionHiddenUnion3TypeBoolean
		return nil
	}

	var getConfigurationProductsUIOptionHiddenEnum1 GetConfigurationProductsUIOptionHiddenEnum1 = GetConfigurationProductsUIOptionHiddenEnum1("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOptionHiddenEnum1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOptionHiddenEnum1 = &getConfigurationProductsUIOptionHiddenEnum1
		u.Type = GetConfigurationProductsUIOptionHiddenUnion3TypeGetConfigurationProductsUIOptionHiddenEnum1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionHiddenUnion3", string(data))
}

func (u GetConfigurationProductsUIOptionHiddenUnion3) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIOptionHidden1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHidden1, "", true)
	}

	if u.GetConfigurationProductsUIOptionHiddenEnum1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOptionHiddenEnum1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionHiddenUnion3: all fields are null")
}

type GetConfigurationProductsUIOption3 struct {
	Value    string                                          `json:"value"`
	Label    string                                          `json:"label"`
	Disabled *GetConfigurationProductsUIOptionDisabledUnion3 `json:"disabled,omitempty"`
	Hidden   *GetConfigurationProductsUIOptionHiddenUnion3   `json:"hidden,omitempty"`
}

func (g GetConfigurationProductsUIOption3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"value", "label"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption3) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *GetConfigurationProductsUIOption3) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *GetConfigurationProductsUIOption3) GetDisabled() *GetConfigurationProductsUIOptionDisabledUnion3 {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *GetConfigurationProductsUIOption3) GetHidden() *GetConfigurationProductsUIOptionHiddenUnion3 {
	if o == nil {
		return nil
	}
	return o.Hidden
}

type GetConfigurationProductsUIOptionUnion1Type string

const (
	GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption3 GetConfigurationProductsUIOptionUnion1Type = "getConfigurationProducts_ui:option_3"
	GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption4 GetConfigurationProductsUIOptionUnion1Type = "getConfigurationProducts_ui:option_4"
	GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption5 GetConfigurationProductsUIOptionUnion1Type = "getConfigurationProducts_ui:option_5"
)

type GetConfigurationProductsUIOptionUnion1 struct {
	GetConfigurationProductsUIOption3 *GetConfigurationProductsUIOption3 `queryParam:"inline"`
	GetConfigurationProductsUIOption4 *GetConfigurationProductsUIOption4 `queryParam:"inline"`
	GetConfigurationProductsUIOption5 *GetConfigurationProductsUIOption5 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionUnion1Type
}

func CreateGetConfigurationProductsUIOptionUnion1GetConfigurationProductsUIOption3(getConfigurationProductsUIOption3 GetConfigurationProductsUIOption3) GetConfigurationProductsUIOptionUnion1 {
	typ := GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption3

	return GetConfigurationProductsUIOptionUnion1{
		GetConfigurationProductsUIOption3: &getConfigurationProductsUIOption3,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIOptionUnion1GetConfigurationProductsUIOption4(getConfigurationProductsUIOption4 GetConfigurationProductsUIOption4) GetConfigurationProductsUIOptionUnion1 {
	typ := GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption4

	return GetConfigurationProductsUIOptionUnion1{
		GetConfigurationProductsUIOption4: &getConfigurationProductsUIOption4,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIOptionUnion1GetConfigurationProductsUIOption5(getConfigurationProductsUIOption5 GetConfigurationProductsUIOption5) GetConfigurationProductsUIOptionUnion1 {
	typ := GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption5

	return GetConfigurationProductsUIOptionUnion1{
		GetConfigurationProductsUIOption5: &getConfigurationProductsUIOption5,
		Type:                              typ,
	}
}

func (u *GetConfigurationProductsUIOptionUnion1) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIOption3 GetConfigurationProductsUIOption3 = GetConfigurationProductsUIOption3{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOption3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOption3 = &getConfigurationProductsUIOption3
		u.Type = GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption3
		return nil
	}

	var getConfigurationProductsUIOption4 GetConfigurationProductsUIOption4 = GetConfigurationProductsUIOption4{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOption4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOption4 = &getConfigurationProductsUIOption4
		u.Type = GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption4
		return nil
	}

	var getConfigurationProductsUIOption5 GetConfigurationProductsUIOption5 = GetConfigurationProductsUIOption5{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIOption5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIOption5 = &getConfigurationProductsUIOption5
		u.Type = GetConfigurationProductsUIOptionUnion1TypeGetConfigurationProductsUIOption5
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionUnion1", string(data))
}

func (u GetConfigurationProductsUIOptionUnion1) MarshalJSON() ([]byte, error) {
	if u.GetConfigurationProductsUIOption3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOption3, "", true)
	}

	if u.GetConfigurationProductsUIOption4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOption4, "", true)
	}

	if u.GetConfigurationProductsUIOption5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIOption5, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionUnion1: all fields are null")
}

type MinLengthAtBRANDAt6267543 struct {
}

func (m MinLengthAtBRANDAt6267543) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MinLengthAtBRANDAt6267543) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMinLength3 struct {
	AtBRANDAt626754 MinLengthAtBRANDAt6267543 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMinLength3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMinLength3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMinLength3) GetAtBRANDAt626754() MinLengthAtBRANDAt6267543 {
	if o == nil {
		return MinLengthAtBRANDAt6267543{}
	}
	return o.AtBRANDAt626754
}

type MaxLengthAtBRANDAt6267543 struct {
}

func (m MaxLengthAtBRANDAt6267543) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MaxLengthAtBRANDAt6267543) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMaxLength3 struct {
	AtBRANDAt626754 MaxLengthAtBRANDAt6267543 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMaxLength3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMaxLength3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMaxLength3) GetAtBRANDAt626754() MaxLengthAtBRANDAt6267543 {
	if o == nil {
		return MaxLengthAtBRANDAt6267543{}
	}
	return o.AtBRANDAt626754
}

type PatternAtBRANDAt6267543 struct {
}

func (p PatternAtBRANDAt6267543) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatternAtBRANDAt6267543) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsPattern3 struct {
	AtBRANDAt626754 PatternAtBRANDAt6267543 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsPattern3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPattern3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPattern3) GetAtBRANDAt626754() PatternAtBRANDAt6267543 {
	if o == nil {
		return PatternAtBRANDAt6267543{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIReadOnlyEnum7 string

const (
	GetConfigurationProductsUIReadOnlyEnum7Update GetConfigurationProductsUIReadOnlyEnum7 = "update"
	GetConfigurationProductsUIReadOnlyEnum7Create GetConfigurationProductsUIReadOnlyEnum7 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum7) ToPointer() *GetConfigurationProductsUIReadOnlyEnum7 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum7) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum7(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum7: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly7 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly7) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly7) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly7) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion7Type string

const (
	GetConfigurationProductsUIReadOnlyUnion7TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion7Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion7TypeGetConfigurationProductsUIReadOnly7     GetConfigurationProductsUIReadOnlyUnion7Type = "getConfigurationProducts_ui:read-only_7"
	GetConfigurationProductsUIReadOnlyUnion7TypeGetConfigurationProductsUIReadOnlyEnum7 GetConfigurationProductsUIReadOnlyUnion7Type = "getConfigurationProducts_ui:read-only_enum_7"
)

type GetConfigurationProductsUIReadOnlyUnion7 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly7     *GetConfigurationProductsUIReadOnly7     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum7 *GetConfigurationProductsUIReadOnlyEnum7 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion7Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion7Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion7 {
	typ := GetConfigurationProductsUIReadOnlyUnion7TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion7{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion7GetConfigurationProductsUIReadOnly7(getConfigurationProductsUIReadOnly7 GetConfigurationProductsUIReadOnly7) GetConfigurationProductsUIReadOnlyUnion7 {
	typ := GetConfigurationProductsUIReadOnlyUnion7TypeGetConfigurationProductsUIReadOnly7

	return GetConfigurationProductsUIReadOnlyUnion7{
		GetConfigurationProductsUIReadOnly7: &getConfigurationProductsUIReadOnly7,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion7GetConfigurationProductsUIReadOnlyEnum7(getConfigurationProductsUIReadOnlyEnum7 GetConfigurationProductsUIReadOnlyEnum7) GetConfigurationProductsUIReadOnlyUnion7 {
	typ := GetConfigurationProductsUIReadOnlyUnion7TypeGetConfigurationProductsUIReadOnlyEnum7

	return GetConfigurationProductsUIReadOnlyUnion7{
		GetConfigurationProductsUIReadOnlyEnum7: &getConfigurationProductsUIReadOnlyEnum7,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion7) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly7 GetConfigurationProductsUIReadOnly7 = GetConfigurationProductsUIReadOnly7{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly7 = &getConfigurationProductsUIReadOnly7
		u.Type = GetConfigurationProductsUIReadOnlyUnion7TypeGetConfigurationProductsUIReadOnly7
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion7TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum7 GetConfigurationProductsUIReadOnlyEnum7 = GetConfigurationProductsUIReadOnlyEnum7("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum7 = &getConfigurationProductsUIReadOnlyEnum7
		u.Type = GetConfigurationProductsUIReadOnlyUnion7TypeGetConfigurationProductsUIReadOnlyEnum7
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion7", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion7) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly7, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum7, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion7: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum7 string

const (
	GetConfigurationProductsUIHiddenEnum7Update GetConfigurationProductsUIHiddenEnum7 = "update"
	GetConfigurationProductsUIHiddenEnum7Create GetConfigurationProductsUIHiddenEnum7 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum7) ToPointer() *GetConfigurationProductsUIHiddenEnum7 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum7) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum7(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum7: %v", v)
	}
}

type GetConfigurationProductsUIHidden7 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden7) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden7) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden7) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion7Type string

const (
	GetConfigurationProductsUIHiddenUnion7TypeBoolean                               GetConfigurationProductsUIHiddenUnion7Type = "boolean"
	GetConfigurationProductsUIHiddenUnion7TypeGetConfigurationProductsUIHidden7     GetConfigurationProductsUIHiddenUnion7Type = "getConfigurationProducts_ui:hidden_7"
	GetConfigurationProductsUIHiddenUnion7TypeGetConfigurationProductsUIHiddenEnum7 GetConfigurationProductsUIHiddenUnion7Type = "getConfigurationProducts_ui:hidden_enum_7"
)

type GetConfigurationProductsUIHiddenUnion7 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden7     *GetConfigurationProductsUIHidden7     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum7 *GetConfigurationProductsUIHiddenEnum7 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion7Type
}

func CreateGetConfigurationProductsUIHiddenUnion7Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion7 {
	typ := GetConfigurationProductsUIHiddenUnion7TypeBoolean

	return GetConfigurationProductsUIHiddenUnion7{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion7GetConfigurationProductsUIHidden7(getConfigurationProductsUIHidden7 GetConfigurationProductsUIHidden7) GetConfigurationProductsUIHiddenUnion7 {
	typ := GetConfigurationProductsUIHiddenUnion7TypeGetConfigurationProductsUIHidden7

	return GetConfigurationProductsUIHiddenUnion7{
		GetConfigurationProductsUIHidden7: &getConfigurationProductsUIHidden7,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion7GetConfigurationProductsUIHiddenEnum7(getConfigurationProductsUIHiddenEnum7 GetConfigurationProductsUIHiddenEnum7) GetConfigurationProductsUIHiddenUnion7 {
	typ := GetConfigurationProductsUIHiddenUnion7TypeGetConfigurationProductsUIHiddenEnum7

	return GetConfigurationProductsUIHiddenUnion7{
		GetConfigurationProductsUIHiddenEnum7: &getConfigurationProductsUIHiddenEnum7,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion7) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden7 GetConfigurationProductsUIHidden7 = GetConfigurationProductsUIHidden7{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden7 = &getConfigurationProductsUIHidden7
		u.Type = GetConfigurationProductsUIHiddenUnion7TypeGetConfigurationProductsUIHidden7
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion7TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum7 GetConfigurationProductsUIHiddenEnum7 = GetConfigurationProductsUIHiddenEnum7("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum7 = &getConfigurationProductsUIHiddenEnum7
		u.Type = GetConfigurationProductsUIHiddenUnion7TypeGetConfigurationProductsUIHiddenEnum7
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion7", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion7) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden7, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum7, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion7: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum7 string

const (
	GetConfigurationProductsUIDisabledEnum7Update GetConfigurationProductsUIDisabledEnum7 = "update"
	GetConfigurationProductsUIDisabledEnum7Create GetConfigurationProductsUIDisabledEnum7 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum7) ToPointer() *GetConfigurationProductsUIDisabledEnum7 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum7) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum7(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum7: %v", v)
	}
}

type GetConfigurationProductsUIDisabled7 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled7) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled7) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled7) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion7Type string

const (
	GetConfigurationProductsUIDisabledUnion7TypeBoolean                                 GetConfigurationProductsUIDisabledUnion7Type = "boolean"
	GetConfigurationProductsUIDisabledUnion7TypeGetConfigurationProductsUIDisabled7     GetConfigurationProductsUIDisabledUnion7Type = "getConfigurationProducts_ui:disabled_7"
	GetConfigurationProductsUIDisabledUnion7TypeGetConfigurationProductsUIDisabledEnum7 GetConfigurationProductsUIDisabledUnion7Type = "getConfigurationProducts_ui:disabled_enum_7"
)

type GetConfigurationProductsUIDisabledUnion7 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled7     *GetConfigurationProductsUIDisabled7     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum7 *GetConfigurationProductsUIDisabledEnum7 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion7Type
}

func CreateGetConfigurationProductsUIDisabledUnion7Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion7 {
	typ := GetConfigurationProductsUIDisabledUnion7TypeBoolean

	return GetConfigurationProductsUIDisabledUnion7{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion7GetConfigurationProductsUIDisabled7(getConfigurationProductsUIDisabled7 GetConfigurationProductsUIDisabled7) GetConfigurationProductsUIDisabledUnion7 {
	typ := GetConfigurationProductsUIDisabledUnion7TypeGetConfigurationProductsUIDisabled7

	return GetConfigurationProductsUIDisabledUnion7{
		GetConfigurationProductsUIDisabled7: &getConfigurationProductsUIDisabled7,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion7GetConfigurationProductsUIDisabledEnum7(getConfigurationProductsUIDisabledEnum7 GetConfigurationProductsUIDisabledEnum7) GetConfigurationProductsUIDisabledUnion7 {
	typ := GetConfigurationProductsUIDisabledUnion7TypeGetConfigurationProductsUIDisabledEnum7

	return GetConfigurationProductsUIDisabledUnion7{
		GetConfigurationProductsUIDisabledEnum7: &getConfigurationProductsUIDisabledEnum7,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion7) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled7 GetConfigurationProductsUIDisabled7 = GetConfigurationProductsUIDisabled7{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled7 = &getConfigurationProductsUIDisabled7
		u.Type = GetConfigurationProductsUIDisabledUnion7TypeGetConfigurationProductsUIDisabled7
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion7TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum7 GetConfigurationProductsUIDisabledEnum7 = GetConfigurationProductsUIDisabledEnum7("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum7 = &getConfigurationProductsUIDisabledEnum7
		u.Type = GetConfigurationProductsUIDisabledUnion7TypeGetConfigurationProductsUIDisabledEnum7
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion7", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion7) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled7, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum7, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion7: all fields are null")
}

type GetConfigurationProductsUIDescription7 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription7) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription7) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription7) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion7Type string

const (
	GetConfigurationProductsUIDescriptionUnion7TypeStr                                    GetConfigurationProductsUIDescriptionUnion7Type = "str"
	GetConfigurationProductsUIDescriptionUnion7TypeGetConfigurationProductsUIDescription7 GetConfigurationProductsUIDescriptionUnion7Type = "getConfigurationProducts_ui:description_7"
)

type GetConfigurationProductsUIDescriptionUnion7 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription7 *GetConfigurationProductsUIDescription7 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion7Type
}

func CreateGetConfigurationProductsUIDescriptionUnion7Str(str string) GetConfigurationProductsUIDescriptionUnion7 {
	typ := GetConfigurationProductsUIDescriptionUnion7TypeStr

	return GetConfigurationProductsUIDescriptionUnion7{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion7GetConfigurationProductsUIDescription7(getConfigurationProductsUIDescription7 GetConfigurationProductsUIDescription7) GetConfigurationProductsUIDescriptionUnion7 {
	typ := GetConfigurationProductsUIDescriptionUnion7TypeGetConfigurationProductsUIDescription7

	return GetConfigurationProductsUIDescriptionUnion7{
		GetConfigurationProductsUIDescription7: &getConfigurationProductsUIDescription7,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion7) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription7 GetConfigurationProductsUIDescription7 = GetConfigurationProductsUIDescription7{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription7, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription7 = &getConfigurationProductsUIDescription7
		u.Type = GetConfigurationProductsUIDescriptionUnion7TypeGetConfigurationProductsUIDescription7
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion7TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion7", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion7) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription7 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription7, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion7: all fields are null")
}

type GetConfigurationProductsUIFormattedValue7 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue7) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue7) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue7) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesVercelRegion struct {
	Type             GetConfigurationProductsTypeString4           `json:"type"`
	UIControl        GetConfigurationProductsUIControlVercelRegion `json:"ui:control"`
	UIOptions        []GetConfigurationProductsUIOptionUnion1      `json:"ui:options"`
	Description      *string                                       `json:"description,omitempty"`
	MinLength        *GetConfigurationProductsMinLength3           `json:"minLength,omitempty"`
	MaxLength        *GetConfigurationProductsMaxLength3           `json:"maxLength,omitempty"`
	Pattern          *GetConfigurationProductsPattern3             `json:"pattern,omitempty"`
	Default          *string                                       `json:"default,omitempty"`
	Enum             []string                                      `json:"enum,omitempty"`
	UILabel          *string                                       `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion7     `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion7       `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion7     `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion7  `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue7    `json:"ui:formatted-value,omitempty"`
	UIPlaceholder    *string                                       `json:"ui:placeholder,omitempty"`
}

func (g GetConfigurationProductsPropertiesVercelRegion) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesVercelRegion) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control", "ui:options"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetType() GetConfigurationProductsTypeString4 {
	if o == nil {
		return GetConfigurationProductsTypeString4("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIControl() GetConfigurationProductsUIControlVercelRegion {
	if o == nil {
		return GetConfigurationProductsUIControlVercelRegion("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIOptions() []GetConfigurationProductsUIOptionUnion1 {
	if o == nil {
		return []GetConfigurationProductsUIOptionUnion1{}
	}
	return o.UIOptions
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetMinLength() *GetConfigurationProductsMinLength3 {
	if o == nil {
		return nil
	}
	return o.MinLength
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetMaxLength() *GetConfigurationProductsMaxLength3 {
	if o == nil {
		return nil
	}
	return o.MaxLength
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetPattern() *GetConfigurationProductsPattern3 {
	if o == nil {
		return nil
	}
	return o.Pattern
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetDefault() *string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetEnum() []string {
	if o == nil {
		return nil
	}
	return o.Enum
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion7 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIHidden() *GetConfigurationProductsUIHiddenUnion7 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion7 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion7 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue7 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *GetConfigurationProductsPropertiesVercelRegion) GetUIPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.UIPlaceholder
}

type GetConfigurationProductsTypeArray2 string

const (
	GetConfigurationProductsTypeArray2Array GetConfigurationProductsTypeArray2 = "array"
)

func (e GetConfigurationProductsTypeArray2) ToPointer() *GetConfigurationProductsTypeArray2 {
	return &e
}
func (e *GetConfigurationProductsTypeArray2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "array":
		*e = GetConfigurationProductsTypeArray2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeArray2: %v", v)
	}
}

type GetConfigurationProductsUIControlMultiSelect string

const (
	GetConfigurationProductsUIControlMultiSelectMultiSelect GetConfigurationProductsUIControlMultiSelect = "multi-select"
)

func (e GetConfigurationProductsUIControlMultiSelect) ToPointer() *GetConfigurationProductsUIControlMultiSelect {
	return &e
}
func (e *GetConfigurationProductsUIControlMultiSelect) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "multi-select":
		*e = GetConfigurationProductsUIControlMultiSelect(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlMultiSelect: %v", v)
	}
}

type GetConfigurationProductsTypeString3 string

const (
	GetConfigurationProductsTypeString3String GetConfigurationProductsTypeString3 = "string"
)

func (e GetConfigurationProductsTypeString3) ToPointer() *GetConfigurationProductsTypeString3 {
	return &e
}
func (e *GetConfigurationProductsTypeString3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		*e = GetConfigurationProductsTypeString3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeString3: %v", v)
	}
}

type MinLengthAtBRANDAt626754String1 struct {
}

func (m MinLengthAtBRANDAt626754String1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MinLengthAtBRANDAt626754String1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMinLengthString1 struct {
	AtBRANDAt626754 MinLengthAtBRANDAt626754String1 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMinLengthString1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMinLengthString1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMinLengthString1) GetAtBRANDAt626754() MinLengthAtBRANDAt626754String1 {
	if o == nil {
		return MinLengthAtBRANDAt626754String1{}
	}
	return o.AtBRANDAt626754
}

type MaxLengthAtBRANDAt626754String1 struct {
}

func (m MaxLengthAtBRANDAt626754String1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MaxLengthAtBRANDAt626754String1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMaxLengthString1 struct {
	AtBRANDAt626754 MaxLengthAtBRANDAt626754String1 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMaxLengthString1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMaxLengthString1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMaxLengthString1) GetAtBRANDAt626754() MaxLengthAtBRANDAt626754String1 {
	if o == nil {
		return MaxLengthAtBRANDAt626754String1{}
	}
	return o.AtBRANDAt626754
}

type PatternAtBRANDAt626754String1 struct {
}

func (p PatternAtBRANDAt626754String1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatternAtBRANDAt626754String1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsPatternString1 struct {
	AtBRANDAt626754 PatternAtBRANDAt626754String1 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsPatternString1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPatternString1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPatternString1) GetAtBRANDAt626754() PatternAtBRANDAt626754String1 {
	if o == nil {
		return PatternAtBRANDAt626754String1{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsItemsString1 struct {
	Type        GetConfigurationProductsTypeString3       `json:"type"`
	Description *string                                   `json:"description,omitempty"`
	MinLength   *GetConfigurationProductsMinLengthString1 `json:"minLength,omitempty"`
	MaxLength   *GetConfigurationProductsMaxLengthString1 `json:"maxLength,omitempty"`
	Pattern     *GetConfigurationProductsPatternString1   `json:"pattern,omitempty"`
	Default     *string                                   `json:"default,omitempty"`
	Enum        []string                                  `json:"enum,omitempty"`
}

func (g GetConfigurationProductsItemsString1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsItemsString1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsItemsString1) GetType() GetConfigurationProductsTypeString3 {
	if o == nil {
		return GetConfigurationProductsTypeString3("")
	}
	return o.Type
}

func (o *GetConfigurationProductsItemsString1) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsItemsString1) GetMinLength() *GetConfigurationProductsMinLengthString1 {
	if o == nil {
		return nil
	}
	return o.MinLength
}

func (o *GetConfigurationProductsItemsString1) GetMaxLength() *GetConfigurationProductsMaxLengthString1 {
	if o == nil {
		return nil
	}
	return o.MaxLength
}

func (o *GetConfigurationProductsItemsString1) GetPattern() *GetConfigurationProductsPatternString1 {
	if o == nil {
		return nil
	}
	return o.Pattern
}

func (o *GetConfigurationProductsItemsString1) GetDefault() *string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsItemsString1) GetEnum() []string {
	if o == nil {
		return nil
	}
	return o.Enum
}

type GetConfigurationProductsDisabledUIOptionEnum2 string

const (
	GetConfigurationProductsDisabledUIOptionEnum2Update GetConfigurationProductsDisabledUIOptionEnum2 = "update"
	GetConfigurationProductsDisabledUIOptionEnum2Create GetConfigurationProductsDisabledUIOptionEnum2 = "create"
)

func (e GetConfigurationProductsDisabledUIOptionEnum2) ToPointer() *GetConfigurationProductsDisabledUIOptionEnum2 {
	return &e
}
func (e *GetConfigurationProductsDisabledUIOptionEnum2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsDisabledUIOptionEnum2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsDisabledUIOptionEnum2: %v", v)
	}
}

type GetConfigurationProductsDisabledUIOption2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsDisabledUIOption2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsDisabledUIOption2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsDisabledUIOption2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionDisabledUnion2Type string

const (
	GetConfigurationProductsUIOptionDisabledUnion2TypeBoolean                                       GetConfigurationProductsUIOptionDisabledUnion2Type = "boolean"
	GetConfigurationProductsUIOptionDisabledUnion2TypeGetConfigurationProductsDisabledUIOption2     GetConfigurationProductsUIOptionDisabledUnion2Type = "getConfigurationProducts_disabled_ui:option_2"
	GetConfigurationProductsUIOptionDisabledUnion2TypeGetConfigurationProductsDisabledUIOptionEnum2 GetConfigurationProductsUIOptionDisabledUnion2Type = "getConfigurationProducts_disabled_ui:option_enum_2"
)

type GetConfigurationProductsUIOptionDisabledUnion2 struct {
	Boolean                                       *bool                                          `queryParam:"inline"`
	GetConfigurationProductsDisabledUIOption2     *GetConfigurationProductsDisabledUIOption2     `queryParam:"inline"`
	GetConfigurationProductsDisabledUIOptionEnum2 *GetConfigurationProductsDisabledUIOptionEnum2 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionDisabledUnion2Type
}

func CreateGetConfigurationProductsUIOptionDisabledUnion2Boolean(boolean bool) GetConfigurationProductsUIOptionDisabledUnion2 {
	typ := GetConfigurationProductsUIOptionDisabledUnion2TypeBoolean

	return GetConfigurationProductsUIOptionDisabledUnion2{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion2GetConfigurationProductsDisabledUIOption2(getConfigurationProductsDisabledUIOption2 GetConfigurationProductsDisabledUIOption2) GetConfigurationProductsUIOptionDisabledUnion2 {
	typ := GetConfigurationProductsUIOptionDisabledUnion2TypeGetConfigurationProductsDisabledUIOption2

	return GetConfigurationProductsUIOptionDisabledUnion2{
		GetConfigurationProductsDisabledUIOption2: &getConfigurationProductsDisabledUIOption2,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion2GetConfigurationProductsDisabledUIOptionEnum2(getConfigurationProductsDisabledUIOptionEnum2 GetConfigurationProductsDisabledUIOptionEnum2) GetConfigurationProductsUIOptionDisabledUnion2 {
	typ := GetConfigurationProductsUIOptionDisabledUnion2TypeGetConfigurationProductsDisabledUIOptionEnum2

	return GetConfigurationProductsUIOptionDisabledUnion2{
		GetConfigurationProductsDisabledUIOptionEnum2: &getConfigurationProductsDisabledUIOptionEnum2,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionDisabledUnion2) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsDisabledUIOption2 GetConfigurationProductsDisabledUIOption2 = GetConfigurationProductsDisabledUIOption2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsDisabledUIOption2, "", true, nil); err == nil {
		u.GetConfigurationProductsDisabledUIOption2 = &getConfigurationProductsDisabledUIOption2
		u.Type = GetConfigurationProductsUIOptionDisabledUnion2TypeGetConfigurationProductsDisabledUIOption2
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionDisabledUnion2TypeBoolean
		return nil
	}

	var getConfigurationProductsDisabledUIOptionEnum2 GetConfigurationProductsDisabledUIOptionEnum2 = GetConfigurationProductsDisabledUIOptionEnum2("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsDisabledUIOptionEnum2, "", true, nil); err == nil {
		u.GetConfigurationProductsDisabledUIOptionEnum2 = &getConfigurationProductsDisabledUIOptionEnum2
		u.Type = GetConfigurationProductsUIOptionDisabledUnion2TypeGetConfigurationProductsDisabledUIOptionEnum2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionDisabledUnion2", string(data))
}

func (u GetConfigurationProductsUIOptionDisabledUnion2) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsDisabledUIOption2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsDisabledUIOption2, "", true)
	}

	if u.GetConfigurationProductsDisabledUIOptionEnum2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsDisabledUIOptionEnum2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionDisabledUnion2: all fields are null")
}

type GetConfigurationProductsHiddenUIOptionEnum2 string

const (
	GetConfigurationProductsHiddenUIOptionEnum2Update GetConfigurationProductsHiddenUIOptionEnum2 = "update"
	GetConfigurationProductsHiddenUIOptionEnum2Create GetConfigurationProductsHiddenUIOptionEnum2 = "create"
)

func (e GetConfigurationProductsHiddenUIOptionEnum2) ToPointer() *GetConfigurationProductsHiddenUIOptionEnum2 {
	return &e
}
func (e *GetConfigurationProductsHiddenUIOptionEnum2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsHiddenUIOptionEnum2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsHiddenUIOptionEnum2: %v", v)
	}
}

type GetConfigurationProductsHiddenUIOption2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsHiddenUIOption2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsHiddenUIOption2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsHiddenUIOption2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionHiddenUnion2Type string

const (
	GetConfigurationProductsUIOptionHiddenUnion2TypeBoolean                                     GetConfigurationProductsUIOptionHiddenUnion2Type = "boolean"
	GetConfigurationProductsUIOptionHiddenUnion2TypeGetConfigurationProductsHiddenUIOption2     GetConfigurationProductsUIOptionHiddenUnion2Type = "getConfigurationProducts_hidden_ui:option_2"
	GetConfigurationProductsUIOptionHiddenUnion2TypeGetConfigurationProductsHiddenUIOptionEnum2 GetConfigurationProductsUIOptionHiddenUnion2Type = "getConfigurationProducts_hidden_ui:option_enum_2"
)

type GetConfigurationProductsUIOptionHiddenUnion2 struct {
	Boolean                                     *bool                                        `queryParam:"inline"`
	GetConfigurationProductsHiddenUIOption2     *GetConfigurationProductsHiddenUIOption2     `queryParam:"inline"`
	GetConfigurationProductsHiddenUIOptionEnum2 *GetConfigurationProductsHiddenUIOptionEnum2 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionHiddenUnion2Type
}

func CreateGetConfigurationProductsUIOptionHiddenUnion2Boolean(boolean bool) GetConfigurationProductsUIOptionHiddenUnion2 {
	typ := GetConfigurationProductsUIOptionHiddenUnion2TypeBoolean

	return GetConfigurationProductsUIOptionHiddenUnion2{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion2GetConfigurationProductsHiddenUIOption2(getConfigurationProductsHiddenUIOption2 GetConfigurationProductsHiddenUIOption2) GetConfigurationProductsUIOptionHiddenUnion2 {
	typ := GetConfigurationProductsUIOptionHiddenUnion2TypeGetConfigurationProductsHiddenUIOption2

	return GetConfigurationProductsUIOptionHiddenUnion2{
		GetConfigurationProductsHiddenUIOption2: &getConfigurationProductsHiddenUIOption2,
		Type:                                    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion2GetConfigurationProductsHiddenUIOptionEnum2(getConfigurationProductsHiddenUIOptionEnum2 GetConfigurationProductsHiddenUIOptionEnum2) GetConfigurationProductsUIOptionHiddenUnion2 {
	typ := GetConfigurationProductsUIOptionHiddenUnion2TypeGetConfigurationProductsHiddenUIOptionEnum2

	return GetConfigurationProductsUIOptionHiddenUnion2{
		GetConfigurationProductsHiddenUIOptionEnum2: &getConfigurationProductsHiddenUIOptionEnum2,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionHiddenUnion2) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsHiddenUIOption2 GetConfigurationProductsHiddenUIOption2 = GetConfigurationProductsHiddenUIOption2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsHiddenUIOption2, "", true, nil); err == nil {
		u.GetConfigurationProductsHiddenUIOption2 = &getConfigurationProductsHiddenUIOption2
		u.Type = GetConfigurationProductsUIOptionHiddenUnion2TypeGetConfigurationProductsHiddenUIOption2
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionHiddenUnion2TypeBoolean
		return nil
	}

	var getConfigurationProductsHiddenUIOptionEnum2 GetConfigurationProductsHiddenUIOptionEnum2 = GetConfigurationProductsHiddenUIOptionEnum2("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsHiddenUIOptionEnum2, "", true, nil); err == nil {
		u.GetConfigurationProductsHiddenUIOptionEnum2 = &getConfigurationProductsHiddenUIOptionEnum2
		u.Type = GetConfigurationProductsUIOptionHiddenUnion2TypeGetConfigurationProductsHiddenUIOptionEnum2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionHiddenUnion2", string(data))
}

func (u GetConfigurationProductsUIOptionHiddenUnion2) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsHiddenUIOption2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsHiddenUIOption2, "", true)
	}

	if u.GetConfigurationProductsHiddenUIOptionEnum2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsHiddenUIOptionEnum2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionHiddenUnion2: all fields are null")
}

type GetConfigurationProductsUIOption2 struct {
	Value    string                                          `json:"value"`
	Label    string                                          `json:"label"`
	Disabled *GetConfigurationProductsUIOptionDisabledUnion2 `json:"disabled,omitempty"`
	Hidden   *GetConfigurationProductsUIOptionHiddenUnion2   `json:"hidden,omitempty"`
}

func (g GetConfigurationProductsUIOption2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"value", "label"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption2) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *GetConfigurationProductsUIOption2) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *GetConfigurationProductsUIOption2) GetDisabled() *GetConfigurationProductsUIOptionDisabledUnion2 {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *GetConfigurationProductsUIOption2) GetHidden() *GetConfigurationProductsUIOptionHiddenUnion2 {
	if o == nil {
		return nil
	}
	return o.Hidden
}

type GetConfigurationProductsUIReadOnlyEnum6 string

const (
	GetConfigurationProductsUIReadOnlyEnum6Update GetConfigurationProductsUIReadOnlyEnum6 = "update"
	GetConfigurationProductsUIReadOnlyEnum6Create GetConfigurationProductsUIReadOnlyEnum6 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum6) ToPointer() *GetConfigurationProductsUIReadOnlyEnum6 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum6: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly6 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly6) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly6) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly6) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion6Type string

const (
	GetConfigurationProductsUIReadOnlyUnion6TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion6Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion6TypeGetConfigurationProductsUIReadOnly6     GetConfigurationProductsUIReadOnlyUnion6Type = "getConfigurationProducts_ui:read-only_6"
	GetConfigurationProductsUIReadOnlyUnion6TypeGetConfigurationProductsUIReadOnlyEnum6 GetConfigurationProductsUIReadOnlyUnion6Type = "getConfigurationProducts_ui:read-only_enum_6"
)

type GetConfigurationProductsUIReadOnlyUnion6 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly6     *GetConfigurationProductsUIReadOnly6     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum6 *GetConfigurationProductsUIReadOnlyEnum6 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion6Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion6Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion6 {
	typ := GetConfigurationProductsUIReadOnlyUnion6TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion6{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion6GetConfigurationProductsUIReadOnly6(getConfigurationProductsUIReadOnly6 GetConfigurationProductsUIReadOnly6) GetConfigurationProductsUIReadOnlyUnion6 {
	typ := GetConfigurationProductsUIReadOnlyUnion6TypeGetConfigurationProductsUIReadOnly6

	return GetConfigurationProductsUIReadOnlyUnion6{
		GetConfigurationProductsUIReadOnly6: &getConfigurationProductsUIReadOnly6,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion6GetConfigurationProductsUIReadOnlyEnum6(getConfigurationProductsUIReadOnlyEnum6 GetConfigurationProductsUIReadOnlyEnum6) GetConfigurationProductsUIReadOnlyUnion6 {
	typ := GetConfigurationProductsUIReadOnlyUnion6TypeGetConfigurationProductsUIReadOnlyEnum6

	return GetConfigurationProductsUIReadOnlyUnion6{
		GetConfigurationProductsUIReadOnlyEnum6: &getConfigurationProductsUIReadOnlyEnum6,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion6) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly6 GetConfigurationProductsUIReadOnly6 = GetConfigurationProductsUIReadOnly6{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly6 = &getConfigurationProductsUIReadOnly6
		u.Type = GetConfigurationProductsUIReadOnlyUnion6TypeGetConfigurationProductsUIReadOnly6
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion6TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum6 GetConfigurationProductsUIReadOnlyEnum6 = GetConfigurationProductsUIReadOnlyEnum6("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum6 = &getConfigurationProductsUIReadOnlyEnum6
		u.Type = GetConfigurationProductsUIReadOnlyUnion6TypeGetConfigurationProductsUIReadOnlyEnum6
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion6", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion6) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly6, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum6, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion6: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum6 string

const (
	GetConfigurationProductsUIHiddenEnum6Update GetConfigurationProductsUIHiddenEnum6 = "update"
	GetConfigurationProductsUIHiddenEnum6Create GetConfigurationProductsUIHiddenEnum6 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum6) ToPointer() *GetConfigurationProductsUIHiddenEnum6 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum6: %v", v)
	}
}

type GetConfigurationProductsUIHidden6 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden6) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden6) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden6) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion6Type string

const (
	GetConfigurationProductsUIHiddenUnion6TypeBoolean                               GetConfigurationProductsUIHiddenUnion6Type = "boolean"
	GetConfigurationProductsUIHiddenUnion6TypeGetConfigurationProductsUIHidden6     GetConfigurationProductsUIHiddenUnion6Type = "getConfigurationProducts_ui:hidden_6"
	GetConfigurationProductsUIHiddenUnion6TypeGetConfigurationProductsUIHiddenEnum6 GetConfigurationProductsUIHiddenUnion6Type = "getConfigurationProducts_ui:hidden_enum_6"
)

type GetConfigurationProductsUIHiddenUnion6 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden6     *GetConfigurationProductsUIHidden6     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum6 *GetConfigurationProductsUIHiddenEnum6 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion6Type
}

func CreateGetConfigurationProductsUIHiddenUnion6Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion6 {
	typ := GetConfigurationProductsUIHiddenUnion6TypeBoolean

	return GetConfigurationProductsUIHiddenUnion6{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion6GetConfigurationProductsUIHidden6(getConfigurationProductsUIHidden6 GetConfigurationProductsUIHidden6) GetConfigurationProductsUIHiddenUnion6 {
	typ := GetConfigurationProductsUIHiddenUnion6TypeGetConfigurationProductsUIHidden6

	return GetConfigurationProductsUIHiddenUnion6{
		GetConfigurationProductsUIHidden6: &getConfigurationProductsUIHidden6,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion6GetConfigurationProductsUIHiddenEnum6(getConfigurationProductsUIHiddenEnum6 GetConfigurationProductsUIHiddenEnum6) GetConfigurationProductsUIHiddenUnion6 {
	typ := GetConfigurationProductsUIHiddenUnion6TypeGetConfigurationProductsUIHiddenEnum6

	return GetConfigurationProductsUIHiddenUnion6{
		GetConfigurationProductsUIHiddenEnum6: &getConfigurationProductsUIHiddenEnum6,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion6) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden6 GetConfigurationProductsUIHidden6 = GetConfigurationProductsUIHidden6{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden6 = &getConfigurationProductsUIHidden6
		u.Type = GetConfigurationProductsUIHiddenUnion6TypeGetConfigurationProductsUIHidden6
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion6TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum6 GetConfigurationProductsUIHiddenEnum6 = GetConfigurationProductsUIHiddenEnum6("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum6 = &getConfigurationProductsUIHiddenEnum6
		u.Type = GetConfigurationProductsUIHiddenUnion6TypeGetConfigurationProductsUIHiddenEnum6
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion6", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion6) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden6, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum6, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion6: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum6 string

const (
	GetConfigurationProductsUIDisabledEnum6Update GetConfigurationProductsUIDisabledEnum6 = "update"
	GetConfigurationProductsUIDisabledEnum6Create GetConfigurationProductsUIDisabledEnum6 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum6) ToPointer() *GetConfigurationProductsUIDisabledEnum6 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum6: %v", v)
	}
}

type GetConfigurationProductsUIDisabled6 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled6) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled6) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled6) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion6Type string

const (
	GetConfigurationProductsUIDisabledUnion6TypeBoolean                                 GetConfigurationProductsUIDisabledUnion6Type = "boolean"
	GetConfigurationProductsUIDisabledUnion6TypeGetConfigurationProductsUIDisabled6     GetConfigurationProductsUIDisabledUnion6Type = "getConfigurationProducts_ui:disabled_6"
	GetConfigurationProductsUIDisabledUnion6TypeGetConfigurationProductsUIDisabledEnum6 GetConfigurationProductsUIDisabledUnion6Type = "getConfigurationProducts_ui:disabled_enum_6"
)

type GetConfigurationProductsUIDisabledUnion6 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled6     *GetConfigurationProductsUIDisabled6     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum6 *GetConfigurationProductsUIDisabledEnum6 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion6Type
}

func CreateGetConfigurationProductsUIDisabledUnion6Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion6 {
	typ := GetConfigurationProductsUIDisabledUnion6TypeBoolean

	return GetConfigurationProductsUIDisabledUnion6{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion6GetConfigurationProductsUIDisabled6(getConfigurationProductsUIDisabled6 GetConfigurationProductsUIDisabled6) GetConfigurationProductsUIDisabledUnion6 {
	typ := GetConfigurationProductsUIDisabledUnion6TypeGetConfigurationProductsUIDisabled6

	return GetConfigurationProductsUIDisabledUnion6{
		GetConfigurationProductsUIDisabled6: &getConfigurationProductsUIDisabled6,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion6GetConfigurationProductsUIDisabledEnum6(getConfigurationProductsUIDisabledEnum6 GetConfigurationProductsUIDisabledEnum6) GetConfigurationProductsUIDisabledUnion6 {
	typ := GetConfigurationProductsUIDisabledUnion6TypeGetConfigurationProductsUIDisabledEnum6

	return GetConfigurationProductsUIDisabledUnion6{
		GetConfigurationProductsUIDisabledEnum6: &getConfigurationProductsUIDisabledEnum6,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion6) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled6 GetConfigurationProductsUIDisabled6 = GetConfigurationProductsUIDisabled6{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled6 = &getConfigurationProductsUIDisabled6
		u.Type = GetConfigurationProductsUIDisabledUnion6TypeGetConfigurationProductsUIDisabled6
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion6TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum6 GetConfigurationProductsUIDisabledEnum6 = GetConfigurationProductsUIDisabledEnum6("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum6 = &getConfigurationProductsUIDisabledEnum6
		u.Type = GetConfigurationProductsUIDisabledUnion6TypeGetConfigurationProductsUIDisabledEnum6
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion6", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion6) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled6, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum6, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion6: all fields are null")
}

type GetConfigurationProductsUIDescription6 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription6) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription6) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription6) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion6Type string

const (
	GetConfigurationProductsUIDescriptionUnion6TypeStr                                    GetConfigurationProductsUIDescriptionUnion6Type = "str"
	GetConfigurationProductsUIDescriptionUnion6TypeGetConfigurationProductsUIDescription6 GetConfigurationProductsUIDescriptionUnion6Type = "getConfigurationProducts_ui:description_6"
)

type GetConfigurationProductsUIDescriptionUnion6 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription6 *GetConfigurationProductsUIDescription6 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion6Type
}

func CreateGetConfigurationProductsUIDescriptionUnion6Str(str string) GetConfigurationProductsUIDescriptionUnion6 {
	typ := GetConfigurationProductsUIDescriptionUnion6TypeStr

	return GetConfigurationProductsUIDescriptionUnion6{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion6GetConfigurationProductsUIDescription6(getConfigurationProductsUIDescription6 GetConfigurationProductsUIDescription6) GetConfigurationProductsUIDescriptionUnion6 {
	typ := GetConfigurationProductsUIDescriptionUnion6TypeGetConfigurationProductsUIDescription6

	return GetConfigurationProductsUIDescriptionUnion6{
		GetConfigurationProductsUIDescription6: &getConfigurationProductsUIDescription6,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion6) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription6 GetConfigurationProductsUIDescription6 = GetConfigurationProductsUIDescription6{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription6, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription6 = &getConfigurationProductsUIDescription6
		u.Type = GetConfigurationProductsUIDescriptionUnion6TypeGetConfigurationProductsUIDescription6
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion6TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion6", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion6) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription6 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription6, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion6: all fields are null")
}

type GetConfigurationProductsUIFormattedValue6 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue6) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue6) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue6) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesMultiSelect struct {
	Type             GetConfigurationProductsTypeArray2           `json:"type"`
	UIControl        GetConfigurationProductsUIControlMultiSelect `json:"ui:control"`
	Items            GetConfigurationProductsItemsString1         `json:"items"`
	UIOptions        []GetConfigurationProductsUIOption2          `json:"ui:options"`
	Description      *string                                      `json:"description,omitempty"`
	MinItems         *float64                                     `json:"minItems,omitempty"`
	MaxItems         *float64                                     `json:"maxItems,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion6    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion6      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion6    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion6 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue6   `json:"ui:formatted-value,omitempty"`
	UIPlaceholder    *string                                      `json:"ui:placeholder,omitempty"`
	Default          []string                                     `json:"default,omitempty"`
	Example          []string                                     `json:"example,omitempty"`
}

func (g GetConfigurationProductsPropertiesMultiSelect) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesMultiSelect) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control", "items", "ui:options"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetType() GetConfigurationProductsTypeArray2 {
	if o == nil {
		return GetConfigurationProductsTypeArray2("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIControl() GetConfigurationProductsUIControlMultiSelect {
	if o == nil {
		return GetConfigurationProductsUIControlMultiSelect("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetItems() GetConfigurationProductsItemsString1 {
	if o == nil {
		return GetConfigurationProductsItemsString1{}
	}
	return o.Items
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIOptions() []GetConfigurationProductsUIOption2 {
	if o == nil {
		return []GetConfigurationProductsUIOption2{}
	}
	return o.UIOptions
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetMinItems() *float64 {
	if o == nil {
		return nil
	}
	return o.MinItems
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetMaxItems() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxItems
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion6 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIHidden() *GetConfigurationProductsUIHiddenUnion6 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion6 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion6 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue6 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetUIPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.UIPlaceholder
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetDefault() []string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsPropertiesMultiSelect) GetExample() []string {
	if o == nil {
		return nil
	}
	return o.Example
}

type GetConfigurationProductsTypeString2 string

const (
	GetConfigurationProductsTypeString2String GetConfigurationProductsTypeString2 = "string"
)

func (e GetConfigurationProductsTypeString2) ToPointer() *GetConfigurationProductsTypeString2 {
	return &e
}
func (e *GetConfigurationProductsTypeString2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		*e = GetConfigurationProductsTypeString2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeString2: %v", v)
	}
}

type GetConfigurationProductsUIControlSelect string

const (
	GetConfigurationProductsUIControlSelectSelect GetConfigurationProductsUIControlSelect = "select"
)

func (e GetConfigurationProductsUIControlSelect) ToPointer() *GetConfigurationProductsUIControlSelect {
	return &e
}
func (e *GetConfigurationProductsUIControlSelect) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "select":
		*e = GetConfigurationProductsUIControlSelect(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlSelect: %v", v)
	}
}

type GetConfigurationProductsDisabledUIOptionEnum1 string

const (
	GetConfigurationProductsDisabledUIOptionEnum1Update GetConfigurationProductsDisabledUIOptionEnum1 = "update"
	GetConfigurationProductsDisabledUIOptionEnum1Create GetConfigurationProductsDisabledUIOptionEnum1 = "create"
)

func (e GetConfigurationProductsDisabledUIOptionEnum1) ToPointer() *GetConfigurationProductsDisabledUIOptionEnum1 {
	return &e
}
func (e *GetConfigurationProductsDisabledUIOptionEnum1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsDisabledUIOptionEnum1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsDisabledUIOptionEnum1: %v", v)
	}
}

type GetConfigurationProductsDisabledUIOption1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsDisabledUIOption1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsDisabledUIOption1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsDisabledUIOption1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionDisabledUnion1Type string

const (
	GetConfigurationProductsUIOptionDisabledUnion1TypeBoolean                                       GetConfigurationProductsUIOptionDisabledUnion1Type = "boolean"
	GetConfigurationProductsUIOptionDisabledUnion1TypeGetConfigurationProductsDisabledUIOption1     GetConfigurationProductsUIOptionDisabledUnion1Type = "getConfigurationProducts_disabled_ui:option_1"
	GetConfigurationProductsUIOptionDisabledUnion1TypeGetConfigurationProductsDisabledUIOptionEnum1 GetConfigurationProductsUIOptionDisabledUnion1Type = "getConfigurationProducts_disabled_ui:option_enum_1"
)

type GetConfigurationProductsUIOptionDisabledUnion1 struct {
	Boolean                                       *bool                                          `queryParam:"inline"`
	GetConfigurationProductsDisabledUIOption1     *GetConfigurationProductsDisabledUIOption1     `queryParam:"inline"`
	GetConfigurationProductsDisabledUIOptionEnum1 *GetConfigurationProductsDisabledUIOptionEnum1 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionDisabledUnion1Type
}

func CreateGetConfigurationProductsUIOptionDisabledUnion1Boolean(boolean bool) GetConfigurationProductsUIOptionDisabledUnion1 {
	typ := GetConfigurationProductsUIOptionDisabledUnion1TypeBoolean

	return GetConfigurationProductsUIOptionDisabledUnion1{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion1GetConfigurationProductsDisabledUIOption1(getConfigurationProductsDisabledUIOption1 GetConfigurationProductsDisabledUIOption1) GetConfigurationProductsUIOptionDisabledUnion1 {
	typ := GetConfigurationProductsUIOptionDisabledUnion1TypeGetConfigurationProductsDisabledUIOption1

	return GetConfigurationProductsUIOptionDisabledUnion1{
		GetConfigurationProductsDisabledUIOption1: &getConfigurationProductsDisabledUIOption1,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIOptionDisabledUnion1GetConfigurationProductsDisabledUIOptionEnum1(getConfigurationProductsDisabledUIOptionEnum1 GetConfigurationProductsDisabledUIOptionEnum1) GetConfigurationProductsUIOptionDisabledUnion1 {
	typ := GetConfigurationProductsUIOptionDisabledUnion1TypeGetConfigurationProductsDisabledUIOptionEnum1

	return GetConfigurationProductsUIOptionDisabledUnion1{
		GetConfigurationProductsDisabledUIOptionEnum1: &getConfigurationProductsDisabledUIOptionEnum1,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionDisabledUnion1) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsDisabledUIOption1 GetConfigurationProductsDisabledUIOption1 = GetConfigurationProductsDisabledUIOption1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsDisabledUIOption1, "", true, nil); err == nil {
		u.GetConfigurationProductsDisabledUIOption1 = &getConfigurationProductsDisabledUIOption1
		u.Type = GetConfigurationProductsUIOptionDisabledUnion1TypeGetConfigurationProductsDisabledUIOption1
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionDisabledUnion1TypeBoolean
		return nil
	}

	var getConfigurationProductsDisabledUIOptionEnum1 GetConfigurationProductsDisabledUIOptionEnum1 = GetConfigurationProductsDisabledUIOptionEnum1("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsDisabledUIOptionEnum1, "", true, nil); err == nil {
		u.GetConfigurationProductsDisabledUIOptionEnum1 = &getConfigurationProductsDisabledUIOptionEnum1
		u.Type = GetConfigurationProductsUIOptionDisabledUnion1TypeGetConfigurationProductsDisabledUIOptionEnum1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionDisabledUnion1", string(data))
}

func (u GetConfigurationProductsUIOptionDisabledUnion1) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsDisabledUIOption1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsDisabledUIOption1, "", true)
	}

	if u.GetConfigurationProductsDisabledUIOptionEnum1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsDisabledUIOptionEnum1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionDisabledUnion1: all fields are null")
}

type GetConfigurationProductsHiddenUIOptionEnum1 string

const (
	GetConfigurationProductsHiddenUIOptionEnum1Update GetConfigurationProductsHiddenUIOptionEnum1 = "update"
	GetConfigurationProductsHiddenUIOptionEnum1Create GetConfigurationProductsHiddenUIOptionEnum1 = "create"
)

func (e GetConfigurationProductsHiddenUIOptionEnum1) ToPointer() *GetConfigurationProductsHiddenUIOptionEnum1 {
	return &e
}
func (e *GetConfigurationProductsHiddenUIOptionEnum1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsHiddenUIOptionEnum1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsHiddenUIOptionEnum1: %v", v)
	}
}

type GetConfigurationProductsHiddenUIOption1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsHiddenUIOption1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsHiddenUIOption1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsHiddenUIOption1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIOptionHiddenUnion1Type string

const (
	GetConfigurationProductsUIOptionHiddenUnion1TypeBoolean                                     GetConfigurationProductsUIOptionHiddenUnion1Type = "boolean"
	GetConfigurationProductsUIOptionHiddenUnion1TypeGetConfigurationProductsHiddenUIOption1     GetConfigurationProductsUIOptionHiddenUnion1Type = "getConfigurationProducts_hidden_ui:option_1"
	GetConfigurationProductsUIOptionHiddenUnion1TypeGetConfigurationProductsHiddenUIOptionEnum1 GetConfigurationProductsUIOptionHiddenUnion1Type = "getConfigurationProducts_hidden_ui:option_enum_1"
)

type GetConfigurationProductsUIOptionHiddenUnion1 struct {
	Boolean                                     *bool                                        `queryParam:"inline"`
	GetConfigurationProductsHiddenUIOption1     *GetConfigurationProductsHiddenUIOption1     `queryParam:"inline"`
	GetConfigurationProductsHiddenUIOptionEnum1 *GetConfigurationProductsHiddenUIOptionEnum1 `queryParam:"inline"`

	Type GetConfigurationProductsUIOptionHiddenUnion1Type
}

func CreateGetConfigurationProductsUIOptionHiddenUnion1Boolean(boolean bool) GetConfigurationProductsUIOptionHiddenUnion1 {
	typ := GetConfigurationProductsUIOptionHiddenUnion1TypeBoolean

	return GetConfigurationProductsUIOptionHiddenUnion1{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion1GetConfigurationProductsHiddenUIOption1(getConfigurationProductsHiddenUIOption1 GetConfigurationProductsHiddenUIOption1) GetConfigurationProductsUIOptionHiddenUnion1 {
	typ := GetConfigurationProductsUIOptionHiddenUnion1TypeGetConfigurationProductsHiddenUIOption1

	return GetConfigurationProductsUIOptionHiddenUnion1{
		GetConfigurationProductsHiddenUIOption1: &getConfigurationProductsHiddenUIOption1,
		Type:                                    typ,
	}
}

func CreateGetConfigurationProductsUIOptionHiddenUnion1GetConfigurationProductsHiddenUIOptionEnum1(getConfigurationProductsHiddenUIOptionEnum1 GetConfigurationProductsHiddenUIOptionEnum1) GetConfigurationProductsUIOptionHiddenUnion1 {
	typ := GetConfigurationProductsUIOptionHiddenUnion1TypeGetConfigurationProductsHiddenUIOptionEnum1

	return GetConfigurationProductsUIOptionHiddenUnion1{
		GetConfigurationProductsHiddenUIOptionEnum1: &getConfigurationProductsHiddenUIOptionEnum1,
		Type: typ,
	}
}

func (u *GetConfigurationProductsUIOptionHiddenUnion1) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsHiddenUIOption1 GetConfigurationProductsHiddenUIOption1 = GetConfigurationProductsHiddenUIOption1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsHiddenUIOption1, "", true, nil); err == nil {
		u.GetConfigurationProductsHiddenUIOption1 = &getConfigurationProductsHiddenUIOption1
		u.Type = GetConfigurationProductsUIOptionHiddenUnion1TypeGetConfigurationProductsHiddenUIOption1
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIOptionHiddenUnion1TypeBoolean
		return nil
	}

	var getConfigurationProductsHiddenUIOptionEnum1 GetConfigurationProductsHiddenUIOptionEnum1 = GetConfigurationProductsHiddenUIOptionEnum1("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsHiddenUIOptionEnum1, "", true, nil); err == nil {
		u.GetConfigurationProductsHiddenUIOptionEnum1 = &getConfigurationProductsHiddenUIOptionEnum1
		u.Type = GetConfigurationProductsUIOptionHiddenUnion1TypeGetConfigurationProductsHiddenUIOptionEnum1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIOptionHiddenUnion1", string(data))
}

func (u GetConfigurationProductsUIOptionHiddenUnion1) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsHiddenUIOption1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsHiddenUIOption1, "", true)
	}

	if u.GetConfigurationProductsHiddenUIOptionEnum1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsHiddenUIOptionEnum1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIOptionHiddenUnion1: all fields are null")
}

type GetConfigurationProductsUIOption1 struct {
	Value    string                                          `json:"value"`
	Label    string                                          `json:"label"`
	Disabled *GetConfigurationProductsUIOptionDisabledUnion1 `json:"disabled,omitempty"`
	Hidden   *GetConfigurationProductsUIOptionHiddenUnion1   `json:"hidden,omitempty"`
}

func (g GetConfigurationProductsUIOption1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIOption1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"value", "label"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIOption1) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *GetConfigurationProductsUIOption1) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *GetConfigurationProductsUIOption1) GetDisabled() *GetConfigurationProductsUIOptionDisabledUnion1 {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *GetConfigurationProductsUIOption1) GetHidden() *GetConfigurationProductsUIOptionHiddenUnion1 {
	if o == nil {
		return nil
	}
	return o.Hidden
}

type MinLengthAtBRANDAt6267542 struct {
}

func (m MinLengthAtBRANDAt6267542) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MinLengthAtBRANDAt6267542) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMinLength2 struct {
	AtBRANDAt626754 MinLengthAtBRANDAt6267542 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMinLength2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMinLength2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMinLength2) GetAtBRANDAt626754() MinLengthAtBRANDAt6267542 {
	if o == nil {
		return MinLengthAtBRANDAt6267542{}
	}
	return o.AtBRANDAt626754
}

type MaxLengthAtBRANDAt6267542 struct {
}

func (m MaxLengthAtBRANDAt6267542) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MaxLengthAtBRANDAt6267542) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMaxLength2 struct {
	AtBRANDAt626754 MaxLengthAtBRANDAt6267542 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMaxLength2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMaxLength2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMaxLength2) GetAtBRANDAt626754() MaxLengthAtBRANDAt6267542 {
	if o == nil {
		return MaxLengthAtBRANDAt6267542{}
	}
	return o.AtBRANDAt626754
}

type PatternAtBRANDAt6267542 struct {
}

func (p PatternAtBRANDAt6267542) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatternAtBRANDAt6267542) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsPattern2 struct {
	AtBRANDAt626754 PatternAtBRANDAt6267542 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsPattern2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPattern2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPattern2) GetAtBRANDAt626754() PatternAtBRANDAt6267542 {
	if o == nil {
		return PatternAtBRANDAt6267542{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIReadOnlyEnum5 string

const (
	GetConfigurationProductsUIReadOnlyEnum5Update GetConfigurationProductsUIReadOnlyEnum5 = "update"
	GetConfigurationProductsUIReadOnlyEnum5Create GetConfigurationProductsUIReadOnlyEnum5 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum5) ToPointer() *GetConfigurationProductsUIReadOnlyEnum5 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum5: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly5 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly5) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly5) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly5) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion5Type string

const (
	GetConfigurationProductsUIReadOnlyUnion5TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion5Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion5TypeGetConfigurationProductsUIReadOnly5     GetConfigurationProductsUIReadOnlyUnion5Type = "getConfigurationProducts_ui:read-only_5"
	GetConfigurationProductsUIReadOnlyUnion5TypeGetConfigurationProductsUIReadOnlyEnum5 GetConfigurationProductsUIReadOnlyUnion5Type = "getConfigurationProducts_ui:read-only_enum_5"
)

type GetConfigurationProductsUIReadOnlyUnion5 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly5     *GetConfigurationProductsUIReadOnly5     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum5 *GetConfigurationProductsUIReadOnlyEnum5 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion5Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion5Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion5 {
	typ := GetConfigurationProductsUIReadOnlyUnion5TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion5{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion5GetConfigurationProductsUIReadOnly5(getConfigurationProductsUIReadOnly5 GetConfigurationProductsUIReadOnly5) GetConfigurationProductsUIReadOnlyUnion5 {
	typ := GetConfigurationProductsUIReadOnlyUnion5TypeGetConfigurationProductsUIReadOnly5

	return GetConfigurationProductsUIReadOnlyUnion5{
		GetConfigurationProductsUIReadOnly5: &getConfigurationProductsUIReadOnly5,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion5GetConfigurationProductsUIReadOnlyEnum5(getConfigurationProductsUIReadOnlyEnum5 GetConfigurationProductsUIReadOnlyEnum5) GetConfigurationProductsUIReadOnlyUnion5 {
	typ := GetConfigurationProductsUIReadOnlyUnion5TypeGetConfigurationProductsUIReadOnlyEnum5

	return GetConfigurationProductsUIReadOnlyUnion5{
		GetConfigurationProductsUIReadOnlyEnum5: &getConfigurationProductsUIReadOnlyEnum5,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion5) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly5 GetConfigurationProductsUIReadOnly5 = GetConfigurationProductsUIReadOnly5{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly5 = &getConfigurationProductsUIReadOnly5
		u.Type = GetConfigurationProductsUIReadOnlyUnion5TypeGetConfigurationProductsUIReadOnly5
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion5TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum5 GetConfigurationProductsUIReadOnlyEnum5 = GetConfigurationProductsUIReadOnlyEnum5("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum5 = &getConfigurationProductsUIReadOnlyEnum5
		u.Type = GetConfigurationProductsUIReadOnlyUnion5TypeGetConfigurationProductsUIReadOnlyEnum5
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion5", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion5) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly5, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum5, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion5: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum5 string

const (
	GetConfigurationProductsUIHiddenEnum5Update GetConfigurationProductsUIHiddenEnum5 = "update"
	GetConfigurationProductsUIHiddenEnum5Create GetConfigurationProductsUIHiddenEnum5 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum5) ToPointer() *GetConfigurationProductsUIHiddenEnum5 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum5: %v", v)
	}
}

type GetConfigurationProductsUIHidden5 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden5) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden5) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden5) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion5Type string

const (
	GetConfigurationProductsUIHiddenUnion5TypeBoolean                               GetConfigurationProductsUIHiddenUnion5Type = "boolean"
	GetConfigurationProductsUIHiddenUnion5TypeGetConfigurationProductsUIHidden5     GetConfigurationProductsUIHiddenUnion5Type = "getConfigurationProducts_ui:hidden_5"
	GetConfigurationProductsUIHiddenUnion5TypeGetConfigurationProductsUIHiddenEnum5 GetConfigurationProductsUIHiddenUnion5Type = "getConfigurationProducts_ui:hidden_enum_5"
)

type GetConfigurationProductsUIHiddenUnion5 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden5     *GetConfigurationProductsUIHidden5     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum5 *GetConfigurationProductsUIHiddenEnum5 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion5Type
}

func CreateGetConfigurationProductsUIHiddenUnion5Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion5 {
	typ := GetConfigurationProductsUIHiddenUnion5TypeBoolean

	return GetConfigurationProductsUIHiddenUnion5{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion5GetConfigurationProductsUIHidden5(getConfigurationProductsUIHidden5 GetConfigurationProductsUIHidden5) GetConfigurationProductsUIHiddenUnion5 {
	typ := GetConfigurationProductsUIHiddenUnion5TypeGetConfigurationProductsUIHidden5

	return GetConfigurationProductsUIHiddenUnion5{
		GetConfigurationProductsUIHidden5: &getConfigurationProductsUIHidden5,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion5GetConfigurationProductsUIHiddenEnum5(getConfigurationProductsUIHiddenEnum5 GetConfigurationProductsUIHiddenEnum5) GetConfigurationProductsUIHiddenUnion5 {
	typ := GetConfigurationProductsUIHiddenUnion5TypeGetConfigurationProductsUIHiddenEnum5

	return GetConfigurationProductsUIHiddenUnion5{
		GetConfigurationProductsUIHiddenEnum5: &getConfigurationProductsUIHiddenEnum5,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion5) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden5 GetConfigurationProductsUIHidden5 = GetConfigurationProductsUIHidden5{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden5 = &getConfigurationProductsUIHidden5
		u.Type = GetConfigurationProductsUIHiddenUnion5TypeGetConfigurationProductsUIHidden5
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion5TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum5 GetConfigurationProductsUIHiddenEnum5 = GetConfigurationProductsUIHiddenEnum5("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum5 = &getConfigurationProductsUIHiddenEnum5
		u.Type = GetConfigurationProductsUIHiddenUnion5TypeGetConfigurationProductsUIHiddenEnum5
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion5", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion5) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden5, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum5, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion5: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum5 string

const (
	GetConfigurationProductsUIDisabledEnum5Update GetConfigurationProductsUIDisabledEnum5 = "update"
	GetConfigurationProductsUIDisabledEnum5Create GetConfigurationProductsUIDisabledEnum5 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum5) ToPointer() *GetConfigurationProductsUIDisabledEnum5 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum5: %v", v)
	}
}

type GetConfigurationProductsUIDisabled5 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled5) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled5) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled5) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion5Type string

const (
	GetConfigurationProductsUIDisabledUnion5TypeBoolean                                 GetConfigurationProductsUIDisabledUnion5Type = "boolean"
	GetConfigurationProductsUIDisabledUnion5TypeGetConfigurationProductsUIDisabled5     GetConfigurationProductsUIDisabledUnion5Type = "getConfigurationProducts_ui:disabled_5"
	GetConfigurationProductsUIDisabledUnion5TypeGetConfigurationProductsUIDisabledEnum5 GetConfigurationProductsUIDisabledUnion5Type = "getConfigurationProducts_ui:disabled_enum_5"
)

type GetConfigurationProductsUIDisabledUnion5 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled5     *GetConfigurationProductsUIDisabled5     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum5 *GetConfigurationProductsUIDisabledEnum5 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion5Type
}

func CreateGetConfigurationProductsUIDisabledUnion5Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion5 {
	typ := GetConfigurationProductsUIDisabledUnion5TypeBoolean

	return GetConfigurationProductsUIDisabledUnion5{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion5GetConfigurationProductsUIDisabled5(getConfigurationProductsUIDisabled5 GetConfigurationProductsUIDisabled5) GetConfigurationProductsUIDisabledUnion5 {
	typ := GetConfigurationProductsUIDisabledUnion5TypeGetConfigurationProductsUIDisabled5

	return GetConfigurationProductsUIDisabledUnion5{
		GetConfigurationProductsUIDisabled5: &getConfigurationProductsUIDisabled5,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion5GetConfigurationProductsUIDisabledEnum5(getConfigurationProductsUIDisabledEnum5 GetConfigurationProductsUIDisabledEnum5) GetConfigurationProductsUIDisabledUnion5 {
	typ := GetConfigurationProductsUIDisabledUnion5TypeGetConfigurationProductsUIDisabledEnum5

	return GetConfigurationProductsUIDisabledUnion5{
		GetConfigurationProductsUIDisabledEnum5: &getConfigurationProductsUIDisabledEnum5,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion5) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled5 GetConfigurationProductsUIDisabled5 = GetConfigurationProductsUIDisabled5{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled5 = &getConfigurationProductsUIDisabled5
		u.Type = GetConfigurationProductsUIDisabledUnion5TypeGetConfigurationProductsUIDisabled5
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion5TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum5 GetConfigurationProductsUIDisabledEnum5 = GetConfigurationProductsUIDisabledEnum5("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum5 = &getConfigurationProductsUIDisabledEnum5
		u.Type = GetConfigurationProductsUIDisabledUnion5TypeGetConfigurationProductsUIDisabledEnum5
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion5", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion5) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled5, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum5, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion5: all fields are null")
}

type GetConfigurationProductsUIDescription5 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription5) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription5) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription5) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion5Type string

const (
	GetConfigurationProductsUIDescriptionUnion5TypeStr                                    GetConfigurationProductsUIDescriptionUnion5Type = "str"
	GetConfigurationProductsUIDescriptionUnion5TypeGetConfigurationProductsUIDescription5 GetConfigurationProductsUIDescriptionUnion5Type = "getConfigurationProducts_ui:description_5"
)

type GetConfigurationProductsUIDescriptionUnion5 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription5 *GetConfigurationProductsUIDescription5 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion5Type
}

func CreateGetConfigurationProductsUIDescriptionUnion5Str(str string) GetConfigurationProductsUIDescriptionUnion5 {
	typ := GetConfigurationProductsUIDescriptionUnion5TypeStr

	return GetConfigurationProductsUIDescriptionUnion5{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion5GetConfigurationProductsUIDescription5(getConfigurationProductsUIDescription5 GetConfigurationProductsUIDescription5) GetConfigurationProductsUIDescriptionUnion5 {
	typ := GetConfigurationProductsUIDescriptionUnion5TypeGetConfigurationProductsUIDescription5

	return GetConfigurationProductsUIDescriptionUnion5{
		GetConfigurationProductsUIDescription5: &getConfigurationProductsUIDescription5,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion5) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription5 GetConfigurationProductsUIDescription5 = GetConfigurationProductsUIDescription5{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription5, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription5 = &getConfigurationProductsUIDescription5
		u.Type = GetConfigurationProductsUIDescriptionUnion5TypeGetConfigurationProductsUIDescription5
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion5TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion5", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion5) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription5 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription5, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion5: all fields are null")
}

type GetConfigurationProductsUIFormattedValue5 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue5) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue5) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue5) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesSelect struct {
	Type             GetConfigurationProductsTypeString2          `json:"type"`
	UIControl        GetConfigurationProductsUIControlSelect      `json:"ui:control"`
	UIOptions        []GetConfigurationProductsUIOption1          `json:"ui:options"`
	Description      *string                                      `json:"description,omitempty"`
	MinLength        *GetConfigurationProductsMinLength2          `json:"minLength,omitempty"`
	MaxLength        *GetConfigurationProductsMaxLength2          `json:"maxLength,omitempty"`
	Pattern          *GetConfigurationProductsPattern2            `json:"pattern,omitempty"`
	Default          *string                                      `json:"default,omitempty"`
	Enum             []string                                     `json:"enum,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion5    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion5      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion5    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion5 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue5   `json:"ui:formatted-value,omitempty"`
	UIPlaceholder    *string                                      `json:"ui:placeholder,omitempty"`
}

func (g GetConfigurationProductsPropertiesSelect) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesSelect) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control", "ui:options"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesSelect) GetType() GetConfigurationProductsTypeString2 {
	if o == nil {
		return GetConfigurationProductsTypeString2("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIControl() GetConfigurationProductsUIControlSelect {
	if o == nil {
		return GetConfigurationProductsUIControlSelect("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIOptions() []GetConfigurationProductsUIOption1 {
	if o == nil {
		return []GetConfigurationProductsUIOption1{}
	}
	return o.UIOptions
}

func (o *GetConfigurationProductsPropertiesSelect) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesSelect) GetMinLength() *GetConfigurationProductsMinLength2 {
	if o == nil {
		return nil
	}
	return o.MinLength
}

func (o *GetConfigurationProductsPropertiesSelect) GetMaxLength() *GetConfigurationProductsMaxLength2 {
	if o == nil {
		return nil
	}
	return o.MaxLength
}

func (o *GetConfigurationProductsPropertiesSelect) GetPattern() *GetConfigurationProductsPattern2 {
	if o == nil {
		return nil
	}
	return o.Pattern
}

func (o *GetConfigurationProductsPropertiesSelect) GetDefault() *string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsPropertiesSelect) GetEnum() []string {
	if o == nil {
		return nil
	}
	return o.Enum
}

func (o *GetConfigurationProductsPropertiesSelect) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion5 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIHidden() *GetConfigurationProductsUIHiddenUnion5 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion5 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion5 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue5 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *GetConfigurationProductsPropertiesSelect) GetUIPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.UIPlaceholder
}

type GetConfigurationProductsTypeArray1 string

const (
	GetConfigurationProductsTypeArray1Array GetConfigurationProductsTypeArray1 = "array"
)

func (e GetConfigurationProductsTypeArray1) ToPointer() *GetConfigurationProductsTypeArray1 {
	return &e
}
func (e *GetConfigurationProductsTypeArray1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "array":
		*e = GetConfigurationProductsTypeArray1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeArray1: %v", v)
	}
}

type GetConfigurationProductsUIControlSlider string

const (
	GetConfigurationProductsUIControlSliderSlider GetConfigurationProductsUIControlSlider = "slider"
)

func (e GetConfigurationProductsUIControlSlider) ToPointer() *GetConfigurationProductsUIControlSlider {
	return &e
}
func (e *GetConfigurationProductsUIControlSlider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "slider":
		*e = GetConfigurationProductsUIControlSlider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlSlider: %v", v)
	}
}

type GetConfigurationProductsTypeNumber2 string

const (
	GetConfigurationProductsTypeNumber2Number GetConfigurationProductsTypeNumber2 = "number"
)

func (e GetConfigurationProductsTypeNumber2) ToPointer() *GetConfigurationProductsTypeNumber2 {
	return &e
}
func (e *GetConfigurationProductsTypeNumber2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = GetConfigurationProductsTypeNumber2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeNumber2: %v", v)
	}
}

type GetConfigurationProductsItemsNumber struct {
	Type             GetConfigurationProductsTypeNumber2 `json:"type"`
	Description      *string                             `json:"description,omitempty"`
	Minimum          *float64                            `json:"minimum,omitempty"`
	ExclusiveMinimum *float64                            `json:"exclusiveMinimum,omitempty"`
	Maximum          *float64                            `json:"maximum,omitempty"`
	ExclusiveMaximum *float64                            `json:"exclusiveMaximum,omitempty"`
	Default          *float64                            `json:"default,omitempty"`
}

func (g GetConfigurationProductsItemsNumber) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsItemsNumber) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsItemsNumber) GetType() GetConfigurationProductsTypeNumber2 {
	if o == nil {
		return GetConfigurationProductsTypeNumber2("")
	}
	return o.Type
}

func (o *GetConfigurationProductsItemsNumber) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsItemsNumber) GetMinimum() *float64 {
	if o == nil {
		return nil
	}
	return o.Minimum
}

func (o *GetConfigurationProductsItemsNumber) GetExclusiveMinimum() *float64 {
	if o == nil {
		return nil
	}
	return o.ExclusiveMinimum
}

func (o *GetConfigurationProductsItemsNumber) GetMaximum() *float64 {
	if o == nil {
		return nil
	}
	return o.Maximum
}

func (o *GetConfigurationProductsItemsNumber) GetExclusiveMaximum() *float64 {
	if o == nil {
		return nil
	}
	return o.ExclusiveMaximum
}

func (o *GetConfigurationProductsItemsNumber) GetDefault() *float64 {
	if o == nil {
		return nil
	}
	return o.Default
}

type GetConfigurationProductsUIReadOnlyEnum4 string

const (
	GetConfigurationProductsUIReadOnlyEnum4Update GetConfigurationProductsUIReadOnlyEnum4 = "update"
	GetConfigurationProductsUIReadOnlyEnum4Create GetConfigurationProductsUIReadOnlyEnum4 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum4) ToPointer() *GetConfigurationProductsUIReadOnlyEnum4 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum4: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly4 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly4) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion4Type string

const (
	GetConfigurationProductsUIReadOnlyUnion4TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion4Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion4TypeGetConfigurationProductsUIReadOnly4     GetConfigurationProductsUIReadOnlyUnion4Type = "getConfigurationProducts_ui:read-only_4"
	GetConfigurationProductsUIReadOnlyUnion4TypeGetConfigurationProductsUIReadOnlyEnum4 GetConfigurationProductsUIReadOnlyUnion4Type = "getConfigurationProducts_ui:read-only_enum_4"
)

type GetConfigurationProductsUIReadOnlyUnion4 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly4     *GetConfigurationProductsUIReadOnly4     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum4 *GetConfigurationProductsUIReadOnlyEnum4 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion4Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion4Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion4 {
	typ := GetConfigurationProductsUIReadOnlyUnion4TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion4{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion4GetConfigurationProductsUIReadOnly4(getConfigurationProductsUIReadOnly4 GetConfigurationProductsUIReadOnly4) GetConfigurationProductsUIReadOnlyUnion4 {
	typ := GetConfigurationProductsUIReadOnlyUnion4TypeGetConfigurationProductsUIReadOnly4

	return GetConfigurationProductsUIReadOnlyUnion4{
		GetConfigurationProductsUIReadOnly4: &getConfigurationProductsUIReadOnly4,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion4GetConfigurationProductsUIReadOnlyEnum4(getConfigurationProductsUIReadOnlyEnum4 GetConfigurationProductsUIReadOnlyEnum4) GetConfigurationProductsUIReadOnlyUnion4 {
	typ := GetConfigurationProductsUIReadOnlyUnion4TypeGetConfigurationProductsUIReadOnlyEnum4

	return GetConfigurationProductsUIReadOnlyUnion4{
		GetConfigurationProductsUIReadOnlyEnum4: &getConfigurationProductsUIReadOnlyEnum4,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion4) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly4 GetConfigurationProductsUIReadOnly4 = GetConfigurationProductsUIReadOnly4{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly4 = &getConfigurationProductsUIReadOnly4
		u.Type = GetConfigurationProductsUIReadOnlyUnion4TypeGetConfigurationProductsUIReadOnly4
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion4TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum4 GetConfigurationProductsUIReadOnlyEnum4 = GetConfigurationProductsUIReadOnlyEnum4("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum4 = &getConfigurationProductsUIReadOnlyEnum4
		u.Type = GetConfigurationProductsUIReadOnlyUnion4TypeGetConfigurationProductsUIReadOnlyEnum4
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion4", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion4) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly4, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum4, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion4: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum4 string

const (
	GetConfigurationProductsUIHiddenEnum4Update GetConfigurationProductsUIHiddenEnum4 = "update"
	GetConfigurationProductsUIHiddenEnum4Create GetConfigurationProductsUIHiddenEnum4 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum4) ToPointer() *GetConfigurationProductsUIHiddenEnum4 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum4: %v", v)
	}
}

type GetConfigurationProductsUIHidden4 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden4) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion4Type string

const (
	GetConfigurationProductsUIHiddenUnion4TypeBoolean                               GetConfigurationProductsUIHiddenUnion4Type = "boolean"
	GetConfigurationProductsUIHiddenUnion4TypeGetConfigurationProductsUIHidden4     GetConfigurationProductsUIHiddenUnion4Type = "getConfigurationProducts_ui:hidden_4"
	GetConfigurationProductsUIHiddenUnion4TypeGetConfigurationProductsUIHiddenEnum4 GetConfigurationProductsUIHiddenUnion4Type = "getConfigurationProducts_ui:hidden_enum_4"
)

type GetConfigurationProductsUIHiddenUnion4 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden4     *GetConfigurationProductsUIHidden4     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum4 *GetConfigurationProductsUIHiddenEnum4 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion4Type
}

func CreateGetConfigurationProductsUIHiddenUnion4Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion4 {
	typ := GetConfigurationProductsUIHiddenUnion4TypeBoolean

	return GetConfigurationProductsUIHiddenUnion4{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion4GetConfigurationProductsUIHidden4(getConfigurationProductsUIHidden4 GetConfigurationProductsUIHidden4) GetConfigurationProductsUIHiddenUnion4 {
	typ := GetConfigurationProductsUIHiddenUnion4TypeGetConfigurationProductsUIHidden4

	return GetConfigurationProductsUIHiddenUnion4{
		GetConfigurationProductsUIHidden4: &getConfigurationProductsUIHidden4,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion4GetConfigurationProductsUIHiddenEnum4(getConfigurationProductsUIHiddenEnum4 GetConfigurationProductsUIHiddenEnum4) GetConfigurationProductsUIHiddenUnion4 {
	typ := GetConfigurationProductsUIHiddenUnion4TypeGetConfigurationProductsUIHiddenEnum4

	return GetConfigurationProductsUIHiddenUnion4{
		GetConfigurationProductsUIHiddenEnum4: &getConfigurationProductsUIHiddenEnum4,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion4) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden4 GetConfigurationProductsUIHidden4 = GetConfigurationProductsUIHidden4{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden4 = &getConfigurationProductsUIHidden4
		u.Type = GetConfigurationProductsUIHiddenUnion4TypeGetConfigurationProductsUIHidden4
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion4TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum4 GetConfigurationProductsUIHiddenEnum4 = GetConfigurationProductsUIHiddenEnum4("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum4 = &getConfigurationProductsUIHiddenEnum4
		u.Type = GetConfigurationProductsUIHiddenUnion4TypeGetConfigurationProductsUIHiddenEnum4
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion4", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion4) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden4, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum4, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion4: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum4 string

const (
	GetConfigurationProductsUIDisabledEnum4Update GetConfigurationProductsUIDisabledEnum4 = "update"
	GetConfigurationProductsUIDisabledEnum4Create GetConfigurationProductsUIDisabledEnum4 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum4) ToPointer() *GetConfigurationProductsUIDisabledEnum4 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum4: %v", v)
	}
}

type GetConfigurationProductsUIDisabled4 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled4) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion4Type string

const (
	GetConfigurationProductsUIDisabledUnion4TypeBoolean                                 GetConfigurationProductsUIDisabledUnion4Type = "boolean"
	GetConfigurationProductsUIDisabledUnion4TypeGetConfigurationProductsUIDisabled4     GetConfigurationProductsUIDisabledUnion4Type = "getConfigurationProducts_ui:disabled_4"
	GetConfigurationProductsUIDisabledUnion4TypeGetConfigurationProductsUIDisabledEnum4 GetConfigurationProductsUIDisabledUnion4Type = "getConfigurationProducts_ui:disabled_enum_4"
)

type GetConfigurationProductsUIDisabledUnion4 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled4     *GetConfigurationProductsUIDisabled4     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum4 *GetConfigurationProductsUIDisabledEnum4 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion4Type
}

func CreateGetConfigurationProductsUIDisabledUnion4Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion4 {
	typ := GetConfigurationProductsUIDisabledUnion4TypeBoolean

	return GetConfigurationProductsUIDisabledUnion4{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion4GetConfigurationProductsUIDisabled4(getConfigurationProductsUIDisabled4 GetConfigurationProductsUIDisabled4) GetConfigurationProductsUIDisabledUnion4 {
	typ := GetConfigurationProductsUIDisabledUnion4TypeGetConfigurationProductsUIDisabled4

	return GetConfigurationProductsUIDisabledUnion4{
		GetConfigurationProductsUIDisabled4: &getConfigurationProductsUIDisabled4,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion4GetConfigurationProductsUIDisabledEnum4(getConfigurationProductsUIDisabledEnum4 GetConfigurationProductsUIDisabledEnum4) GetConfigurationProductsUIDisabledUnion4 {
	typ := GetConfigurationProductsUIDisabledUnion4TypeGetConfigurationProductsUIDisabledEnum4

	return GetConfigurationProductsUIDisabledUnion4{
		GetConfigurationProductsUIDisabledEnum4: &getConfigurationProductsUIDisabledEnum4,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion4) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled4 GetConfigurationProductsUIDisabled4 = GetConfigurationProductsUIDisabled4{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled4 = &getConfigurationProductsUIDisabled4
		u.Type = GetConfigurationProductsUIDisabledUnion4TypeGetConfigurationProductsUIDisabled4
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion4TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum4 GetConfigurationProductsUIDisabledEnum4 = GetConfigurationProductsUIDisabledEnum4("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum4 = &getConfigurationProductsUIDisabledEnum4
		u.Type = GetConfigurationProductsUIDisabledUnion4TypeGetConfigurationProductsUIDisabledEnum4
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion4", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion4) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled4, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum4, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion4: all fields are null")
}

type GetConfigurationProductsUIDescription4 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription4) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion4Type string

const (
	GetConfigurationProductsUIDescriptionUnion4TypeStr                                    GetConfigurationProductsUIDescriptionUnion4Type = "str"
	GetConfigurationProductsUIDescriptionUnion4TypeGetConfigurationProductsUIDescription4 GetConfigurationProductsUIDescriptionUnion4Type = "getConfigurationProducts_ui:description_4"
)

type GetConfigurationProductsUIDescriptionUnion4 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription4 *GetConfigurationProductsUIDescription4 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion4Type
}

func CreateGetConfigurationProductsUIDescriptionUnion4Str(str string) GetConfigurationProductsUIDescriptionUnion4 {
	typ := GetConfigurationProductsUIDescriptionUnion4TypeStr

	return GetConfigurationProductsUIDescriptionUnion4{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion4GetConfigurationProductsUIDescription4(getConfigurationProductsUIDescription4 GetConfigurationProductsUIDescription4) GetConfigurationProductsUIDescriptionUnion4 {
	typ := GetConfigurationProductsUIDescriptionUnion4TypeGetConfigurationProductsUIDescription4

	return GetConfigurationProductsUIDescriptionUnion4{
		GetConfigurationProductsUIDescription4: &getConfigurationProductsUIDescription4,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion4) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription4 GetConfigurationProductsUIDescription4 = GetConfigurationProductsUIDescription4{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription4, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription4 = &getConfigurationProductsUIDescription4
		u.Type = GetConfigurationProductsUIDescriptionUnion4TypeGetConfigurationProductsUIDescription4
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion4TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion4", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion4) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription4 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription4, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion4: all fields are null")
}

type GetConfigurationProductsUIFormattedValue4 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue4) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue4) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue4) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesSlider struct {
	Type             GetConfigurationProductsTypeArray1           `json:"type"`
	UIControl        GetConfigurationProductsUIControlSlider      `json:"ui:control"`
	UISteps          []float64                                    `json:"ui:steps"`
	Items            GetConfigurationProductsItemsNumber          `json:"items"`
	Description      *string                                      `json:"description,omitempty"`
	MinItems         *float64                                     `json:"minItems,omitempty"`
	MaxItems         *float64                                     `json:"maxItems,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion4    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion4      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion4    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion4 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue4   `json:"ui:formatted-value,omitempty"`
	Default          []float64                                    `json:"default,omitempty"`
}

func (g GetConfigurationProductsPropertiesSlider) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesSlider) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control", "ui:steps", "items"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesSlider) GetType() GetConfigurationProductsTypeArray1 {
	if o == nil {
		return GetConfigurationProductsTypeArray1("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesSlider) GetUIControl() GetConfigurationProductsUIControlSlider {
	if o == nil {
		return GetConfigurationProductsUIControlSlider("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesSlider) GetUISteps() []float64 {
	if o == nil {
		return []float64{}
	}
	return o.UISteps
}

func (o *GetConfigurationProductsPropertiesSlider) GetItems() GetConfigurationProductsItemsNumber {
	if o == nil {
		return GetConfigurationProductsItemsNumber{}
	}
	return o.Items
}

func (o *GetConfigurationProductsPropertiesSlider) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesSlider) GetMinItems() *float64 {
	if o == nil {
		return nil
	}
	return o.MinItems
}

func (o *GetConfigurationProductsPropertiesSlider) GetMaxItems() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxItems
}

func (o *GetConfigurationProductsPropertiesSlider) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesSlider) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion4 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesSlider) GetUIHidden() *GetConfigurationProductsUIHiddenUnion4 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesSlider) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion4 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesSlider) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion4 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesSlider) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue4 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *GetConfigurationProductsPropertiesSlider) GetDefault() []float64 {
	if o == nil {
		return nil
	}
	return o.Default
}

type GetConfigurationProductsTypeBoolean string

const (
	GetConfigurationProductsTypeBooleanBoolean GetConfigurationProductsTypeBoolean = "boolean"
)

func (e GetConfigurationProductsTypeBoolean) ToPointer() *GetConfigurationProductsTypeBoolean {
	return &e
}
func (e *GetConfigurationProductsTypeBoolean) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "boolean":
		*e = GetConfigurationProductsTypeBoolean(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeBoolean: %v", v)
	}
}

type GetConfigurationProductsUIControlToggle string

const (
	GetConfigurationProductsUIControlToggleToggle GetConfigurationProductsUIControlToggle = "toggle"
)

func (e GetConfigurationProductsUIControlToggle) ToPointer() *GetConfigurationProductsUIControlToggle {
	return &e
}
func (e *GetConfigurationProductsUIControlToggle) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "toggle":
		*e = GetConfigurationProductsUIControlToggle(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlToggle: %v", v)
	}
}

type GetConfigurationProductsUIReadOnlyEnum3 string

const (
	GetConfigurationProductsUIReadOnlyEnum3Update GetConfigurationProductsUIReadOnlyEnum3 = "update"
	GetConfigurationProductsUIReadOnlyEnum3Create GetConfigurationProductsUIReadOnlyEnum3 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum3) ToPointer() *GetConfigurationProductsUIReadOnlyEnum3 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum3: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly3 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly3) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion3Type string

const (
	GetConfigurationProductsUIReadOnlyUnion3TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion3Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion3TypeGetConfigurationProductsUIReadOnly3     GetConfigurationProductsUIReadOnlyUnion3Type = "getConfigurationProducts_ui:read-only_3"
	GetConfigurationProductsUIReadOnlyUnion3TypeGetConfigurationProductsUIReadOnlyEnum3 GetConfigurationProductsUIReadOnlyUnion3Type = "getConfigurationProducts_ui:read-only_enum_3"
)

type GetConfigurationProductsUIReadOnlyUnion3 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly3     *GetConfigurationProductsUIReadOnly3     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum3 *GetConfigurationProductsUIReadOnlyEnum3 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion3Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion3Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion3 {
	typ := GetConfigurationProductsUIReadOnlyUnion3TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion3{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion3GetConfigurationProductsUIReadOnly3(getConfigurationProductsUIReadOnly3 GetConfigurationProductsUIReadOnly3) GetConfigurationProductsUIReadOnlyUnion3 {
	typ := GetConfigurationProductsUIReadOnlyUnion3TypeGetConfigurationProductsUIReadOnly3

	return GetConfigurationProductsUIReadOnlyUnion3{
		GetConfigurationProductsUIReadOnly3: &getConfigurationProductsUIReadOnly3,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion3GetConfigurationProductsUIReadOnlyEnum3(getConfigurationProductsUIReadOnlyEnum3 GetConfigurationProductsUIReadOnlyEnum3) GetConfigurationProductsUIReadOnlyUnion3 {
	typ := GetConfigurationProductsUIReadOnlyUnion3TypeGetConfigurationProductsUIReadOnlyEnum3

	return GetConfigurationProductsUIReadOnlyUnion3{
		GetConfigurationProductsUIReadOnlyEnum3: &getConfigurationProductsUIReadOnlyEnum3,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion3) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly3 GetConfigurationProductsUIReadOnly3 = GetConfigurationProductsUIReadOnly3{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly3 = &getConfigurationProductsUIReadOnly3
		u.Type = GetConfigurationProductsUIReadOnlyUnion3TypeGetConfigurationProductsUIReadOnly3
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion3TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum3 GetConfigurationProductsUIReadOnlyEnum3 = GetConfigurationProductsUIReadOnlyEnum3("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum3 = &getConfigurationProductsUIReadOnlyEnum3
		u.Type = GetConfigurationProductsUIReadOnlyUnion3TypeGetConfigurationProductsUIReadOnlyEnum3
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion3", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion3) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly3, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum3, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion3: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum3 string

const (
	GetConfigurationProductsUIHiddenEnum3Update GetConfigurationProductsUIHiddenEnum3 = "update"
	GetConfigurationProductsUIHiddenEnum3Create GetConfigurationProductsUIHiddenEnum3 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum3) ToPointer() *GetConfigurationProductsUIHiddenEnum3 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum3: %v", v)
	}
}

type GetConfigurationProductsUIHidden3 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden3) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion3Type string

const (
	GetConfigurationProductsUIHiddenUnion3TypeBoolean                               GetConfigurationProductsUIHiddenUnion3Type = "boolean"
	GetConfigurationProductsUIHiddenUnion3TypeGetConfigurationProductsUIHidden3     GetConfigurationProductsUIHiddenUnion3Type = "getConfigurationProducts_ui:hidden_3"
	GetConfigurationProductsUIHiddenUnion3TypeGetConfigurationProductsUIHiddenEnum3 GetConfigurationProductsUIHiddenUnion3Type = "getConfigurationProducts_ui:hidden_enum_3"
)

type GetConfigurationProductsUIHiddenUnion3 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden3     *GetConfigurationProductsUIHidden3     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum3 *GetConfigurationProductsUIHiddenEnum3 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion3Type
}

func CreateGetConfigurationProductsUIHiddenUnion3Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion3 {
	typ := GetConfigurationProductsUIHiddenUnion3TypeBoolean

	return GetConfigurationProductsUIHiddenUnion3{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion3GetConfigurationProductsUIHidden3(getConfigurationProductsUIHidden3 GetConfigurationProductsUIHidden3) GetConfigurationProductsUIHiddenUnion3 {
	typ := GetConfigurationProductsUIHiddenUnion3TypeGetConfigurationProductsUIHidden3

	return GetConfigurationProductsUIHiddenUnion3{
		GetConfigurationProductsUIHidden3: &getConfigurationProductsUIHidden3,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion3GetConfigurationProductsUIHiddenEnum3(getConfigurationProductsUIHiddenEnum3 GetConfigurationProductsUIHiddenEnum3) GetConfigurationProductsUIHiddenUnion3 {
	typ := GetConfigurationProductsUIHiddenUnion3TypeGetConfigurationProductsUIHiddenEnum3

	return GetConfigurationProductsUIHiddenUnion3{
		GetConfigurationProductsUIHiddenEnum3: &getConfigurationProductsUIHiddenEnum3,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion3) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden3 GetConfigurationProductsUIHidden3 = GetConfigurationProductsUIHidden3{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden3 = &getConfigurationProductsUIHidden3
		u.Type = GetConfigurationProductsUIHiddenUnion3TypeGetConfigurationProductsUIHidden3
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion3TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum3 GetConfigurationProductsUIHiddenEnum3 = GetConfigurationProductsUIHiddenEnum3("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum3 = &getConfigurationProductsUIHiddenEnum3
		u.Type = GetConfigurationProductsUIHiddenUnion3TypeGetConfigurationProductsUIHiddenEnum3
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion3", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion3) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden3, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum3, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion3: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum3 string

const (
	GetConfigurationProductsUIDisabledEnum3Update GetConfigurationProductsUIDisabledEnum3 = "update"
	GetConfigurationProductsUIDisabledEnum3Create GetConfigurationProductsUIDisabledEnum3 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum3) ToPointer() *GetConfigurationProductsUIDisabledEnum3 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum3: %v", v)
	}
}

type GetConfigurationProductsUIDisabled3 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled3) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion3Type string

const (
	GetConfigurationProductsUIDisabledUnion3TypeBoolean                                 GetConfigurationProductsUIDisabledUnion3Type = "boolean"
	GetConfigurationProductsUIDisabledUnion3TypeGetConfigurationProductsUIDisabled3     GetConfigurationProductsUIDisabledUnion3Type = "getConfigurationProducts_ui:disabled_3"
	GetConfigurationProductsUIDisabledUnion3TypeGetConfigurationProductsUIDisabledEnum3 GetConfigurationProductsUIDisabledUnion3Type = "getConfigurationProducts_ui:disabled_enum_3"
)

type GetConfigurationProductsUIDisabledUnion3 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled3     *GetConfigurationProductsUIDisabled3     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum3 *GetConfigurationProductsUIDisabledEnum3 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion3Type
}

func CreateGetConfigurationProductsUIDisabledUnion3Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion3 {
	typ := GetConfigurationProductsUIDisabledUnion3TypeBoolean

	return GetConfigurationProductsUIDisabledUnion3{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion3GetConfigurationProductsUIDisabled3(getConfigurationProductsUIDisabled3 GetConfigurationProductsUIDisabled3) GetConfigurationProductsUIDisabledUnion3 {
	typ := GetConfigurationProductsUIDisabledUnion3TypeGetConfigurationProductsUIDisabled3

	return GetConfigurationProductsUIDisabledUnion3{
		GetConfigurationProductsUIDisabled3: &getConfigurationProductsUIDisabled3,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion3GetConfigurationProductsUIDisabledEnum3(getConfigurationProductsUIDisabledEnum3 GetConfigurationProductsUIDisabledEnum3) GetConfigurationProductsUIDisabledUnion3 {
	typ := GetConfigurationProductsUIDisabledUnion3TypeGetConfigurationProductsUIDisabledEnum3

	return GetConfigurationProductsUIDisabledUnion3{
		GetConfigurationProductsUIDisabledEnum3: &getConfigurationProductsUIDisabledEnum3,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion3) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled3 GetConfigurationProductsUIDisabled3 = GetConfigurationProductsUIDisabled3{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled3 = &getConfigurationProductsUIDisabled3
		u.Type = GetConfigurationProductsUIDisabledUnion3TypeGetConfigurationProductsUIDisabled3
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion3TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum3 GetConfigurationProductsUIDisabledEnum3 = GetConfigurationProductsUIDisabledEnum3("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum3 = &getConfigurationProductsUIDisabledEnum3
		u.Type = GetConfigurationProductsUIDisabledUnion3TypeGetConfigurationProductsUIDisabledEnum3
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion3", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion3) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled3, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum3, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion3: all fields are null")
}

type GetConfigurationProductsUIDescription3 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription3) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion3Type string

const (
	GetConfigurationProductsUIDescriptionUnion3TypeStr                                    GetConfigurationProductsUIDescriptionUnion3Type = "str"
	GetConfigurationProductsUIDescriptionUnion3TypeGetConfigurationProductsUIDescription3 GetConfigurationProductsUIDescriptionUnion3Type = "getConfigurationProducts_ui:description_3"
)

type GetConfigurationProductsUIDescriptionUnion3 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription3 *GetConfigurationProductsUIDescription3 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion3Type
}

func CreateGetConfigurationProductsUIDescriptionUnion3Str(str string) GetConfigurationProductsUIDescriptionUnion3 {
	typ := GetConfigurationProductsUIDescriptionUnion3TypeStr

	return GetConfigurationProductsUIDescriptionUnion3{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion3GetConfigurationProductsUIDescription3(getConfigurationProductsUIDescription3 GetConfigurationProductsUIDescription3) GetConfigurationProductsUIDescriptionUnion3 {
	typ := GetConfigurationProductsUIDescriptionUnion3TypeGetConfigurationProductsUIDescription3

	return GetConfigurationProductsUIDescriptionUnion3{
		GetConfigurationProductsUIDescription3: &getConfigurationProductsUIDescription3,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion3) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription3 GetConfigurationProductsUIDescription3 = GetConfigurationProductsUIDescription3{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription3, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription3 = &getConfigurationProductsUIDescription3
		u.Type = GetConfigurationProductsUIDescriptionUnion3TypeGetConfigurationProductsUIDescription3
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion3TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion3", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion3) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription3 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription3, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion3: all fields are null")
}

type GetConfigurationProductsUIFormattedValue3 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue3) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesToggle struct {
	Type             GetConfigurationProductsTypeBoolean          `json:"type"`
	UIControl        GetConfigurationProductsUIControlToggle      `json:"ui:control"`
	Description      *string                                      `json:"description,omitempty"`
	Default          *bool                                        `json:"default,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion3    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion3      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion3    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion3 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue3   `json:"ui:formatted-value,omitempty"`
}

func (g GetConfigurationProductsPropertiesToggle) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesToggle) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesToggle) GetType() GetConfigurationProductsTypeBoolean {
	if o == nil {
		return GetConfigurationProductsTypeBoolean("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesToggle) GetUIControl() GetConfigurationProductsUIControlToggle {
	if o == nil {
		return GetConfigurationProductsUIControlToggle("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesToggle) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesToggle) GetDefault() *bool {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsPropertiesToggle) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesToggle) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion3 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesToggle) GetUIHidden() *GetConfigurationProductsUIHiddenUnion3 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesToggle) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion3 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesToggle) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion3 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesToggle) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue3 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

type GetConfigurationProductsTypeNumber1 string

const (
	GetConfigurationProductsTypeNumber1Number GetConfigurationProductsTypeNumber1 = "number"
)

func (e GetConfigurationProductsTypeNumber1) ToPointer() *GetConfigurationProductsTypeNumber1 {
	return &e
}
func (e *GetConfigurationProductsTypeNumber1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = GetConfigurationProductsTypeNumber1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeNumber1: %v", v)
	}
}

type GetConfigurationProductsUIControlInput2 string

const (
	GetConfigurationProductsUIControlInput2Input GetConfigurationProductsUIControlInput2 = "input"
)

func (e GetConfigurationProductsUIControlInput2) ToPointer() *GetConfigurationProductsUIControlInput2 {
	return &e
}
func (e *GetConfigurationProductsUIControlInput2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "input":
		*e = GetConfigurationProductsUIControlInput2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlInput2: %v", v)
	}
}

type GetConfigurationProductsUIReadOnlyEnum2 string

const (
	GetConfigurationProductsUIReadOnlyEnum2Update GetConfigurationProductsUIReadOnlyEnum2 = "update"
	GetConfigurationProductsUIReadOnlyEnum2Create GetConfigurationProductsUIReadOnlyEnum2 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum2) ToPointer() *GetConfigurationProductsUIReadOnlyEnum2 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum2: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion2Type string

const (
	GetConfigurationProductsUIReadOnlyUnion2TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion2Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion2TypeGetConfigurationProductsUIReadOnly2     GetConfigurationProductsUIReadOnlyUnion2Type = "getConfigurationProducts_ui:read-only_2"
	GetConfigurationProductsUIReadOnlyUnion2TypeGetConfigurationProductsUIReadOnlyEnum2 GetConfigurationProductsUIReadOnlyUnion2Type = "getConfigurationProducts_ui:read-only_enum_2"
)

type GetConfigurationProductsUIReadOnlyUnion2 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly2     *GetConfigurationProductsUIReadOnly2     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum2 *GetConfigurationProductsUIReadOnlyEnum2 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion2Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion2Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion2 {
	typ := GetConfigurationProductsUIReadOnlyUnion2TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion2{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion2GetConfigurationProductsUIReadOnly2(getConfigurationProductsUIReadOnly2 GetConfigurationProductsUIReadOnly2) GetConfigurationProductsUIReadOnlyUnion2 {
	typ := GetConfigurationProductsUIReadOnlyUnion2TypeGetConfigurationProductsUIReadOnly2

	return GetConfigurationProductsUIReadOnlyUnion2{
		GetConfigurationProductsUIReadOnly2: &getConfigurationProductsUIReadOnly2,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion2GetConfigurationProductsUIReadOnlyEnum2(getConfigurationProductsUIReadOnlyEnum2 GetConfigurationProductsUIReadOnlyEnum2) GetConfigurationProductsUIReadOnlyUnion2 {
	typ := GetConfigurationProductsUIReadOnlyUnion2TypeGetConfigurationProductsUIReadOnlyEnum2

	return GetConfigurationProductsUIReadOnlyUnion2{
		GetConfigurationProductsUIReadOnlyEnum2: &getConfigurationProductsUIReadOnlyEnum2,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion2) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly2 GetConfigurationProductsUIReadOnly2 = GetConfigurationProductsUIReadOnly2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly2 = &getConfigurationProductsUIReadOnly2
		u.Type = GetConfigurationProductsUIReadOnlyUnion2TypeGetConfigurationProductsUIReadOnly2
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion2TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum2 GetConfigurationProductsUIReadOnlyEnum2 = GetConfigurationProductsUIReadOnlyEnum2("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum2 = &getConfigurationProductsUIReadOnlyEnum2
		u.Type = GetConfigurationProductsUIReadOnlyUnion2TypeGetConfigurationProductsUIReadOnlyEnum2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion2", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion2) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly2, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion2: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum2 string

const (
	GetConfigurationProductsUIHiddenEnum2Update GetConfigurationProductsUIHiddenEnum2 = "update"
	GetConfigurationProductsUIHiddenEnum2Create GetConfigurationProductsUIHiddenEnum2 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum2) ToPointer() *GetConfigurationProductsUIHiddenEnum2 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum2: %v", v)
	}
}

type GetConfigurationProductsUIHidden2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion2Type string

const (
	GetConfigurationProductsUIHiddenUnion2TypeBoolean                               GetConfigurationProductsUIHiddenUnion2Type = "boolean"
	GetConfigurationProductsUIHiddenUnion2TypeGetConfigurationProductsUIHidden2     GetConfigurationProductsUIHiddenUnion2Type = "getConfigurationProducts_ui:hidden_2"
	GetConfigurationProductsUIHiddenUnion2TypeGetConfigurationProductsUIHiddenEnum2 GetConfigurationProductsUIHiddenUnion2Type = "getConfigurationProducts_ui:hidden_enum_2"
)

type GetConfigurationProductsUIHiddenUnion2 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden2     *GetConfigurationProductsUIHidden2     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum2 *GetConfigurationProductsUIHiddenEnum2 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion2Type
}

func CreateGetConfigurationProductsUIHiddenUnion2Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion2 {
	typ := GetConfigurationProductsUIHiddenUnion2TypeBoolean

	return GetConfigurationProductsUIHiddenUnion2{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion2GetConfigurationProductsUIHidden2(getConfigurationProductsUIHidden2 GetConfigurationProductsUIHidden2) GetConfigurationProductsUIHiddenUnion2 {
	typ := GetConfigurationProductsUIHiddenUnion2TypeGetConfigurationProductsUIHidden2

	return GetConfigurationProductsUIHiddenUnion2{
		GetConfigurationProductsUIHidden2: &getConfigurationProductsUIHidden2,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion2GetConfigurationProductsUIHiddenEnum2(getConfigurationProductsUIHiddenEnum2 GetConfigurationProductsUIHiddenEnum2) GetConfigurationProductsUIHiddenUnion2 {
	typ := GetConfigurationProductsUIHiddenUnion2TypeGetConfigurationProductsUIHiddenEnum2

	return GetConfigurationProductsUIHiddenUnion2{
		GetConfigurationProductsUIHiddenEnum2: &getConfigurationProductsUIHiddenEnum2,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion2) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden2 GetConfigurationProductsUIHidden2 = GetConfigurationProductsUIHidden2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden2 = &getConfigurationProductsUIHidden2
		u.Type = GetConfigurationProductsUIHiddenUnion2TypeGetConfigurationProductsUIHidden2
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion2TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum2 GetConfigurationProductsUIHiddenEnum2 = GetConfigurationProductsUIHiddenEnum2("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum2 = &getConfigurationProductsUIHiddenEnum2
		u.Type = GetConfigurationProductsUIHiddenUnion2TypeGetConfigurationProductsUIHiddenEnum2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion2", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion2) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden2, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion2: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum2 string

const (
	GetConfigurationProductsUIDisabledEnum2Update GetConfigurationProductsUIDisabledEnum2 = "update"
	GetConfigurationProductsUIDisabledEnum2Create GetConfigurationProductsUIDisabledEnum2 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum2) ToPointer() *GetConfigurationProductsUIDisabledEnum2 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum2: %v", v)
	}
}

type GetConfigurationProductsUIDisabled2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion2Type string

const (
	GetConfigurationProductsUIDisabledUnion2TypeBoolean                                 GetConfigurationProductsUIDisabledUnion2Type = "boolean"
	GetConfigurationProductsUIDisabledUnion2TypeGetConfigurationProductsUIDisabled2     GetConfigurationProductsUIDisabledUnion2Type = "getConfigurationProducts_ui:disabled_2"
	GetConfigurationProductsUIDisabledUnion2TypeGetConfigurationProductsUIDisabledEnum2 GetConfigurationProductsUIDisabledUnion2Type = "getConfigurationProducts_ui:disabled_enum_2"
)

type GetConfigurationProductsUIDisabledUnion2 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled2     *GetConfigurationProductsUIDisabled2     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum2 *GetConfigurationProductsUIDisabledEnum2 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion2Type
}

func CreateGetConfigurationProductsUIDisabledUnion2Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion2 {
	typ := GetConfigurationProductsUIDisabledUnion2TypeBoolean

	return GetConfigurationProductsUIDisabledUnion2{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion2GetConfigurationProductsUIDisabled2(getConfigurationProductsUIDisabled2 GetConfigurationProductsUIDisabled2) GetConfigurationProductsUIDisabledUnion2 {
	typ := GetConfigurationProductsUIDisabledUnion2TypeGetConfigurationProductsUIDisabled2

	return GetConfigurationProductsUIDisabledUnion2{
		GetConfigurationProductsUIDisabled2: &getConfigurationProductsUIDisabled2,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion2GetConfigurationProductsUIDisabledEnum2(getConfigurationProductsUIDisabledEnum2 GetConfigurationProductsUIDisabledEnum2) GetConfigurationProductsUIDisabledUnion2 {
	typ := GetConfigurationProductsUIDisabledUnion2TypeGetConfigurationProductsUIDisabledEnum2

	return GetConfigurationProductsUIDisabledUnion2{
		GetConfigurationProductsUIDisabledEnum2: &getConfigurationProductsUIDisabledEnum2,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion2) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled2 GetConfigurationProductsUIDisabled2 = GetConfigurationProductsUIDisabled2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled2 = &getConfigurationProductsUIDisabled2
		u.Type = GetConfigurationProductsUIDisabledUnion2TypeGetConfigurationProductsUIDisabled2
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion2TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum2 GetConfigurationProductsUIDisabledEnum2 = GetConfigurationProductsUIDisabledEnum2("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum2 = &getConfigurationProductsUIDisabledEnum2
		u.Type = GetConfigurationProductsUIDisabledUnion2TypeGetConfigurationProductsUIDisabledEnum2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion2", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion2) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled2, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion2: all fields are null")
}

type GetConfigurationProductsUIDescription2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion2Type string

const (
	GetConfigurationProductsUIDescriptionUnion2TypeStr                                    GetConfigurationProductsUIDescriptionUnion2Type = "str"
	GetConfigurationProductsUIDescriptionUnion2TypeGetConfigurationProductsUIDescription2 GetConfigurationProductsUIDescriptionUnion2Type = "getConfigurationProducts_ui:description_2"
)

type GetConfigurationProductsUIDescriptionUnion2 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription2 *GetConfigurationProductsUIDescription2 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion2Type
}

func CreateGetConfigurationProductsUIDescriptionUnion2Str(str string) GetConfigurationProductsUIDescriptionUnion2 {
	typ := GetConfigurationProductsUIDescriptionUnion2TypeStr

	return GetConfigurationProductsUIDescriptionUnion2{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion2GetConfigurationProductsUIDescription2(getConfigurationProductsUIDescription2 GetConfigurationProductsUIDescription2) GetConfigurationProductsUIDescriptionUnion2 {
	typ := GetConfigurationProductsUIDescriptionUnion2TypeGetConfigurationProductsUIDescription2

	return GetConfigurationProductsUIDescriptionUnion2{
		GetConfigurationProductsUIDescription2: &getConfigurationProductsUIDescription2,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion2) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription2 GetConfigurationProductsUIDescription2 = GetConfigurationProductsUIDescription2{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription2, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription2 = &getConfigurationProductsUIDescription2
		u.Type = GetConfigurationProductsUIDescriptionUnion2TypeGetConfigurationProductsUIDescription2
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion2TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion2", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion2) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription2 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription2, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion2: all fields are null")
}

type GetConfigurationProductsUIFormattedValue2 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue2) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesNumber struct {
	Type             GetConfigurationProductsTypeNumber1          `json:"type"`
	UIControl        GetConfigurationProductsUIControlInput2      `json:"ui:control"`
	Minimum          *float64                                     `json:"minimum,omitempty"`
	Maximum          *float64                                     `json:"maximum,omitempty"`
	Description      *string                                      `json:"description,omitempty"`
	Default          *float64                                     `json:"default,omitempty"`
	ExclusiveMinimum *float64                                     `json:"exclusiveMinimum,omitempty"`
	ExclusiveMaximum *float64                                     `json:"exclusiveMaximum,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion2    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion2      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion2    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion2 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue2   `json:"ui:formatted-value,omitempty"`
	UIPlaceholder    *string                                      `json:"ui:placeholder,omitempty"`
}

func (g GetConfigurationProductsPropertiesNumber) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesNumber) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesNumber) GetType() GetConfigurationProductsTypeNumber1 {
	if o == nil {
		return GetConfigurationProductsTypeNumber1("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesNumber) GetUIControl() GetConfigurationProductsUIControlInput2 {
	if o == nil {
		return GetConfigurationProductsUIControlInput2("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesNumber) GetMinimum() *float64 {
	if o == nil {
		return nil
	}
	return o.Minimum
}

func (o *GetConfigurationProductsPropertiesNumber) GetMaximum() *float64 {
	if o == nil {
		return nil
	}
	return o.Maximum
}

func (o *GetConfigurationProductsPropertiesNumber) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesNumber) GetDefault() *float64 {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsPropertiesNumber) GetExclusiveMinimum() *float64 {
	if o == nil {
		return nil
	}
	return o.ExclusiveMinimum
}

func (o *GetConfigurationProductsPropertiesNumber) GetExclusiveMaximum() *float64 {
	if o == nil {
		return nil
	}
	return o.ExclusiveMaximum
}

func (o *GetConfigurationProductsPropertiesNumber) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesNumber) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion2 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesNumber) GetUIHidden() *GetConfigurationProductsUIHiddenUnion2 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesNumber) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion2 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesNumber) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion2 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesNumber) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue2 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *GetConfigurationProductsPropertiesNumber) GetUIPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.UIPlaceholder
}

type GetConfigurationProductsTypeString1 string

const (
	GetConfigurationProductsTypeString1String GetConfigurationProductsTypeString1 = "string"
)

func (e GetConfigurationProductsTypeString1) ToPointer() *GetConfigurationProductsTypeString1 {
	return &e
}
func (e *GetConfigurationProductsTypeString1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		*e = GetConfigurationProductsTypeString1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsTypeString1: %v", v)
	}
}

type GetConfigurationProductsUIControlInput1 string

const (
	GetConfigurationProductsUIControlInput1Input GetConfigurationProductsUIControlInput1 = "input"
)

func (e GetConfigurationProductsUIControlInput1) ToPointer() *GetConfigurationProductsUIControlInput1 {
	return &e
}
func (e *GetConfigurationProductsUIControlInput1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "input":
		*e = GetConfigurationProductsUIControlInput1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIControlInput1: %v", v)
	}
}

type MinLengthAtBRANDAt6267541 struct {
}

func (m MinLengthAtBRANDAt6267541) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MinLengthAtBRANDAt6267541) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMinLength1 struct {
	AtBRANDAt626754 MinLengthAtBRANDAt6267541 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMinLength1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMinLength1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMinLength1) GetAtBRANDAt626754() MinLengthAtBRANDAt6267541 {
	if o == nil {
		return MinLengthAtBRANDAt6267541{}
	}
	return o.AtBRANDAt626754
}

type MaxLengthAtBRANDAt6267541 struct {
}

func (m MaxLengthAtBRANDAt6267541) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MaxLengthAtBRANDAt6267541) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsMaxLength1 struct {
	AtBRANDAt626754 MaxLengthAtBRANDAt6267541 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsMaxLength1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsMaxLength1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsMaxLength1) GetAtBRANDAt626754() MaxLengthAtBRANDAt6267541 {
	if o == nil {
		return MaxLengthAtBRANDAt6267541{}
	}
	return o.AtBRANDAt626754
}

type PatternAtBRANDAt6267541 struct {
}

func (p PatternAtBRANDAt6267541) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatternAtBRANDAt6267541) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

type GetConfigurationProductsPattern1 struct {
	AtBRANDAt626754 PatternAtBRANDAt6267541 `json:"__@BRAND@626754"`
}

func (g GetConfigurationProductsPattern1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPattern1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"__@BRAND@626754"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPattern1) GetAtBRANDAt626754() PatternAtBRANDAt6267541 {
	if o == nil {
		return PatternAtBRANDAt6267541{}
	}
	return o.AtBRANDAt626754
}

type GetConfigurationProductsUIReadOnlyEnum1 string

const (
	GetConfigurationProductsUIReadOnlyEnum1Update GetConfigurationProductsUIReadOnlyEnum1 = "update"
	GetConfigurationProductsUIReadOnlyEnum1Create GetConfigurationProductsUIReadOnlyEnum1 = "create"
)

func (e GetConfigurationProductsUIReadOnlyEnum1) ToPointer() *GetConfigurationProductsUIReadOnlyEnum1 {
	return &e
}
func (e *GetConfigurationProductsUIReadOnlyEnum1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIReadOnlyEnum1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIReadOnlyEnum1: %v", v)
	}
}

type GetConfigurationProductsUIReadOnly1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIReadOnly1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIReadOnly1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIReadOnly1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIReadOnlyUnion1Type string

const (
	GetConfigurationProductsUIReadOnlyUnion1TypeBoolean                                 GetConfigurationProductsUIReadOnlyUnion1Type = "boolean"
	GetConfigurationProductsUIReadOnlyUnion1TypeGetConfigurationProductsUIReadOnly1     GetConfigurationProductsUIReadOnlyUnion1Type = "getConfigurationProducts_ui:read-only_1"
	GetConfigurationProductsUIReadOnlyUnion1TypeGetConfigurationProductsUIReadOnlyEnum1 GetConfigurationProductsUIReadOnlyUnion1Type = "getConfigurationProducts_ui:read-only_enum_1"
)

type GetConfigurationProductsUIReadOnlyUnion1 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIReadOnly1     *GetConfigurationProductsUIReadOnly1     `queryParam:"inline"`
	GetConfigurationProductsUIReadOnlyEnum1 *GetConfigurationProductsUIReadOnlyEnum1 `queryParam:"inline"`

	Type GetConfigurationProductsUIReadOnlyUnion1Type
}

func CreateGetConfigurationProductsUIReadOnlyUnion1Boolean(boolean bool) GetConfigurationProductsUIReadOnlyUnion1 {
	typ := GetConfigurationProductsUIReadOnlyUnion1TypeBoolean

	return GetConfigurationProductsUIReadOnlyUnion1{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion1GetConfigurationProductsUIReadOnly1(getConfigurationProductsUIReadOnly1 GetConfigurationProductsUIReadOnly1) GetConfigurationProductsUIReadOnlyUnion1 {
	typ := GetConfigurationProductsUIReadOnlyUnion1TypeGetConfigurationProductsUIReadOnly1

	return GetConfigurationProductsUIReadOnlyUnion1{
		GetConfigurationProductsUIReadOnly1: &getConfigurationProductsUIReadOnly1,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIReadOnlyUnion1GetConfigurationProductsUIReadOnlyEnum1(getConfigurationProductsUIReadOnlyEnum1 GetConfigurationProductsUIReadOnlyEnum1) GetConfigurationProductsUIReadOnlyUnion1 {
	typ := GetConfigurationProductsUIReadOnlyUnion1TypeGetConfigurationProductsUIReadOnlyEnum1

	return GetConfigurationProductsUIReadOnlyUnion1{
		GetConfigurationProductsUIReadOnlyEnum1: &getConfigurationProductsUIReadOnlyEnum1,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIReadOnlyUnion1) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIReadOnly1 GetConfigurationProductsUIReadOnly1 = GetConfigurationProductsUIReadOnly1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnly1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnly1 = &getConfigurationProductsUIReadOnly1
		u.Type = GetConfigurationProductsUIReadOnlyUnion1TypeGetConfigurationProductsUIReadOnly1
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIReadOnlyUnion1TypeBoolean
		return nil
	}

	var getConfigurationProductsUIReadOnlyEnum1 GetConfigurationProductsUIReadOnlyEnum1 = GetConfigurationProductsUIReadOnlyEnum1("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIReadOnlyEnum1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIReadOnlyEnum1 = &getConfigurationProductsUIReadOnlyEnum1
		u.Type = GetConfigurationProductsUIReadOnlyUnion1TypeGetConfigurationProductsUIReadOnlyEnum1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIReadOnlyUnion1", string(data))
}

func (u GetConfigurationProductsUIReadOnlyUnion1) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIReadOnly1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnly1, "", true)
	}

	if u.GetConfigurationProductsUIReadOnlyEnum1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIReadOnlyEnum1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIReadOnlyUnion1: all fields are null")
}

type GetConfigurationProductsUIHiddenEnum1 string

const (
	GetConfigurationProductsUIHiddenEnum1Update GetConfigurationProductsUIHiddenEnum1 = "update"
	GetConfigurationProductsUIHiddenEnum1Create GetConfigurationProductsUIHiddenEnum1 = "create"
)

func (e GetConfigurationProductsUIHiddenEnum1) ToPointer() *GetConfigurationProductsUIHiddenEnum1 {
	return &e
}
func (e *GetConfigurationProductsUIHiddenEnum1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIHiddenEnum1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIHiddenEnum1: %v", v)
	}
}

type GetConfigurationProductsUIHidden1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIHidden1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIHidden1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIHidden1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIHiddenUnion1Type string

const (
	GetConfigurationProductsUIHiddenUnion1TypeBoolean                               GetConfigurationProductsUIHiddenUnion1Type = "boolean"
	GetConfigurationProductsUIHiddenUnion1TypeGetConfigurationProductsUIHidden1     GetConfigurationProductsUIHiddenUnion1Type = "getConfigurationProducts_ui:hidden_1"
	GetConfigurationProductsUIHiddenUnion1TypeGetConfigurationProductsUIHiddenEnum1 GetConfigurationProductsUIHiddenUnion1Type = "getConfigurationProducts_ui:hidden_enum_1"
)

type GetConfigurationProductsUIHiddenUnion1 struct {
	Boolean                               *bool                                  `queryParam:"inline"`
	GetConfigurationProductsUIHidden1     *GetConfigurationProductsUIHidden1     `queryParam:"inline"`
	GetConfigurationProductsUIHiddenEnum1 *GetConfigurationProductsUIHiddenEnum1 `queryParam:"inline"`

	Type GetConfigurationProductsUIHiddenUnion1Type
}

func CreateGetConfigurationProductsUIHiddenUnion1Boolean(boolean bool) GetConfigurationProductsUIHiddenUnion1 {
	typ := GetConfigurationProductsUIHiddenUnion1TypeBoolean

	return GetConfigurationProductsUIHiddenUnion1{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion1GetConfigurationProductsUIHidden1(getConfigurationProductsUIHidden1 GetConfigurationProductsUIHidden1) GetConfigurationProductsUIHiddenUnion1 {
	typ := GetConfigurationProductsUIHiddenUnion1TypeGetConfigurationProductsUIHidden1

	return GetConfigurationProductsUIHiddenUnion1{
		GetConfigurationProductsUIHidden1: &getConfigurationProductsUIHidden1,
		Type:                              typ,
	}
}

func CreateGetConfigurationProductsUIHiddenUnion1GetConfigurationProductsUIHiddenEnum1(getConfigurationProductsUIHiddenEnum1 GetConfigurationProductsUIHiddenEnum1) GetConfigurationProductsUIHiddenUnion1 {
	typ := GetConfigurationProductsUIHiddenUnion1TypeGetConfigurationProductsUIHiddenEnum1

	return GetConfigurationProductsUIHiddenUnion1{
		GetConfigurationProductsUIHiddenEnum1: &getConfigurationProductsUIHiddenEnum1,
		Type:                                  typ,
	}
}

func (u *GetConfigurationProductsUIHiddenUnion1) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIHidden1 GetConfigurationProductsUIHidden1 = GetConfigurationProductsUIHidden1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHidden1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHidden1 = &getConfigurationProductsUIHidden1
		u.Type = GetConfigurationProductsUIHiddenUnion1TypeGetConfigurationProductsUIHidden1
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIHiddenUnion1TypeBoolean
		return nil
	}

	var getConfigurationProductsUIHiddenEnum1 GetConfigurationProductsUIHiddenEnum1 = GetConfigurationProductsUIHiddenEnum1("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIHiddenEnum1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIHiddenEnum1 = &getConfigurationProductsUIHiddenEnum1
		u.Type = GetConfigurationProductsUIHiddenUnion1TypeGetConfigurationProductsUIHiddenEnum1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIHiddenUnion1", string(data))
}

func (u GetConfigurationProductsUIHiddenUnion1) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIHidden1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHidden1, "", true)
	}

	if u.GetConfigurationProductsUIHiddenEnum1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIHiddenEnum1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIHiddenUnion1: all fields are null")
}

type GetConfigurationProductsUIDisabledEnum1 string

const (
	GetConfigurationProductsUIDisabledEnum1Update GetConfigurationProductsUIDisabledEnum1 = "update"
	GetConfigurationProductsUIDisabledEnum1Create GetConfigurationProductsUIDisabledEnum1 = "create"
)

func (e GetConfigurationProductsUIDisabledEnum1) ToPointer() *GetConfigurationProductsUIDisabledEnum1 {
	return &e
}
func (e *GetConfigurationProductsUIDisabledEnum1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "update":
		fallthrough
	case "create":
		*e = GetConfigurationProductsUIDisabledEnum1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfigurationProductsUIDisabledEnum1: %v", v)
	}
}

type GetConfigurationProductsUIDisabled1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDisabled1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDisabled1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDisabled1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDisabledUnion1Type string

const (
	GetConfigurationProductsUIDisabledUnion1TypeBoolean                                 GetConfigurationProductsUIDisabledUnion1Type = "boolean"
	GetConfigurationProductsUIDisabledUnion1TypeGetConfigurationProductsUIDisabled1     GetConfigurationProductsUIDisabledUnion1Type = "getConfigurationProducts_ui:disabled_1"
	GetConfigurationProductsUIDisabledUnion1TypeGetConfigurationProductsUIDisabledEnum1 GetConfigurationProductsUIDisabledUnion1Type = "getConfigurationProducts_ui:disabled_enum_1"
)

type GetConfigurationProductsUIDisabledUnion1 struct {
	Boolean                                 *bool                                    `queryParam:"inline"`
	GetConfigurationProductsUIDisabled1     *GetConfigurationProductsUIDisabled1     `queryParam:"inline"`
	GetConfigurationProductsUIDisabledEnum1 *GetConfigurationProductsUIDisabledEnum1 `queryParam:"inline"`

	Type GetConfigurationProductsUIDisabledUnion1Type
}

func CreateGetConfigurationProductsUIDisabledUnion1Boolean(boolean bool) GetConfigurationProductsUIDisabledUnion1 {
	typ := GetConfigurationProductsUIDisabledUnion1TypeBoolean

	return GetConfigurationProductsUIDisabledUnion1{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion1GetConfigurationProductsUIDisabled1(getConfigurationProductsUIDisabled1 GetConfigurationProductsUIDisabled1) GetConfigurationProductsUIDisabledUnion1 {
	typ := GetConfigurationProductsUIDisabledUnion1TypeGetConfigurationProductsUIDisabled1

	return GetConfigurationProductsUIDisabledUnion1{
		GetConfigurationProductsUIDisabled1: &getConfigurationProductsUIDisabled1,
		Type:                                typ,
	}
}

func CreateGetConfigurationProductsUIDisabledUnion1GetConfigurationProductsUIDisabledEnum1(getConfigurationProductsUIDisabledEnum1 GetConfigurationProductsUIDisabledEnum1) GetConfigurationProductsUIDisabledUnion1 {
	typ := GetConfigurationProductsUIDisabledUnion1TypeGetConfigurationProductsUIDisabledEnum1

	return GetConfigurationProductsUIDisabledUnion1{
		GetConfigurationProductsUIDisabledEnum1: &getConfigurationProductsUIDisabledEnum1,
		Type:                                    typ,
	}
}

func (u *GetConfigurationProductsUIDisabledUnion1) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDisabled1 GetConfigurationProductsUIDisabled1 = GetConfigurationProductsUIDisabled1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabled1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabled1 = &getConfigurationProductsUIDisabled1
		u.Type = GetConfigurationProductsUIDisabledUnion1TypeGetConfigurationProductsUIDisabled1
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = GetConfigurationProductsUIDisabledUnion1TypeBoolean
		return nil
	}

	var getConfigurationProductsUIDisabledEnum1 GetConfigurationProductsUIDisabledEnum1 = GetConfigurationProductsUIDisabledEnum1("")
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDisabledEnum1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDisabledEnum1 = &getConfigurationProductsUIDisabledEnum1
		u.Type = GetConfigurationProductsUIDisabledUnion1TypeGetConfigurationProductsUIDisabledEnum1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDisabledUnion1", string(data))
}

func (u GetConfigurationProductsUIDisabledUnion1) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.GetConfigurationProductsUIDisabled1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabled1, "", true)
	}

	if u.GetConfigurationProductsUIDisabledEnum1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDisabledEnum1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDisabledUnion1: all fields are null")
}

type GetConfigurationProductsUIDescription1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIDescription1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIDescription1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIDescription1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsUIDescriptionUnion1Type string

const (
	GetConfigurationProductsUIDescriptionUnion1TypeStr                                    GetConfigurationProductsUIDescriptionUnion1Type = "str"
	GetConfigurationProductsUIDescriptionUnion1TypeGetConfigurationProductsUIDescription1 GetConfigurationProductsUIDescriptionUnion1Type = "getConfigurationProducts_ui:description_1"
)

type GetConfigurationProductsUIDescriptionUnion1 struct {
	Str                                    *string                                 `queryParam:"inline"`
	GetConfigurationProductsUIDescription1 *GetConfigurationProductsUIDescription1 `queryParam:"inline"`

	Type GetConfigurationProductsUIDescriptionUnion1Type
}

func CreateGetConfigurationProductsUIDescriptionUnion1Str(str string) GetConfigurationProductsUIDescriptionUnion1 {
	typ := GetConfigurationProductsUIDescriptionUnion1TypeStr

	return GetConfigurationProductsUIDescriptionUnion1{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetConfigurationProductsUIDescriptionUnion1GetConfigurationProductsUIDescription1(getConfigurationProductsUIDescription1 GetConfigurationProductsUIDescription1) GetConfigurationProductsUIDescriptionUnion1 {
	typ := GetConfigurationProductsUIDescriptionUnion1TypeGetConfigurationProductsUIDescription1

	return GetConfigurationProductsUIDescriptionUnion1{
		GetConfigurationProductsUIDescription1: &getConfigurationProductsUIDescription1,
		Type:                                   typ,
	}
}

func (u *GetConfigurationProductsUIDescriptionUnion1) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsUIDescription1 GetConfigurationProductsUIDescription1 = GetConfigurationProductsUIDescription1{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsUIDescription1, "", true, nil); err == nil {
		u.GetConfigurationProductsUIDescription1 = &getConfigurationProductsUIDescription1
		u.Type = GetConfigurationProductsUIDescriptionUnion1TypeGetConfigurationProductsUIDescription1
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = GetConfigurationProductsUIDescriptionUnion1TypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsUIDescriptionUnion1", string(data))
}

func (u GetConfigurationProductsUIDescriptionUnion1) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.GetConfigurationProductsUIDescription1 != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsUIDescription1, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsUIDescriptionUnion1: all fields are null")
}

type GetConfigurationProductsUIFormattedValue1 struct {
	Expr string `json:"expr"`
}

func (g GetConfigurationProductsUIFormattedValue1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsUIFormattedValue1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"expr"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsUIFormattedValue1) GetExpr() string {
	if o == nil {
		return ""
	}
	return o.Expr
}

type GetConfigurationProductsPropertiesStringInput struct {
	Type             GetConfigurationProductsTypeString1          `json:"type"`
	UIControl        GetConfigurationProductsUIControlInput1      `json:"ui:control"`
	Description      *string                                      `json:"description,omitempty"`
	MinLength        *GetConfigurationProductsMinLength1          `json:"minLength,omitempty"`
	MaxLength        *GetConfigurationProductsMaxLength1          `json:"maxLength,omitempty"`
	Pattern          *GetConfigurationProductsPattern1            `json:"pattern,omitempty"`
	Default          *string                                      `json:"default,omitempty"`
	Enum             []string                                     `json:"enum,omitempty"`
	UILabel          *string                                      `json:"ui:label,omitempty"`
	UIReadOnly       *GetConfigurationProductsUIReadOnlyUnion1    `json:"ui:read-only,omitempty"`
	UIHidden         *GetConfigurationProductsUIHiddenUnion1      `json:"ui:hidden,omitempty"`
	UIDisabled       *GetConfigurationProductsUIDisabledUnion1    `json:"ui:disabled,omitempty"`
	UIDescription    *GetConfigurationProductsUIDescriptionUnion1 `json:"ui:description,omitempty"`
	UIFormattedValue *GetConfigurationProductsUIFormattedValue1   `json:"ui:formatted-value,omitempty"`
	UIPlaceholder    *string                                      `json:"ui:placeholder,omitempty"`
}

func (g GetConfigurationProductsPropertiesStringInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetConfigurationProductsPropertiesStringInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"type", "ui:control"}); err != nil {
		return err
	}
	return nil
}

func (o *GetConfigurationProductsPropertiesStringInput) GetType() GetConfigurationProductsTypeString1 {
	if o == nil {
		return GetConfigurationProductsTypeString1("")
	}
	return o.Type
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUIControl() GetConfigurationProductsUIControlInput1 {
	if o == nil {
		return GetConfigurationProductsUIControlInput1("")
	}
	return o.UIControl
}

func (o *GetConfigurationProductsPropertiesStringInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetConfigurationProductsPropertiesStringInput) GetMinLength() *GetConfigurationProductsMinLength1 {
	if o == nil {
		return nil
	}
	return o.MinLength
}

func (o *GetConfigurationProductsPropertiesStringInput) GetMaxLength() *GetConfigurationProductsMaxLength1 {
	if o == nil {
		return nil
	}
	return o.MaxLength
}

func (o *GetConfigurationProductsPropertiesStringInput) GetPattern() *GetConfigurationProductsPattern1 {
	if o == nil {
		return nil
	}
	return o.Pattern
}

func (o *GetConfigurationProductsPropertiesStringInput) GetDefault() *string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetConfigurationProductsPropertiesStringInput) GetEnum() []string {
	if o == nil {
		return nil
	}
	return o.Enum
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUILabel() *string {
	if o == nil {
		return nil
	}
	return o.UILabel
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUIReadOnly() *GetConfigurationProductsUIReadOnlyUnion1 {
	if o == nil {
		return nil
	}
	return o.UIReadOnly
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUIHidden() *GetConfigurationProductsUIHiddenUnion1 {
	if o == nil {
		return nil
	}
	return o.UIHidden
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUIDisabled() *GetConfigurationProductsUIDisabledUnion1 {
	if o == nil {
		return nil
	}
	return o.UIDisabled
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUIDescription() *GetConfigurationProductsUIDescriptionUnion1 {
	if o == nil {
		return nil
	}
	return o.UIDescription
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUIFormattedValue() *GetConfigurationProductsUIFormattedValue1 {
	if o == nil {
		return nil
	}
	return o.UIFormattedValue
}

func (o *GetConfigurationProductsPropertiesStringInput) GetUIPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.UIPlaceholder
}

type GetConfigurationProductsPropertiesUnionType string

const (
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesStringInput  GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_String_Input"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesNumber       GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_Number"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesToggle       GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_Toggle"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesSlider       GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_Slider"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesSelect       GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_Select"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesMultiSelect  GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_MultiSelect"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesVercelRegion GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_VercelRegion"
	GetConfigurationProductsPropertiesUnionTypePropertiesMultiVercelRegion                    GetConfigurationProductsPropertiesUnionType = "properties_MultiVercelRegion"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesDomain       GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties_Domain"
	GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsProperties             GetConfigurationProductsPropertiesUnionType = "getConfigurationProducts_properties"
)

type GetConfigurationProductsPropertiesUnion struct {
	GetConfigurationProductsPropertiesStringInput  *GetConfigurationProductsPropertiesStringInput  `queryParam:"inline"`
	GetConfigurationProductsPropertiesNumber       *GetConfigurationProductsPropertiesNumber       `queryParam:"inline"`
	GetConfigurationProductsPropertiesToggle       *GetConfigurationProductsPropertiesToggle       `queryParam:"inline"`
	GetConfigurationProductsPropertiesSlider       *GetConfigurationProductsPropertiesSlider       `queryParam:"inline"`
	GetConfigurationProductsPropertiesSelect       *GetConfigurationProductsPropertiesSelect       `queryParam:"inline"`
	GetConfigurationProductsPropertiesMultiSelect  *GetConfigurationProductsPropertiesMultiSelect  `queryParam:"inline"`
	GetConfigurationProductsPropertiesVercelRegion *GetConfigurationProductsPropertiesVercelRegion `queryParam:"inline"`
	PropertiesMultiVercelRegion                    *PropertiesMultiVercelRegion                    `queryParam:"inline"`
	GetConfigurationProductsPropertiesDomain       *GetConfigurationProductsPropertiesDomain       `queryParam:"inline"`
	GetConfigurationProductsProperties             *GetConfigurationProductsProperties             `queryParam:"inline"`

	Type GetConfigurationProductsPropertiesUnionType
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesStringInput(getConfigurationProductsPropertiesStringInput GetConfigurationProductsPropertiesStringInput) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesStringInput

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesStringInput: &getConfigurationProductsPropertiesStringInput,
		Type: typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesNumber(getConfigurationProductsPropertiesNumber GetConfigurationProductsPropertiesNumber) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesNumber

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesNumber: &getConfigurationProductsPropertiesNumber,
		Type:                                     typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesToggle(getConfigurationProductsPropertiesToggle GetConfigurationProductsPropertiesToggle) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesToggle

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesToggle: &getConfigurationProductsPropertiesToggle,
		Type:                                     typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesSlider(getConfigurationProductsPropertiesSlider GetConfigurationProductsPropertiesSlider) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesSlider

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesSlider: &getConfigurationProductsPropertiesSlider,
		Type:                                     typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesSelect(getConfigurationProductsPropertiesSelect GetConfigurationProductsPropertiesSelect) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesSelect

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesSelect: &getConfigurationProductsPropertiesSelect,
		Type:                                     typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesMultiSelect(getConfigurationProductsPropertiesMultiSelect GetConfigurationProductsPropertiesMultiSelect) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesMultiSelect

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesMultiSelect: &getConfigurationProductsPropertiesMultiSelect,
		Type: typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesVercelRegion(getConfigurationProductsPropertiesVercelRegion GetConfigurationProductsPropertiesVercelRegion) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesVercelRegion

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesVercelRegion: &getConfigurationProductsPropertiesVercelRegion,
		Type: typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionPropertiesMultiVercelRegion(propertiesMultiVercelRegion PropertiesMultiVercelRegion) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypePropertiesMultiVercelRegion

	return GetConfigurationProductsPropertiesUnion{
		PropertiesMultiVercelRegion: &propertiesMultiVercelRegion,
		Type:                        typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsPropertiesDomain(getConfigurationProductsPropertiesDomain GetConfigurationProductsPropertiesDomain) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesDomain

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsPropertiesDomain: &getConfigurationProductsPropertiesDomain,
		Type:                                     typ,
	}
}

func CreateGetConfigurationProductsPropertiesUnionGetConfigurationProductsProperties(getConfigurationProductsProperties GetConfigurationProductsProperties) GetConfigurationProductsPropertiesUnion {
	typ := GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsProperties

	return GetConfigurationProductsPropertiesUnion{
		GetConfigurationProductsProperties: &getConfigurationProductsProperties,
		Type:                               typ,
	}
}

func (u *GetConfigurationProductsPropertiesUnion) UnmarshalJSON(data []byte) error {

	var getConfigurationProductsPropertiesSlider GetConfigurationProductsPropertiesSlider = GetConfigurationProductsPropertiesSlider{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesSlider, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesSlider = &getConfigurationProductsPropertiesSlider
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesSlider
		return nil
	}

	var getConfigurationProductsPropertiesMultiSelect GetConfigurationProductsPropertiesMultiSelect = GetConfigurationProductsPropertiesMultiSelect{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesMultiSelect, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesMultiSelect = &getConfigurationProductsPropertiesMultiSelect
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesMultiSelect
		return nil
	}

	var propertiesMultiVercelRegion PropertiesMultiVercelRegion = PropertiesMultiVercelRegion{}
	if err := utils.UnmarshalJSON(data, &propertiesMultiVercelRegion, "", true, nil); err == nil {
		u.PropertiesMultiVercelRegion = &propertiesMultiVercelRegion
		u.Type = GetConfigurationProductsPropertiesUnionTypePropertiesMultiVercelRegion
		return nil
	}

	var getConfigurationProductsPropertiesSelect GetConfigurationProductsPropertiesSelect = GetConfigurationProductsPropertiesSelect{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesSelect, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesSelect = &getConfigurationProductsPropertiesSelect
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesSelect
		return nil
	}

	var getConfigurationProductsPropertiesVercelRegion GetConfigurationProductsPropertiesVercelRegion = GetConfigurationProductsPropertiesVercelRegion{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesVercelRegion, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesVercelRegion = &getConfigurationProductsPropertiesVercelRegion
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesVercelRegion
		return nil
	}

	var getConfigurationProductsPropertiesStringInput GetConfigurationProductsPropertiesStringInput = GetConfigurationProductsPropertiesStringInput{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesStringInput, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesStringInput = &getConfigurationProductsPropertiesStringInput
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesStringInput
		return nil
	}

	var getConfigurationProductsPropertiesNumber GetConfigurationProductsPropertiesNumber = GetConfigurationProductsPropertiesNumber{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesNumber, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesNumber = &getConfigurationProductsPropertiesNumber
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesNumber
		return nil
	}

	var getConfigurationProductsPropertiesToggle GetConfigurationProductsPropertiesToggle = GetConfigurationProductsPropertiesToggle{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesToggle, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesToggle = &getConfigurationProductsPropertiesToggle
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesToggle
		return nil
	}

	var getConfigurationProductsPropertiesDomain GetConfigurationProductsPropertiesDomain = GetConfigurationProductsPropertiesDomain{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsPropertiesDomain, "", true, nil); err == nil {
		u.GetConfigurationProductsPropertiesDomain = &getConfigurationProductsPropertiesDomain
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsPropertiesDomain
		return nil
	}

	var getConfigurationProductsProperties GetConfigurationProductsProperties = GetConfigurationProductsProperties{}
	if err := utils.UnmarshalJSON(data, &getConfigurationProductsProperties, "", true, nil); err == nil {
		u.GetConfigurationProductsProperties = &getConfigurationProductsProperties
		u.Type = GetConfigurationProductsPropertiesUnionTypeGetConfigurationProductsProperties
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetConfigurationProductsPropertiesUnion", string(data))
}

func (u GetConfigurationProductsPropertiesUnion) MarshalJSON() ([]byte, error) {
	if u.GetConfigurationProductsPropertiesStringInput != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesStringInput, "", true)
	}

	if u.GetConfigurationProductsPropertiesNumber != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesNumber, "", true)
	}

	if u.GetConfigurationProductsPropertiesToggle != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesToggle, "", true)
	}

	if u.GetConfigurationProductsPropertiesSlider != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesSlider, "", true)
	}

	if u.GetConfigurationProductsPropertiesSelect != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesSelect, "", true)
	}

	if u.GetConfigurationProductsPropertiesMultiSelect != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesMultiSelect, "", true)
	}

	if u.GetConfigurationProductsPropertiesVercelRegion != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesVercelRegion, "", true)
	}

	if u.PropertiesMultiVercelRegion != nil {
		return utils.MarshalJSON(u.PropertiesMultiVercelRegion, "", true)
	}

	if u.GetConfigurationProductsPropertiesDomain != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsPropertiesDomain, "", true)
	}

	if u.GetConfigurationProductsProperties != nil {
		return utils.MarshalJSON(u.GetConfigurationProductsProperties, "", true)
	}

	return nil, errors.New("could not marshal union type GetConfigurationProductsPropertiesUnion: all fields are null")
}

type GetConfigurationProductsMetadataSchema struct {
	Type       GetConfigurationProductsType                       `json:"type"`
	Properties map[string]GetConfigurationProductsPropertiesUnion `json:"properties"`
	Required   []string                                           `json:"required,omitempty"`
}

func (o *GetConfigurationProductsMetadataSchema) GetType() GetConfigurationProductsType {
	if o == nil {
		return GetConfigurationProductsType("")
	}
	return o.Type
}

func (o *GetConfigurationProductsMetadataSchema) GetProperties() map[string]GetConfigurationProductsPropertiesUnion {
	if o == nil {
		return map[string]GetConfigurationProductsPropertiesUnion{}
	}
	return o.Properties
}

func (o *GetConfigurationProductsMetadataSchema) GetRequired() []string {
	if o == nil {
		return nil
	}
	return o.Required
}

type GetConfigurationProductsProduct struct {
	ID              string                                 `json:"id"`
	Slug            string                                 `json:"slug"`
	Name            string                                 `json:"name"`
	Protocols       Protocols                              `json:"protocols"`
	PrimaryProtocol *PrimaryProtocol                       `json:"primaryProtocol,omitempty"`
	MetadataSchema  GetConfigurationProductsMetadataSchema `json:"metadataSchema"`
}

func (o *GetConfigurationProductsProduct) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetConfigurationProductsProduct) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *GetConfigurationProductsProduct) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetConfigurationProductsProduct) GetProtocols() Protocols {
	if o == nil {
		return Protocols{}
	}
	return o.Protocols
}

func (o *GetConfigurationProductsProduct) GetPrimaryProtocol() *PrimaryProtocol {
	if o == nil {
		return nil
	}
	return o.PrimaryProtocol
}

func (o *GetConfigurationProductsProduct) GetMetadataSchema() GetConfigurationProductsMetadataSchema {
	if o == nil {
		return GetConfigurationProductsMetadataSchema{}
	}
	return o.MetadataSchema
}

type GetConfigurationProductsIntegration struct {
	ID   string `json:"id"`
	Slug string `json:"slug"`
	Name string `json:"name"`
}

func (o *GetConfigurationProductsIntegration) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetConfigurationProductsIntegration) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *GetConfigurationProductsIntegration) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type Configuration struct {
	ID string `json:"id"`
}

func (o *Configuration) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetConfigurationProductsResponseBody - List of products available for this integration configuration
type GetConfigurationProductsResponseBody struct {
	Products      []GetConfigurationProductsProduct   `json:"products"`
	Integration   GetConfigurationProductsIntegration `json:"integration"`
	Configuration Configuration                       `json:"configuration"`
}

func (o *GetConfigurationProductsResponseBody) GetProducts() []GetConfigurationProductsProduct {
	if o == nil {
		return []GetConfigurationProductsProduct{}
	}
	return o.Products
}

func (o *GetConfigurationProductsResponseBody) GetIntegration() GetConfigurationProductsIntegration {
	if o == nil {
		return GetConfigurationProductsIntegration{}
	}
	return o.Integration
}

func (o *GetConfigurationProductsResponseBody) GetConfiguration() Configuration {
	if o == nil {
		return Configuration{}
	}
	return o.Configuration
}

type GetConfigurationProductsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List of products available for this integration configuration
	Object *GetConfigurationProductsResponseBody
}

func (o *GetConfigurationProductsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetConfigurationProductsResponse) GetObject() *GetConfigurationProductsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
