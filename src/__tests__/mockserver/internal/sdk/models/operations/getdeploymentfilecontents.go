// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetDeploymentFileContentsRequest struct {
	// The unique deployment identifier
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The unique file identifier
	FileID string `pathParam:"style=simple,explode=false,name=fileId"`
	// Path to the file to fetch (only for Git deployments)
	Path *string `queryParam:"style=form,explode=true,name=path"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetDeploymentFileContentsRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentFileContentsRequest) GetFileID() string {
	if o == nil {
		return ""
	}
	return o.FileID
}

func (o *GetDeploymentFileContentsRequest) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentFileContentsRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetDeploymentFileContentsRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

// GetDeploymentFileContentsResponseBody - File content as base64 encoded string
type GetDeploymentFileContentsResponseBody struct {
	// Base64 encoded file buffer
	Data string `json:"data"`
}

func (o *GetDeploymentFileContentsResponseBody) GetData() string {
	if o == nil {
		return ""
	}
	return o.Data
}

type GetDeploymentFileContentsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// File content as base64 encoded string
	Object *GetDeploymentFileContentsResponseBody
}

func (o *GetDeploymentFileContentsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDeploymentFileContentsResponse) GetObject() *GetDeploymentFileContentsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
