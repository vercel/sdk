// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type GetDomainTransferInRequest struct {
	Domain string  `pathParam:"style=simple,explode=false,name=domain"`
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

func (o *GetDomainTransferInRequest) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *GetDomainTransferInRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

type GetDomainTransferInStatus string

const (
	GetDomainTransferInStatusCanceled              GetDomainTransferInStatus = "canceled"
	GetDomainTransferInStatusCanceledPendingRefund GetDomainTransferInStatus = "canceled_pending_refund"
	GetDomainTransferInStatusCompleted             GetDomainTransferInStatus = "completed"
	GetDomainTransferInStatusCreated               GetDomainTransferInStatus = "created"
	GetDomainTransferInStatusFailed                GetDomainTransferInStatus = "failed"
	GetDomainTransferInStatusPending               GetDomainTransferInStatus = "pending"
	GetDomainTransferInStatusPendingInsert         GetDomainTransferInStatus = "pending_insert"
	GetDomainTransferInStatusPendingNewAuthCode    GetDomainTransferInStatus = "pending_new_auth_code"
	GetDomainTransferInStatusPendingTransfer       GetDomainTransferInStatus = "pending_transfer"
	GetDomainTransferInStatusPendingUnlock         GetDomainTransferInStatus = "pending_unlock"
	GetDomainTransferInStatusRejected              GetDomainTransferInStatus = "rejected"
	GetDomainTransferInStatusSubmittingTransfer    GetDomainTransferInStatus = "submitting_transfer"
)

func (e GetDomainTransferInStatus) ToPointer() *GetDomainTransferInStatus {
	return &e
}
func (e *GetDomainTransferInStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "canceled":
		fallthrough
	case "canceled_pending_refund":
		fallthrough
	case "completed":
		fallthrough
	case "created":
		fallthrough
	case "failed":
		fallthrough
	case "pending":
		fallthrough
	case "pending_insert":
		fallthrough
	case "pending_new_auth_code":
		fallthrough
	case "pending_transfer":
		fallthrough
	case "pending_unlock":
		fallthrough
	case "rejected":
		fallthrough
	case "submitting_transfer":
		*e = GetDomainTransferInStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDomainTransferInStatus: %v", v)
	}
}

// GetDomainTransferInResponseBody - Success
type GetDomainTransferInResponseBody struct {
	Status GetDomainTransferInStatus `json:"status"`
}

func (o *GetDomainTransferInResponseBody) GetStatus() GetDomainTransferInStatus {
	if o == nil {
		return GetDomainTransferInStatus("")
	}
	return o.Status
}

type GetDomainTransferInResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *GetDomainTransferInResponseBody
}

func (o *GetDomainTransferInResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDomainTransferInResponse) GetObject() *GetDomainTransferInResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
