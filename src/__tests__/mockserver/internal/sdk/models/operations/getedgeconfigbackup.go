// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type GetEdgeConfigBackupRequest struct {
	EdgeConfigID              string `pathParam:"style=simple,explode=false,name=edgeConfigId"`
	EdgeConfigBackupVersionID string `pathParam:"style=simple,explode=false,name=edgeConfigBackupVersionId"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetEdgeConfigBackupRequest) GetEdgeConfigID() string {
	if o == nil {
		return ""
	}
	return o.EdgeConfigID
}

func (o *GetEdgeConfigBackupRequest) GetEdgeConfigBackupVersionID() string {
	if o == nil {
		return ""
	}
	return o.EdgeConfigBackupVersionID
}

func (o *GetEdgeConfigBackupRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetEdgeConfigBackupRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type GetEdgeConfigBackupUser2 struct {
	ID       string  `json:"id"`
	Username string  `json:"username"`
	Email    string  `json:"email"`
	Name     *string `json:"name,omitempty"`
	Avatar   *string `json:"avatar,omitempty"`
}

func (o *GetEdgeConfigBackupUser2) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetEdgeConfigBackupUser2) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

func (o *GetEdgeConfigBackupUser2) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *GetEdgeConfigBackupUser2) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetEdgeConfigBackupUser2) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

type Items2 struct {
	UpdatedAt   float64                         `json:"updatedAt"`
	Value       *components.EdgeConfigItemValue `json:"value"`
	Description *string                         `json:"description,omitempty"`
	CreatedAt   float64                         `json:"createdAt"`
}

func (o *Items2) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *Items2) GetValue() *components.EdgeConfigItemValue {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *Items2) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Items2) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

type GetEdgeConfigBackupBackup2 struct {
	Digest string            `json:"digest"`
	Items  map[string]Items2 `json:"items"`
	// Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
	Slug      string  `json:"slug"`
	UpdatedAt float64 `json:"updatedAt"`
}

func (o *GetEdgeConfigBackupBackup2) GetDigest() string {
	if o == nil {
		return ""
	}
	return o.Digest
}

func (o *GetEdgeConfigBackupBackup2) GetItems() map[string]Items2 {
	if o == nil {
		return map[string]Items2{}
	}
	return o.Items
}

func (o *GetEdgeConfigBackupBackup2) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *GetEdgeConfigBackupBackup2) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

type GetEdgeConfigBackupMetadata2 struct {
	UpdatedAt  *string  `json:"updatedAt,omitempty"`
	UpdatedBy  *string  `json:"updatedBy,omitempty"`
	ItemsCount *float64 `json:"itemsCount,omitempty"`
	ItemsBytes *float64 `json:"itemsBytes,omitempty"`
}

func (o *GetEdgeConfigBackupMetadata2) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetEdgeConfigBackupMetadata2) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *GetEdgeConfigBackupMetadata2) GetItemsCount() *float64 {
	if o == nil {
		return nil
	}
	return o.ItemsCount
}

func (o *GetEdgeConfigBackupMetadata2) GetItemsBytes() *float64 {
	if o == nil {
		return nil
	}
	return o.ItemsBytes
}

type GetEdgeConfigBackupResponseBody2 struct {
	User         GetEdgeConfigBackupUser2     `json:"user"`
	ID           string                       `json:"id"`
	LastModified float64                      `json:"lastModified"`
	Backup       GetEdgeConfigBackupBackup2   `json:"backup"`
	Metadata     GetEdgeConfigBackupMetadata2 `json:"metadata"`
}

func (o *GetEdgeConfigBackupResponseBody2) GetUser() GetEdgeConfigBackupUser2 {
	if o == nil {
		return GetEdgeConfigBackupUser2{}
	}
	return o.User
}

func (o *GetEdgeConfigBackupResponseBody2) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetEdgeConfigBackupResponseBody2) GetLastModified() float64 {
	if o == nil {
		return 0.0
	}
	return o.LastModified
}

func (o *GetEdgeConfigBackupResponseBody2) GetBackup() GetEdgeConfigBackupBackup2 {
	if o == nil {
		return GetEdgeConfigBackupBackup2{}
	}
	return o.Backup
}

func (o *GetEdgeConfigBackupResponseBody2) GetMetadata() GetEdgeConfigBackupMetadata2 {
	if o == nil {
		return GetEdgeConfigBackupMetadata2{}
	}
	return o.Metadata
}

type Items1 struct {
	UpdatedAt   float64                         `json:"updatedAt"`
	Value       *components.EdgeConfigItemValue `json:"value"`
	Description *string                         `json:"description,omitempty"`
	CreatedAt   float64                         `json:"createdAt"`
}

func (o *Items1) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *Items1) GetValue() *components.EdgeConfigItemValue {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *Items1) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Items1) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

type GetEdgeConfigBackupBackup1 struct {
	Digest string            `json:"digest"`
	Items  map[string]Items1 `json:"items"`
	// Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
	Slug      string  `json:"slug"`
	UpdatedAt float64 `json:"updatedAt"`
}

func (o *GetEdgeConfigBackupBackup1) GetDigest() string {
	if o == nil {
		return ""
	}
	return o.Digest
}

func (o *GetEdgeConfigBackupBackup1) GetItems() map[string]Items1 {
	if o == nil {
		return map[string]Items1{}
	}
	return o.Items
}

func (o *GetEdgeConfigBackupBackup1) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *GetEdgeConfigBackupBackup1) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

type GetEdgeConfigBackupMetadata1 struct {
	UpdatedAt  *string  `json:"updatedAt,omitempty"`
	UpdatedBy  *string  `json:"updatedBy,omitempty"`
	ItemsCount *float64 `json:"itemsCount,omitempty"`
	ItemsBytes *float64 `json:"itemsBytes,omitempty"`
}

func (o *GetEdgeConfigBackupMetadata1) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetEdgeConfigBackupMetadata1) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *GetEdgeConfigBackupMetadata1) GetItemsCount() *float64 {
	if o == nil {
		return nil
	}
	return o.ItemsCount
}

func (o *GetEdgeConfigBackupMetadata1) GetItemsBytes() *float64 {
	if o == nil {
		return nil
	}
	return o.ItemsBytes
}

type GetEdgeConfigBackupUser1 struct {
	ID       string  `json:"id"`
	Username string  `json:"username"`
	Email    string  `json:"email"`
	Name     *string `json:"name,omitempty"`
	Avatar   *string `json:"avatar,omitempty"`
}

func (o *GetEdgeConfigBackupUser1) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetEdgeConfigBackupUser1) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

func (o *GetEdgeConfigBackupUser1) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *GetEdgeConfigBackupUser1) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetEdgeConfigBackupUser1) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

// GetEdgeConfigBackupResponseBody1 - The object the API responds with when requesting an Edge Config backup
type GetEdgeConfigBackupResponseBody1 struct {
	ID           string                       `json:"id"`
	LastModified float64                      `json:"lastModified"`
	Backup       GetEdgeConfigBackupBackup1   `json:"backup"`
	Metadata     GetEdgeConfigBackupMetadata1 `json:"metadata"`
	User         *GetEdgeConfigBackupUser1    `json:"user,omitempty"`
}

func (o *GetEdgeConfigBackupResponseBody1) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetEdgeConfigBackupResponseBody1) GetLastModified() float64 {
	if o == nil {
		return 0.0
	}
	return o.LastModified
}

func (o *GetEdgeConfigBackupResponseBody1) GetBackup() GetEdgeConfigBackupBackup1 {
	if o == nil {
		return GetEdgeConfigBackupBackup1{}
	}
	return o.Backup
}

func (o *GetEdgeConfigBackupResponseBody1) GetMetadata() GetEdgeConfigBackupMetadata1 {
	if o == nil {
		return GetEdgeConfigBackupMetadata1{}
	}
	return o.Metadata
}

func (o *GetEdgeConfigBackupResponseBody1) GetUser() *GetEdgeConfigBackupUser1 {
	if o == nil {
		return nil
	}
	return o.User
}

type GetEdgeConfigBackupResponseBodyType string

const (
	GetEdgeConfigBackupResponseBodyTypeGetEdgeConfigBackupResponseBody1 GetEdgeConfigBackupResponseBodyType = "getEdgeConfigBackup_ResponseBody_1"
	GetEdgeConfigBackupResponseBodyTypeGetEdgeConfigBackupResponseBody2 GetEdgeConfigBackupResponseBodyType = "getEdgeConfigBackup_ResponseBody_2"
)

type GetEdgeConfigBackupResponseBody struct {
	GetEdgeConfigBackupResponseBody1 *GetEdgeConfigBackupResponseBody1 `queryParam:"inline"`
	GetEdgeConfigBackupResponseBody2 *GetEdgeConfigBackupResponseBody2 `queryParam:"inline"`

	Type GetEdgeConfigBackupResponseBodyType
}

func CreateGetEdgeConfigBackupResponseBodyGetEdgeConfigBackupResponseBody1(getEdgeConfigBackupResponseBody1 GetEdgeConfigBackupResponseBody1) GetEdgeConfigBackupResponseBody {
	typ := GetEdgeConfigBackupResponseBodyTypeGetEdgeConfigBackupResponseBody1

	return GetEdgeConfigBackupResponseBody{
		GetEdgeConfigBackupResponseBody1: &getEdgeConfigBackupResponseBody1,
		Type:                             typ,
	}
}

func CreateGetEdgeConfigBackupResponseBodyGetEdgeConfigBackupResponseBody2(getEdgeConfigBackupResponseBody2 GetEdgeConfigBackupResponseBody2) GetEdgeConfigBackupResponseBody {
	typ := GetEdgeConfigBackupResponseBodyTypeGetEdgeConfigBackupResponseBody2

	return GetEdgeConfigBackupResponseBody{
		GetEdgeConfigBackupResponseBody2: &getEdgeConfigBackupResponseBody2,
		Type:                             typ,
	}
}

func (u *GetEdgeConfigBackupResponseBody) UnmarshalJSON(data []byte) error {

	var getEdgeConfigBackupResponseBody1 GetEdgeConfigBackupResponseBody1 = GetEdgeConfigBackupResponseBody1{}
	if err := utils.UnmarshalJSON(data, &getEdgeConfigBackupResponseBody1, "", true, true); err == nil {
		u.GetEdgeConfigBackupResponseBody1 = &getEdgeConfigBackupResponseBody1
		u.Type = GetEdgeConfigBackupResponseBodyTypeGetEdgeConfigBackupResponseBody1
		return nil
	}

	var getEdgeConfigBackupResponseBody2 GetEdgeConfigBackupResponseBody2 = GetEdgeConfigBackupResponseBody2{}
	if err := utils.UnmarshalJSON(data, &getEdgeConfigBackupResponseBody2, "", true, true); err == nil {
		u.GetEdgeConfigBackupResponseBody2 = &getEdgeConfigBackupResponseBody2
		u.Type = GetEdgeConfigBackupResponseBodyTypeGetEdgeConfigBackupResponseBody2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetEdgeConfigBackupResponseBody", string(data))
}

func (u GetEdgeConfigBackupResponseBody) MarshalJSON() ([]byte, error) {
	if u.GetEdgeConfigBackupResponseBody1 != nil {
		return utils.MarshalJSON(u.GetEdgeConfigBackupResponseBody1, "", true)
	}

	if u.GetEdgeConfigBackupResponseBody2 != nil {
		return utils.MarshalJSON(u.GetEdgeConfigBackupResponseBody2, "", true)
	}

	return nil, errors.New("could not marshal union type GetEdgeConfigBackupResponseBody: all fields are null")
}

type GetEdgeConfigBackupResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	OneOf    *GetEdgeConfigBackupResponseBody
}

func (o *GetEdgeConfigBackupResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetEdgeConfigBackupResponse) GetOneOf() *GetEdgeConfigBackupResponseBody {
	if o == nil {
		return nil
	}
	return o.OneOf
}
