// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetEdgeConfigBackupsRequest struct {
	EdgeConfigID string   `pathParam:"style=simple,explode=false,name=edgeConfigId"`
	Next         *string  `queryParam:"style=form,explode=true,name=next"`
	Limit        *float64 `queryParam:"style=form,explode=true,name=limit"`
	Metadata     *string  `queryParam:"style=form,explode=true,name=metadata"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetEdgeConfigBackupsRequest) GetEdgeConfigID() string {
	if o == nil {
		return ""
	}
	return o.EdgeConfigID
}

func (o *GetEdgeConfigBackupsRequest) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *GetEdgeConfigBackupsRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetEdgeConfigBackupsRequest) GetMetadata() *string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *GetEdgeConfigBackupsRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetEdgeConfigBackupsRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type GetEdgeConfigBackupsMetadata struct {
	UpdatedAt  *string  `json:"updatedAt,omitempty"`
	UpdatedBy  *string  `json:"updatedBy,omitempty"`
	ItemsCount *float64 `json:"itemsCount,omitempty"`
	ItemsBytes *float64 `json:"itemsBytes,omitempty"`
}

func (o *GetEdgeConfigBackupsMetadata) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetEdgeConfigBackupsMetadata) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *GetEdgeConfigBackupsMetadata) GetItemsCount() *float64 {
	if o == nil {
		return nil
	}
	return o.ItemsCount
}

func (o *GetEdgeConfigBackupsMetadata) GetItemsBytes() *float64 {
	if o == nil {
		return nil
	}
	return o.ItemsBytes
}

type GetEdgeConfigBackupsBackup struct {
	Metadata     *GetEdgeConfigBackupsMetadata `json:"metadata,omitempty"`
	ID           string                        `json:"id"`
	LastModified float64                       `json:"lastModified"`
}

func (o *GetEdgeConfigBackupsBackup) GetMetadata() *GetEdgeConfigBackupsMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *GetEdgeConfigBackupsBackup) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetEdgeConfigBackupsBackup) GetLastModified() float64 {
	if o == nil {
		return 0.0
	}
	return o.LastModified
}

type GetEdgeConfigBackupsPagination struct {
	HasNext bool    `json:"hasNext"`
	Next    *string `json:"next,omitempty"`
}

func (o *GetEdgeConfigBackupsPagination) GetHasNext() bool {
	if o == nil {
		return false
	}
	return o.HasNext
}

func (o *GetEdgeConfigBackupsPagination) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

type GetEdgeConfigBackupsResponseBody struct {
	Backups    []GetEdgeConfigBackupsBackup   `json:"backups"`
	Pagination GetEdgeConfigBackupsPagination `json:"pagination"`
}

func (o *GetEdgeConfigBackupsResponseBody) GetBackups() []GetEdgeConfigBackupsBackup {
	if o == nil {
		return []GetEdgeConfigBackupsBackup{}
	}
	return o.Backups
}

func (o *GetEdgeConfigBackupsResponseBody) GetPagination() GetEdgeConfigBackupsPagination {
	if o == nil {
		return GetEdgeConfigBackupsPagination{}
	}
	return o.Pagination
}

type GetEdgeConfigBackupsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetEdgeConfigBackupsResponseBody
}

func (o *GetEdgeConfigBackupsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetEdgeConfigBackupsResponse) GetObject() *GetEdgeConfigBackupsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
