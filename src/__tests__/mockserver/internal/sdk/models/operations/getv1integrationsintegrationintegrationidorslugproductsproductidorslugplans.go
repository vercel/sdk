// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansRequest struct {
	IntegrationIDOrSlug string  `pathParam:"style=simple,explode=false,name=integrationIdOrSlug"`
	ProductIDOrSlug     string  `pathParam:"style=simple,explode=false,name=productIdOrSlug"`
	Metadata            *string `queryParam:"style=form,explode=true,name=metadata"`
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansRequest) GetIntegrationIDOrSlug() string {
	if o == nil {
		return ""
	}
	return o.IntegrationIDOrSlug
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansRequest) GetProductIDOrSlug() string {
	if o == nil {
		return ""
	}
	return o.ProductIDOrSlug
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansRequest) GetMetadata() *string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType string

const (
	GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansTypePrepayment   GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType = "prepayment"
	GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansTypeSubscription GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType = "subscription"
)

func (e GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType) ToPointer() *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType {
	return &e
}
func (e *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "prepayment":
		fallthrough
	case "subscription":
		*e = GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType: %v", v)
	}
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope string

const (
	GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScopeInstallation GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope = "installation"
	GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScopeResource     GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope = "resource"
)

func (e GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope) ToPointer() *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope {
	return &e
}
func (e *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "installation":
		fallthrough
	case "resource":
		*e = GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope: %v", v)
	}
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansDetail struct {
	Label string  `json:"label"`
	Value *string `json:"value,omitempty"`
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansDetail) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansDetail) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansHighlightedDetail struct {
	Label string  `json:"label"`
	Value *string `json:"value,omitempty"`
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansHighlightedDetail) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansHighlightedDetail) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansQuote struct {
	Line   string `json:"line"`
	Amount string `json:"amount"`
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansQuote) GetLine() string {
	if o == nil {
		return ""
	}
	return o.Line
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansQuote) GetAmount() string {
	if o == nil {
		return ""
	}
	return o.Amount
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan struct {
	Type                               GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType                `json:"type"`
	ID                                 string                                                                                         `json:"id"`
	Name                               string                                                                                         `json:"name"`
	Scope                              GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope               `json:"scope"`
	Description                        string                                                                                         `json:"description"`
	PaymentMethodRequired              bool                                                                                           `json:"paymentMethodRequired"`
	PreauthorizationAmount             *float64                                                                                       `json:"preauthorizationAmount,omitempty"`
	InitialCharge                      *string                                                                                        `json:"initialCharge,omitempty"`
	MinimumAmount                      *string                                                                                        `json:"minimumAmount,omitempty"`
	MaximumAmount                      *string                                                                                        `json:"maximumAmount,omitempty"`
	MaximumAmountAutoPurchasePerPeriod *string                                                                                        `json:"maximumAmountAutoPurchasePerPeriod,omitempty"`
	Cost                               *string                                                                                        `json:"cost,omitempty"`
	Details                            []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansDetail            `json:"details,omitempty"`
	HighlightedDetails                 []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansHighlightedDetail `json:"highlightedDetails,omitempty"`
	Quote                              []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansQuote             `json:"quote,omitempty"`
	EffectiveDate                      *string                                                                                        `json:"effectiveDate,omitempty"`
	Disabled                           *bool                                                                                          `json:"disabled,omitempty"`
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetType() GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType {
	if o == nil {
		return GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansType("")
	}
	return o.Type
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetScope() GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope {
	if o == nil {
		return GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansScope("")
	}
	return o.Scope
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetPaymentMethodRequired() bool {
	if o == nil {
		return false
	}
	return o.PaymentMethodRequired
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetPreauthorizationAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.PreauthorizationAmount
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetInitialCharge() *string {
	if o == nil {
		return nil
	}
	return o.InitialCharge
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetMinimumAmount() *string {
	if o == nil {
		return nil
	}
	return o.MinimumAmount
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetMaximumAmount() *string {
	if o == nil {
		return nil
	}
	return o.MaximumAmount
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetMaximumAmountAutoPurchasePerPeriod() *string {
	if o == nil {
		return nil
	}
	return o.MaximumAmountAutoPurchasePerPeriod
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetCost() *string {
	if o == nil {
		return nil
	}
	return o.Cost
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetDetails() []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansDetail {
	if o == nil {
		return nil
	}
	return o.Details
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetHighlightedDetails() []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansHighlightedDetail {
	if o == nil {
		return nil
	}
	return o.HighlightedDetails
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetQuote() []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansQuote {
	if o == nil {
		return nil
	}
	return o.Quote
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetEffectiveDate() *string {
	if o == nil {
		return nil
	}
	return o.EffectiveDate
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansResponseBody struct {
	Plans []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan `json:"plans"`
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansResponseBody) GetPlans() []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan {
	if o == nil {
		return []GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansPlan{}
	}
	return o.Plans
}

type GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansResponseBody
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansResponse) GetObject() *GetV1IntegrationsIntegrationIntegrationIDOrSlugProductsProductIDOrSlugPlansResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
