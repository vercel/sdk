// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetV9ProjectsIDOrNameCustomEnvironmentsRequest struct {
	// The unique project identifier or the project name
	IDOrName string `pathParam:"style=simple,explode=false,name=idOrName"`
	// Fetch custom environments for a specific git branch
	GitBranch *string `queryParam:"style=form,explode=true,name=gitBranch"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetV9ProjectsIDOrNameCustomEnvironmentsRequest) GetIDOrName() string {
	if o == nil {
		return ""
	}
	return o.IDOrName
}

func (o *GetV9ProjectsIDOrNameCustomEnvironmentsRequest) GetGitBranch() *string {
	if o == nil {
		return nil
	}
	return o.GitBranch
}

func (o *GetV9ProjectsIDOrNameCustomEnvironmentsRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetV9ProjectsIDOrNameCustomEnvironmentsRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

// GetV9ProjectsIDOrNameCustomEnvironmentsEnvironments - Internal representation of a custom environment with all required properties
type GetV9ProjectsIDOrNameCustomEnvironmentsEnvironments struct {
}

type GetV9ProjectsIDOrNameCustomEnvironmentsResponseBody struct {
	Environments []GetV9ProjectsIDOrNameCustomEnvironmentsEnvironments `json:"environments"`
}

func (o *GetV9ProjectsIDOrNameCustomEnvironmentsResponseBody) GetEnvironments() []GetV9ProjectsIDOrNameCustomEnvironmentsEnvironments {
	if o == nil {
		return []GetV9ProjectsIDOrNameCustomEnvironmentsEnvironments{}
	}
	return o.Environments
}

type GetV9ProjectsIDOrNameCustomEnvironmentsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetV9ProjectsIDOrNameCustomEnvironmentsResponseBody
}

func (o *GetV9ProjectsIDOrNameCustomEnvironmentsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetV9ProjectsIDOrNameCustomEnvironmentsResponse) GetObject() *GetV9ProjectsIDOrNameCustomEnvironmentsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
