// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
	"time"
)

type ListDeploymentAliasesRequest struct {
	// The ID of the deployment the aliases should be listed for
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *ListDeploymentAliasesRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListDeploymentAliasesRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *ListDeploymentAliasesRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type ListDeploymentAliasesScopeEmailInvite string

const (
	ListDeploymentAliasesScopeEmailInviteEmailInvite ListDeploymentAliasesScopeEmailInvite = "email_invite"
)

func (e ListDeploymentAliasesScopeEmailInvite) ToPointer() *ListDeploymentAliasesScopeEmailInvite {
	return &e
}
func (e *ListDeploymentAliasesScopeEmailInvite) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email_invite":
		*e = ListDeploymentAliasesScopeEmailInvite(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeploymentAliasesScopeEmailInvite: %v", v)
	}
}

// ListDeploymentAliasesProtectionBypassEmailInvite - The protection bypass for the alias
type ListDeploymentAliasesProtectionBypassEmailInvite struct {
	CreatedAt     float64                               `json:"createdAt"`
	LastUpdatedAt float64                               `json:"lastUpdatedAt"`
	LastUpdatedBy string                                `json:"lastUpdatedBy"`
	Scope         ListDeploymentAliasesScopeEmailInvite `json:"scope"`
}

func (o *ListDeploymentAliasesProtectionBypassEmailInvite) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListDeploymentAliasesProtectionBypassEmailInvite) GetLastUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.LastUpdatedAt
}

func (o *ListDeploymentAliasesProtectionBypassEmailInvite) GetLastUpdatedBy() string {
	if o == nil {
		return ""
	}
	return o.LastUpdatedBy
}

func (o *ListDeploymentAliasesProtectionBypassEmailInvite) GetScope() ListDeploymentAliasesScopeEmailInvite {
	if o == nil {
		return ListDeploymentAliasesScopeEmailInvite("")
	}
	return o.Scope
}

type ListDeploymentAliasesScopeAliasProtectionOverride string

const (
	ListDeploymentAliasesScopeAliasProtectionOverrideAliasProtectionOverride ListDeploymentAliasesScopeAliasProtectionOverride = "alias-protection-override"
)

func (e ListDeploymentAliasesScopeAliasProtectionOverride) ToPointer() *ListDeploymentAliasesScopeAliasProtectionOverride {
	return &e
}
func (e *ListDeploymentAliasesScopeAliasProtectionOverride) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "alias-protection-override":
		*e = ListDeploymentAliasesScopeAliasProtectionOverride(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeploymentAliasesScopeAliasProtectionOverride: %v", v)
	}
}

// ListDeploymentAliasesProtectionBypassAliasProtectionOverride - The protection bypass for the alias
type ListDeploymentAliasesProtectionBypassAliasProtectionOverride struct {
	CreatedAt float64                                           `json:"createdAt"`
	CreatedBy string                                            `json:"createdBy"`
	Scope     ListDeploymentAliasesScopeAliasProtectionOverride `json:"scope"`
}

func (o *ListDeploymentAliasesProtectionBypassAliasProtectionOverride) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListDeploymentAliasesProtectionBypassAliasProtectionOverride) GetCreatedBy() string {
	if o == nil {
		return ""
	}
	return o.CreatedBy
}

func (o *ListDeploymentAliasesProtectionBypassAliasProtectionOverride) GetScope() ListDeploymentAliasesScopeAliasProtectionOverride {
	if o == nil {
		return ListDeploymentAliasesScopeAliasProtectionOverride("")
	}
	return o.Scope
}

type ListDeploymentAliasesAccess string

const (
	ListDeploymentAliasesAccessRequested ListDeploymentAliasesAccess = "requested"
	ListDeploymentAliasesAccessGranted   ListDeploymentAliasesAccess = "granted"
)

func (e ListDeploymentAliasesAccess) ToPointer() *ListDeploymentAliasesAccess {
	return &e
}
func (e *ListDeploymentAliasesAccess) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "requested":
		fallthrough
	case "granted":
		*e = ListDeploymentAliasesAccess(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeploymentAliasesAccess: %v", v)
	}
}

type ListDeploymentAliasesScopeUser string

const (
	ListDeploymentAliasesScopeUserUser ListDeploymentAliasesScopeUser = "user"
)

func (e ListDeploymentAliasesScopeUser) ToPointer() *ListDeploymentAliasesScopeUser {
	return &e
}
func (e *ListDeploymentAliasesScopeUser) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		*e = ListDeploymentAliasesScopeUser(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeploymentAliasesScopeUser: %v", v)
	}
}

// ListDeploymentAliasesProtectionBypassUser - The protection bypass for the alias
type ListDeploymentAliasesProtectionBypassUser struct {
	CreatedAt     float64                        `json:"createdAt"`
	LastUpdatedAt float64                        `json:"lastUpdatedAt"`
	LastUpdatedBy string                         `json:"lastUpdatedBy"`
	Access        ListDeploymentAliasesAccess    `json:"access"`
	Scope         ListDeploymentAliasesScopeUser `json:"scope"`
}

func (o *ListDeploymentAliasesProtectionBypassUser) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListDeploymentAliasesProtectionBypassUser) GetLastUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.LastUpdatedAt
}

func (o *ListDeploymentAliasesProtectionBypassUser) GetLastUpdatedBy() string {
	if o == nil {
		return ""
	}
	return o.LastUpdatedBy
}

func (o *ListDeploymentAliasesProtectionBypassUser) GetAccess() ListDeploymentAliasesAccess {
	if o == nil {
		return ListDeploymentAliasesAccess("")
	}
	return o.Access
}

func (o *ListDeploymentAliasesProtectionBypassUser) GetScope() ListDeploymentAliasesScopeUser {
	if o == nil {
		return ListDeploymentAliasesScopeUser("")
	}
	return o.Scope
}

type ListDeploymentAliasesScopeShareableLink string

const (
	ListDeploymentAliasesScopeShareableLinkShareableLink ListDeploymentAliasesScopeShareableLink = "shareable-link"
)

func (e ListDeploymentAliasesScopeShareableLink) ToPointer() *ListDeploymentAliasesScopeShareableLink {
	return &e
}
func (e *ListDeploymentAliasesScopeShareableLink) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shareable-link":
		*e = ListDeploymentAliasesScopeShareableLink(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeploymentAliasesScopeShareableLink: %v", v)
	}
}

// ListDeploymentAliasesProtectionBypassShareableLink - The protection bypass for the alias
type ListDeploymentAliasesProtectionBypassShareableLink struct {
	CreatedAt float64                                 `json:"createdAt"`
	CreatedBy string                                  `json:"createdBy"`
	Scope     ListDeploymentAliasesScopeShareableLink `json:"scope"`
}

func (o *ListDeploymentAliasesProtectionBypassShareableLink) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListDeploymentAliasesProtectionBypassShareableLink) GetCreatedBy() string {
	if o == nil {
		return ""
	}
	return o.CreatedBy
}

func (o *ListDeploymentAliasesProtectionBypassShareableLink) GetScope() ListDeploymentAliasesScopeShareableLink {
	if o == nil {
		return ListDeploymentAliasesScopeShareableLink("")
	}
	return o.Scope
}

type ListDeploymentAliasesProtectionBypassUnionType string

const (
	ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassShareableLink           ListDeploymentAliasesProtectionBypassUnionType = "listDeploymentAliases_protectionBypass_ShareableLink"
	ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassUser                    ListDeploymentAliasesProtectionBypassUnionType = "listDeploymentAliases_protectionBypass_User"
	ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassAliasProtectionOverride ListDeploymentAliasesProtectionBypassUnionType = "listDeploymentAliases_protectionBypass_AliasProtectionOverride"
	ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassEmailInvite             ListDeploymentAliasesProtectionBypassUnionType = "listDeploymentAliases_protectionBypass_EmailInvite"
)

type ListDeploymentAliasesProtectionBypassUnion struct {
	ListDeploymentAliasesProtectionBypassShareableLink           *ListDeploymentAliasesProtectionBypassShareableLink           `queryParam:"inline"`
	ListDeploymentAliasesProtectionBypassUser                    *ListDeploymentAliasesProtectionBypassUser                    `queryParam:"inline"`
	ListDeploymentAliasesProtectionBypassAliasProtectionOverride *ListDeploymentAliasesProtectionBypassAliasProtectionOverride `queryParam:"inline"`
	ListDeploymentAliasesProtectionBypassEmailInvite             *ListDeploymentAliasesProtectionBypassEmailInvite             `queryParam:"inline"`

	Type ListDeploymentAliasesProtectionBypassUnionType
}

func CreateListDeploymentAliasesProtectionBypassUnionListDeploymentAliasesProtectionBypassShareableLink(listDeploymentAliasesProtectionBypassShareableLink ListDeploymentAliasesProtectionBypassShareableLink) ListDeploymentAliasesProtectionBypassUnion {
	typ := ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassShareableLink

	return ListDeploymentAliasesProtectionBypassUnion{
		ListDeploymentAliasesProtectionBypassShareableLink: &listDeploymentAliasesProtectionBypassShareableLink,
		Type: typ,
	}
}

func CreateListDeploymentAliasesProtectionBypassUnionListDeploymentAliasesProtectionBypassUser(listDeploymentAliasesProtectionBypassUser ListDeploymentAliasesProtectionBypassUser) ListDeploymentAliasesProtectionBypassUnion {
	typ := ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassUser

	return ListDeploymentAliasesProtectionBypassUnion{
		ListDeploymentAliasesProtectionBypassUser: &listDeploymentAliasesProtectionBypassUser,
		Type: typ,
	}
}

func CreateListDeploymentAliasesProtectionBypassUnionListDeploymentAliasesProtectionBypassAliasProtectionOverride(listDeploymentAliasesProtectionBypassAliasProtectionOverride ListDeploymentAliasesProtectionBypassAliasProtectionOverride) ListDeploymentAliasesProtectionBypassUnion {
	typ := ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassAliasProtectionOverride

	return ListDeploymentAliasesProtectionBypassUnion{
		ListDeploymentAliasesProtectionBypassAliasProtectionOverride: &listDeploymentAliasesProtectionBypassAliasProtectionOverride,
		Type: typ,
	}
}

func CreateListDeploymentAliasesProtectionBypassUnionListDeploymentAliasesProtectionBypassEmailInvite(listDeploymentAliasesProtectionBypassEmailInvite ListDeploymentAliasesProtectionBypassEmailInvite) ListDeploymentAliasesProtectionBypassUnion {
	typ := ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassEmailInvite

	return ListDeploymentAliasesProtectionBypassUnion{
		ListDeploymentAliasesProtectionBypassEmailInvite: &listDeploymentAliasesProtectionBypassEmailInvite,
		Type: typ,
	}
}

func (u *ListDeploymentAliasesProtectionBypassUnion) UnmarshalJSON(data []byte) error {

	var listDeploymentAliasesProtectionBypassShareableLink ListDeploymentAliasesProtectionBypassShareableLink = ListDeploymentAliasesProtectionBypassShareableLink{}
	if err := utils.UnmarshalJSON(data, &listDeploymentAliasesProtectionBypassShareableLink, "", true, true); err == nil {
		u.ListDeploymentAliasesProtectionBypassShareableLink = &listDeploymentAliasesProtectionBypassShareableLink
		u.Type = ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassShareableLink
		return nil
	}

	var listDeploymentAliasesProtectionBypassAliasProtectionOverride ListDeploymentAliasesProtectionBypassAliasProtectionOverride = ListDeploymentAliasesProtectionBypassAliasProtectionOverride{}
	if err := utils.UnmarshalJSON(data, &listDeploymentAliasesProtectionBypassAliasProtectionOverride, "", true, true); err == nil {
		u.ListDeploymentAliasesProtectionBypassAliasProtectionOverride = &listDeploymentAliasesProtectionBypassAliasProtectionOverride
		u.Type = ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassAliasProtectionOverride
		return nil
	}

	var listDeploymentAliasesProtectionBypassEmailInvite ListDeploymentAliasesProtectionBypassEmailInvite = ListDeploymentAliasesProtectionBypassEmailInvite{}
	if err := utils.UnmarshalJSON(data, &listDeploymentAliasesProtectionBypassEmailInvite, "", true, true); err == nil {
		u.ListDeploymentAliasesProtectionBypassEmailInvite = &listDeploymentAliasesProtectionBypassEmailInvite
		u.Type = ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassEmailInvite
		return nil
	}

	var listDeploymentAliasesProtectionBypassUser ListDeploymentAliasesProtectionBypassUser = ListDeploymentAliasesProtectionBypassUser{}
	if err := utils.UnmarshalJSON(data, &listDeploymentAliasesProtectionBypassUser, "", true, true); err == nil {
		u.ListDeploymentAliasesProtectionBypassUser = &listDeploymentAliasesProtectionBypassUser
		u.Type = ListDeploymentAliasesProtectionBypassUnionTypeListDeploymentAliasesProtectionBypassUser
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ListDeploymentAliasesProtectionBypassUnion", string(data))
}

func (u ListDeploymentAliasesProtectionBypassUnion) MarshalJSON() ([]byte, error) {
	if u.ListDeploymentAliasesProtectionBypassShareableLink != nil {
		return utils.MarshalJSON(u.ListDeploymentAliasesProtectionBypassShareableLink, "", true)
	}

	if u.ListDeploymentAliasesProtectionBypassUser != nil {
		return utils.MarshalJSON(u.ListDeploymentAliasesProtectionBypassUser, "", true)
	}

	if u.ListDeploymentAliasesProtectionBypassAliasProtectionOverride != nil {
		return utils.MarshalJSON(u.ListDeploymentAliasesProtectionBypassAliasProtectionOverride, "", true)
	}

	if u.ListDeploymentAliasesProtectionBypassEmailInvite != nil {
		return utils.MarshalJSON(u.ListDeploymentAliasesProtectionBypassEmailInvite, "", true)
	}

	return nil, errors.New("could not marshal union type ListDeploymentAliasesProtectionBypassUnion: all fields are null")
}

// ListDeploymentAliasesAlias - A list of the aliases assigned to the deployment
type ListDeploymentAliasesAlias struct {
	// The unique identifier of the alias
	UID string `json:"uid"`
	// The alias name, it could be a `.vercel.app` subdomain or a custom domain
	Alias string `json:"alias"`
	// The date when the alias was created
	Created time.Time `json:"created"`
	// Target destination domain for redirect when the alias is a redirect
	Redirect *string `json:"redirect,omitempty"`
	// The protection bypass for the alias
	ProtectionBypass map[string]ListDeploymentAliasesProtectionBypassUnion `json:"protectionBypass,omitempty"`
}

func (l ListDeploymentAliasesAlias) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListDeploymentAliasesAlias) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListDeploymentAliasesAlias) GetUID() string {
	if o == nil {
		return ""
	}
	return o.UID
}

func (o *ListDeploymentAliasesAlias) GetAlias() string {
	if o == nil {
		return ""
	}
	return o.Alias
}

func (o *ListDeploymentAliasesAlias) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *ListDeploymentAliasesAlias) GetRedirect() *string {
	if o == nil {
		return nil
	}
	return o.Redirect
}

func (o *ListDeploymentAliasesAlias) GetProtectionBypass() map[string]ListDeploymentAliasesProtectionBypassUnion {
	if o == nil {
		return nil
	}
	return o.ProtectionBypass
}

// ListDeploymentAliasesResponseBody - The list of aliases assigned to the deployment
type ListDeploymentAliasesResponseBody struct {
	// A list of the aliases assigned to the deployment
	Aliases []ListDeploymentAliasesAlias `json:"aliases"`
}

func (o *ListDeploymentAliasesResponseBody) GetAliases() []ListDeploymentAliasesAlias {
	if o == nil {
		return []ListDeploymentAliasesAlias{}
	}
	return o.Aliases
}

type ListDeploymentAliasesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The list of aliases assigned to the deployment
	Object *ListDeploymentAliasesResponseBody
}

func (o *ListDeploymentAliasesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListDeploymentAliasesResponse) GetObject() *ListDeploymentAliasesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
