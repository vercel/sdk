// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type RemoveProjectDomainRequestBody struct {
	// Whether to remove all domains from this project that redirect to the domain being removed.
	RemoveRedirects *bool `json:"removeRedirects,omitempty"`
}

func (o *RemoveProjectDomainRequestBody) GetRemoveRedirects() *bool {
	if o == nil {
		return nil
	}
	return o.RemoveRedirects
}

type RemoveProjectDomainRequest struct {
	// The unique project identifier or the project name
	IDOrName string `pathParam:"style=simple,explode=false,name=idOrName"`
	// The project domain name
	Domain string `pathParam:"style=simple,explode=false,name=domain"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                         `queryParam:"style=form,explode=true,name=slug"`
	RequestBody *RemoveProjectDomainRequestBody `request:"mediaType=application/json"`
}

func (o *RemoveProjectDomainRequest) GetIDOrName() string {
	if o == nil {
		return ""
	}
	return o.IDOrName
}

func (o *RemoveProjectDomainRequest) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *RemoveProjectDomainRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *RemoveProjectDomainRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *RemoveProjectDomainRequest) GetRequestBody() *RemoveProjectDomainRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

// RemoveProjectDomainResponseBody - The domain was succesfully removed from the project
type RemoveProjectDomainResponseBody struct {
}

type RemoveProjectDomainResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The domain was succesfully removed from the project
	Object *RemoveProjectDomainResponseBody
}

func (o *RemoveProjectDomainResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RemoveProjectDomainResponse) GetObject() *RemoveProjectDomainResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
