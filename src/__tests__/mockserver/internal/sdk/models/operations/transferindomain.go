// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type TransferInDomainContactInformation struct {
	// a non empty string
	FirstName string `json:"firstName"`
	// a non empty string
	LastName string `json:"lastName"`
	// a non empty string
	Email string `json:"email"`
	// A valid E.164 phone number
	Phone string `json:"phone"`
	// a non empty string
	Address1 string `json:"address1"`
	// a non empty string
	Address2 *string `json:"address2,omitempty"`
	// a non empty string
	City string `json:"city"`
	// a non empty string
	State string `json:"state"`
	// a non empty string
	Zip string `json:"zip"`
	// A valid ISO 3166-1 alpha-2 country code
	Country string `json:"country"`
	// a non empty string
	CompanyName *string `json:"companyName,omitempty"`
	// A valid E.164 phone number
	Fax *string `json:"fax,omitempty"`
}

func (o *TransferInDomainContactInformation) GetFirstName() string {
	if o == nil {
		return ""
	}
	return o.FirstName
}

func (o *TransferInDomainContactInformation) GetLastName() string {
	if o == nil {
		return ""
	}
	return o.LastName
}

func (o *TransferInDomainContactInformation) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *TransferInDomainContactInformation) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

func (o *TransferInDomainContactInformation) GetAddress1() string {
	if o == nil {
		return ""
	}
	return o.Address1
}

func (o *TransferInDomainContactInformation) GetAddress2() *string {
	if o == nil {
		return nil
	}
	return o.Address2
}

func (o *TransferInDomainContactInformation) GetCity() string {
	if o == nil {
		return ""
	}
	return o.City
}

func (o *TransferInDomainContactInformation) GetState() string {
	if o == nil {
		return ""
	}
	return o.State
}

func (o *TransferInDomainContactInformation) GetZip() string {
	if o == nil {
		return ""
	}
	return o.Zip
}

func (o *TransferInDomainContactInformation) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *TransferInDomainContactInformation) GetCompanyName() *string {
	if o == nil {
		return nil
	}
	return o.CompanyName
}

func (o *TransferInDomainContactInformation) GetFax() *string {
	if o == nil {
		return nil
	}
	return o.Fax
}

type TransferInDomainRequestBody struct {
	AuthCode  string  `json:"authCode"`
	AutoRenew bool    `json:"autoRenew"`
	Years     float64 `json:"years"`
	// Represents a monetary amount in USD dollars
	ExpectedPrice      float64                            `json:"expectedPrice"`
	ContactInformation TransferInDomainContactInformation `json:"contactInformation"`
}

func (o *TransferInDomainRequestBody) GetAuthCode() string {
	if o == nil {
		return ""
	}
	return o.AuthCode
}

func (o *TransferInDomainRequestBody) GetAutoRenew() bool {
	if o == nil {
		return false
	}
	return o.AutoRenew
}

func (o *TransferInDomainRequestBody) GetYears() float64 {
	if o == nil {
		return 0.0
	}
	return o.Years
}

func (o *TransferInDomainRequestBody) GetExpectedPrice() float64 {
	if o == nil {
		return 0.0
	}
	return o.ExpectedPrice
}

func (o *TransferInDomainRequestBody) GetContactInformation() TransferInDomainContactInformation {
	if o == nil {
		return TransferInDomainContactInformation{}
	}
	return o.ContactInformation
}

type TransferInDomainRequest struct {
	Domain      string                      `pathParam:"style=simple,explode=false,name=domain"`
	RequestBody TransferInDomainRequestBody `request:"mediaType=application/json"`
}

func (o *TransferInDomainRequest) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *TransferInDomainRequest) GetRequestBody() TransferInDomainRequestBody {
	if o == nil {
		return TransferInDomainRequestBody{}
	}
	return o.RequestBody
}

type TransferInDomainMethod string

const (
	TransferInDomainMethodGet TransferInDomainMethod = "GET"
)

func (e TransferInDomainMethod) ToPointer() *TransferInDomainMethod {
	return &e
}
func (e *TransferInDomainMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GET":
		*e = TransferInDomainMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferInDomainMethod: %v", v)
	}
}

type TransferInDomainLinks struct {
	Href   string                 `json:"href"`
	Method TransferInDomainMethod `json:"method"`
}

func (o *TransferInDomainLinks) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *TransferInDomainLinks) GetMethod() TransferInDomainMethod {
	if o == nil {
		return TransferInDomainMethod("")
	}
	return o.Method
}

// TransferInDomainResponseBody - Success
type TransferInDomainResponseBody struct {
	OrderID string                           `json:"orderId"`
	Links   map[string]TransferInDomainLinks `json:"_links"`
}

func (o *TransferInDomainResponseBody) GetOrderID() string {
	if o == nil {
		return ""
	}
	return o.OrderID
}

func (o *TransferInDomainResponseBody) GetLinks() map[string]TransferInDomainLinks {
	if o == nil {
		return map[string]TransferInDomainLinks{}
	}
	return o.Links
}

type TransferInDomainResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *TransferInDomainResponseBody
}

func (o *TransferInDomainResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TransferInDomainResponse) GetObject() *TransferInDomainResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
