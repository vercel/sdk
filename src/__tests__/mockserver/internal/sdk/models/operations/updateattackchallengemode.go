// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateAttackChallengeModeRequestBody struct {
	ProjectID             string   `json:"projectId"`
	AttackModeEnabled     bool     `json:"attackModeEnabled"`
	AttackModeActiveUntil *float64 `json:"attackModeActiveUntil,omitempty"`
}

func (o *UpdateAttackChallengeModeRequestBody) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *UpdateAttackChallengeModeRequestBody) GetAttackModeEnabled() bool {
	if o == nil {
		return false
	}
	return o.AttackModeEnabled
}

func (o *UpdateAttackChallengeModeRequestBody) GetAttackModeActiveUntil() *float64 {
	if o == nil {
		return nil
	}
	return o.AttackModeActiveUntil
}

type UpdateAttackChallengeModeRequest struct {
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                              `queryParam:"style=form,explode=true,name=slug"`
	RequestBody UpdateAttackChallengeModeRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateAttackChallengeModeRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *UpdateAttackChallengeModeRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateAttackChallengeModeRequest) GetRequestBody() UpdateAttackChallengeModeRequestBody {
	if o == nil {
		return UpdateAttackChallengeModeRequestBody{}
	}
	return o.RequestBody
}

type UpdateAttackChallengeModeResponseBody struct {
	AttackModeEnabled   bool    `json:"attackModeEnabled"`
	AttackModeUpdatedAt float64 `json:"attackModeUpdatedAt"`
}

func (o *UpdateAttackChallengeModeResponseBody) GetAttackModeEnabled() bool {
	if o == nil {
		return false
	}
	return o.AttackModeEnabled
}

func (o *UpdateAttackChallengeModeResponseBody) GetAttackModeUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.AttackModeUpdatedAt
}

type UpdateAttackChallengeModeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *UpdateAttackChallengeModeResponseBody
}

func (o *UpdateAttackChallengeModeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateAttackChallengeModeResponse) GetObject() *UpdateAttackChallengeModeResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
