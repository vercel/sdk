// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type UpdateInvoiceAction string

const (
	UpdateInvoiceActionRefund UpdateInvoiceAction = "refund"
)

func (e UpdateInvoiceAction) ToPointer() *UpdateInvoiceAction {
	return &e
}
func (e *UpdateInvoiceAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "refund":
		*e = UpdateInvoiceAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateInvoiceAction: %v", v)
	}
}

type UpdateInvoiceRequestBody struct {
	Action UpdateInvoiceAction `json:"action"`
	// Refund reason.
	Reason string `json:"reason"`
	// The total amount to be refunded. Must be less than or equal to the total amount of the invoice.
	Total string `json:"total"`
}

func (o *UpdateInvoiceRequestBody) GetAction() UpdateInvoiceAction {
	if o == nil {
		return UpdateInvoiceAction("")
	}
	return o.Action
}

func (o *UpdateInvoiceRequestBody) GetReason() string {
	if o == nil {
		return ""
	}
	return o.Reason
}

func (o *UpdateInvoiceRequestBody) GetTotal() string {
	if o == nil {
		return ""
	}
	return o.Total
}

type UpdateInvoiceRequest struct {
	IntegrationConfigurationID string                   `pathParam:"style=simple,explode=false,name=integrationConfigurationId"`
	InvoiceID                  string                   `pathParam:"style=simple,explode=false,name=invoiceId"`
	RequestBody                UpdateInvoiceRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateInvoiceRequest) GetIntegrationConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationConfigurationID
}

func (o *UpdateInvoiceRequest) GetInvoiceID() string {
	if o == nil {
		return ""
	}
	return o.InvoiceID
}

func (o *UpdateInvoiceRequest) GetRequestBody() UpdateInvoiceRequestBody {
	if o == nil {
		return UpdateInvoiceRequestBody{}
	}
	return o.RequestBody
}

type UpdateInvoiceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *UpdateInvoiceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
