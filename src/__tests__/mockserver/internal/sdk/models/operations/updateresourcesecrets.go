// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type Secrets struct {
	Name   string  `json:"name"`
	Value  string  `json:"value"`
	Prefix *string `json:"prefix,omitempty"`
}

func (o *Secrets) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Secrets) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *Secrets) GetPrefix() *string {
	if o == nil {
		return nil
	}
	return o.Prefix
}

type UpdateResourceSecretsRequestBody struct {
	Secrets []Secrets `json:"secrets"`
}

func (o *UpdateResourceSecretsRequestBody) GetSecrets() []Secrets {
	if o == nil {
		return []Secrets{}
	}
	return o.Secrets
}

type UpdateResourceSecretsRequest struct {
	IntegrationConfigurationID string                           `pathParam:"style=simple,explode=false,name=integrationConfigurationId"`
	IntegrationProductIDOrSlug string                           `pathParam:"style=simple,explode=false,name=integrationProductIdOrSlug"`
	ResourceID                 string                           `pathParam:"style=simple,explode=false,name=resourceId"`
	RequestBody                UpdateResourceSecretsRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateResourceSecretsRequest) GetIntegrationConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationConfigurationID
}

func (o *UpdateResourceSecretsRequest) GetIntegrationProductIDOrSlug() string {
	if o == nil {
		return ""
	}
	return o.IntegrationProductIDOrSlug
}

func (o *UpdateResourceSecretsRequest) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *UpdateResourceSecretsRequest) GetRequestBody() UpdateResourceSecretsRequestBody {
	if o == nil {
		return UpdateResourceSecretsRequestBody{}
	}
	return o.RequestBody
}

type UpdateResourceSecretsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *UpdateResourceSecretsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
