// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type UpdateSharedConnectLinksRequestBody struct {
	Regions []string `json:"regions"`
}

func (o *UpdateSharedConnectLinksRequestBody) GetRegions() []string {
	if o == nil {
		return []string{}
	}
	return o.Regions
}

type UpdateSharedConnectLinksRequest struct {
	// The unique project identifier or the project name
	IDOrName string `pathParam:"style=simple,explode=false,name=idOrName"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                              `queryParam:"style=form,explode=true,name=slug"`
	RequestBody *UpdateSharedConnectLinksRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateSharedConnectLinksRequest) GetIDOrName() string {
	if o == nil {
		return ""
	}
	return o.IDOrName
}

func (o *UpdateSharedConnectLinksRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *UpdateSharedConnectLinksRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateSharedConnectLinksRequest) GetRequestBody() *UpdateSharedConnectLinksRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateSharedConnectLinksEnvIDEnum string

const (
	UpdateSharedConnectLinksEnvIDEnumPreview    UpdateSharedConnectLinksEnvIDEnum = "preview"
	UpdateSharedConnectLinksEnvIDEnumProduction UpdateSharedConnectLinksEnvIDEnum = "production"
)

func (e UpdateSharedConnectLinksEnvIDEnum) ToPointer() *UpdateSharedConnectLinksEnvIDEnum {
	return &e
}
func (e *UpdateSharedConnectLinksEnvIDEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "preview":
		fallthrough
	case "production":
		*e = UpdateSharedConnectLinksEnvIDEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSharedConnectLinksEnvIDEnum: %v", v)
	}
}

type UpdateSharedConnectLinksEnvIDUnionType string

const (
	UpdateSharedConnectLinksEnvIDUnionTypeStr                               UpdateSharedConnectLinksEnvIDUnionType = "str"
	UpdateSharedConnectLinksEnvIDUnionTypeUpdateSharedConnectLinksEnvIDEnum UpdateSharedConnectLinksEnvIDUnionType = "updateSharedConnectLinks_envId_enum"
)

type UpdateSharedConnectLinksEnvIDUnion struct {
	Str                               *string                            `queryParam:"inline"`
	UpdateSharedConnectLinksEnvIDEnum *UpdateSharedConnectLinksEnvIDEnum `queryParam:"inline"`

	Type UpdateSharedConnectLinksEnvIDUnionType
}

func CreateUpdateSharedConnectLinksEnvIDUnionStr(str string) UpdateSharedConnectLinksEnvIDUnion {
	typ := UpdateSharedConnectLinksEnvIDUnionTypeStr

	return UpdateSharedConnectLinksEnvIDUnion{
		Str:  &str,
		Type: typ,
	}
}

func CreateUpdateSharedConnectLinksEnvIDUnionUpdateSharedConnectLinksEnvIDEnum(updateSharedConnectLinksEnvIDEnum UpdateSharedConnectLinksEnvIDEnum) UpdateSharedConnectLinksEnvIDUnion {
	typ := UpdateSharedConnectLinksEnvIDUnionTypeUpdateSharedConnectLinksEnvIDEnum

	return UpdateSharedConnectLinksEnvIDUnion{
		UpdateSharedConnectLinksEnvIDEnum: &updateSharedConnectLinksEnvIDEnum,
		Type:                              typ,
	}
}

func (u *UpdateSharedConnectLinksEnvIDUnion) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = UpdateSharedConnectLinksEnvIDUnionTypeStr
		return nil
	}

	var updateSharedConnectLinksEnvIDEnum UpdateSharedConnectLinksEnvIDEnum = UpdateSharedConnectLinksEnvIDEnum("")
	if err := utils.UnmarshalJSON(data, &updateSharedConnectLinksEnvIDEnum, "", true, nil); err == nil {
		u.UpdateSharedConnectLinksEnvIDEnum = &updateSharedConnectLinksEnvIDEnum
		u.Type = UpdateSharedConnectLinksEnvIDUnionTypeUpdateSharedConnectLinksEnvIDEnum
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for UpdateSharedConnectLinksEnvIDUnion", string(data))
}

func (u UpdateSharedConnectLinksEnvIDUnion) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.UpdateSharedConnectLinksEnvIDEnum != nil {
		return utils.MarshalJSON(u.UpdateSharedConnectLinksEnvIDEnum, "", true)
	}

	return nil, errors.New("could not marshal union type UpdateSharedConnectLinksEnvIDUnion: all fields are null")
}

type UpdateSharedConnectLinksAws struct {
	SubnetIds       []string `json:"subnetIds"`
	SecurityGroupID string   `json:"securityGroupId"`
}

func (o *UpdateSharedConnectLinksAws) GetSubnetIds() []string {
	if o == nil {
		return []string{}
	}
	return o.SubnetIds
}

func (o *UpdateSharedConnectLinksAws) GetSecurityGroupID() string {
	if o == nil {
		return ""
	}
	return o.SecurityGroupID
}

type UpdateSharedConnectLinksResponseBody struct {
	EnvID                  UpdateSharedConnectLinksEnvIDUnion `json:"envId"`
	ConnectConfigurationID string                             `json:"connectConfigurationId"`
	Dc                     *string                            `json:"dc,omitempty"`
	Passive                bool                               `json:"passive"`
	BuildsEnabled          bool                               `json:"buildsEnabled"`
	Aws                    *UpdateSharedConnectLinksAws       `json:"aws,omitempty"`
	CreatedAt              float64                            `json:"createdAt"`
	UpdatedAt              float64                            `json:"updatedAt"`
}

func (o *UpdateSharedConnectLinksResponseBody) GetEnvID() UpdateSharedConnectLinksEnvIDUnion {
	if o == nil {
		return UpdateSharedConnectLinksEnvIDUnion{}
	}
	return o.EnvID
}

func (o *UpdateSharedConnectLinksResponseBody) GetConnectConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.ConnectConfigurationID
}

func (o *UpdateSharedConnectLinksResponseBody) GetDc() *string {
	if o == nil {
		return nil
	}
	return o.Dc
}

func (o *UpdateSharedConnectLinksResponseBody) GetPassive() bool {
	if o == nil {
		return false
	}
	return o.Passive
}

func (o *UpdateSharedConnectLinksResponseBody) GetBuildsEnabled() bool {
	if o == nil {
		return false
	}
	return o.BuildsEnabled
}

func (o *UpdateSharedConnectLinksResponseBody) GetAws() *UpdateSharedConnectLinksAws {
	if o == nil {
		return nil
	}
	return o.Aws
}

func (o *UpdateSharedConnectLinksResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *UpdateSharedConnectLinksResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

type UpdateSharedConnectLinksResponse struct {
	HTTPMeta       components.HTTPMetadata `json:"-"`
	ResponseBodies []UpdateSharedConnectLinksResponseBody
}

func (o *UpdateSharedConnectLinksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateSharedConnectLinksResponse) GetResponseBodies() []UpdateSharedConnectLinksResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
