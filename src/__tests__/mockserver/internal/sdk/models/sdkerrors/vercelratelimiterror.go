// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type VercelRateLimitErrorError struct {
	code    string                      `const:"rate_limited" json:"code"`
	Message string                      `json:"message"`
	Limit   *components.RateLimitNotice `json:"limit,omitempty"`
}

func (v VercelRateLimitErrorError) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *VercelRateLimitErrorError) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *VercelRateLimitErrorError) GetCode() string {
	return "rate_limited"
}

func (o *VercelRateLimitErrorError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *VercelRateLimitErrorError) GetLimit() *components.RateLimitNotice {
	if o == nil {
		return nil
	}
	return o.Limit
}

type VercelRateLimitError struct {
	Error_ VercelRateLimitErrorError `json:"error"`
}

var _ error = &VercelRateLimitError{}

func (e *VercelRateLimitError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
