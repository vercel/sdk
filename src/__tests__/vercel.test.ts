/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Vercel } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Vercel Post /Domains", async () => {
  const testHttpClient = createTestHTTPClient("post_/domains");

  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await vercel.postDomains({
    name: "example.com",
    method: "transfer-in",
    token: "fdhfr820ad#@FAdlj$$",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    domain: {
      verified: true,
      nameservers: [
        "ns1.nameserver.net",
        "ns2.nameserver.net",
      ],
      intendedNameservers: [
        "ns1.vercel-dns.com",
        "ns2.vercel-dns.com",
      ],
      customNameservers: [
        "ns1.nameserver.net",
        "ns2.nameserver.net",
      ],
      creator: {
        username: "vercel_user",
        email: "demo@example.com",
        id: "ZspSRT4ljIEEmMHgoDwKWDei",
      },
      name: "example.com",
      boughtAt: 1613602938882,
      createdAt: 1613602938882,
      expiresAt: 1613602938882,
      id: "EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1",
      orderedAt: 1613602938882,
      renew: true,
      serviceType: "zeit.world",
      transferredAt: 1613602938882,
      transferStartedAt: 1613602938882,
      userId: "<id>",
      teamId: "<id>",
    },
  });
});

test("Vercel Get /Projects/{project Id}/logs Presets", async () => {
  const testHttpClient = createTestHTTPClient(
    "get_/projects/{projectId}/logs-presets",
  );

  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await vercel.getProjectsProjectIdLogsPresets({
    projectId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      id: "ABCDEFG000011111",
      data: {
        query: "<value>",
        creatorId: "<id>",
        title: "<value>",
        groupId: "<id>",
        ownerId: "<id>",
        projectId: "<id>",
        createdAt: 76.8,
      },
      creatorId: "R6efeCJQ2HKXywuasPDc0fOWB",
      updatedAt: 1611796915677,
      description:
        "Our mission is to make cloud computing accessible to everyone.",
      stagingPrefix: "<value>",
      slug: "my-team",
      name: "My Team",
      avatar: "6eb07268bcfadd309905ffb1579354084c24655c",
      membership: {
        confirmed: true,
        confirmedAt: 76.8,
        role: "OWNER",
        createdAt: 8753.86,
        created: 3816.98,
      },
      createdAt: 1630748523395,
    },
  ]);
});

test("Vercel Post /Projects/{project Id}/logs Presets", async () => {
  const testHttpClient = createTestHTTPClient(
    "post_/projects/{projectId}/logs-presets",
  );

  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await vercel.postProjectsProjectIdLogsPresets({
    projectId: "<id>",
    requestBody: {
      query:
        "timeline=past30Minutes&startDate=1690446214407&endDate=1690448014407&levels=info&domains=vercel.com",
      title: "Request Path",
      group: "team",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "team_nllPyCtREAqxxdyFKbbMDlxd",
    creatorId: "R6efeCJQ2HKXywuasPDc0fOWB",
    updatedAt: 1611796915677,
    emailDomain: "example.com",
    saml: {
      connection: {
        status: "linked",
        type: "OktaSAML",
        state: "active",
        connectedAt: 1611796915677,
        lastReceivedWebhookEvent: 1611796915677,
      },
      directory: {
        type: "OktaSAML",
        state: "active",
        connectedAt: 1611796915677,
        lastReceivedWebhookEvent: 1611796915677,
      },
      enforced: false,
    },
    inviteCode: "hasihf9e89",
    description:
      "Our mission is to make cloud computing accessible to everyone.",
    stagingPrefix: "<value>",
    previewDeploymentSuffix: "example.dev",
    slug: "my-team",
    name: "My Team",
    avatar: "6eb07268bcfadd309905ffb1579354084c24655c",
    membership: {
      confirmed: true,
      confirmedAt: 6926.21,
      role: "CONTRIBUTOR",
      createdAt: 1063.07,
      created: 7437.99,
    },
    createdAt: 1630748523395,
  });
});

test("Vercel Delete /Projects/{project Id}/logs Presets/{id}", async () => {
  const testHttpClient = createTestHTTPClient(
    "delete_/projects/{projectId}/logs-presets/{id}",
  );

  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  await vercel.deleteProjectsProjectIdLogsPresetsId({
    projectId: "<id>",
    id: "<id>",
  });
});

test("Vercel Patch /Projects/{project Id}/logs Presets/{id}", async () => {
  const testHttpClient = createTestHTTPClient(
    "patch_/projects/{projectId}/logs-presets/{id}",
  );

  const vercel = new Vercel({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await vercel.patchProjectsProjectIdLogsPresetsId({
    projectId: "<id>",
    id: "<id>",
    requestBody: {
      title: "Request Path",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "team_nllPyCtREAqxxdyFKbbMDlxd",
    creatorId: "R6efeCJQ2HKXywuasPDc0fOWB",
    updatedAt: 1611796915677,
    emailDomain: "example.com",
    saml: {
      connection: {
        status: "linked",
        type: "OktaSAML",
        state: "active",
        connectedAt: 1611796915677,
        lastReceivedWebhookEvent: 1611796915677,
      },
      directory: {
        type: "OktaSAML",
        state: "active",
        connectedAt: 1611796915677,
        lastReceivedWebhookEvent: 1611796915677,
      },
      enforced: false,
    },
    inviteCode: "hasihf9e89",
    description:
      "Our mission is to make cloud computing accessible to everyone.",
    stagingPrefix: "<value>",
    previewDeploymentSuffix: "example.dev",
    slug: "my-team",
    name: "My Team",
    avatar: "6eb07268bcfadd309905ffb1579354084c24655c",
    membership: {
      confirmed: true,
      confirmedAt: 5697.43,
      role: "VIEWER",
      createdAt: 9741.23,
      created: 2482.46,
    },
    createdAt: 1630748523395,
  });
});
