/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { edgeCacheInvalidateByTags } from "../../funcs/edgeCacheInvalidateByTags.js";
import { InvalidateByTagsRequest$inboundSchema } from "../../models/invalidatebytagsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: InvalidateByTagsRequest$inboundSchema,
};

export const tool$edgeCacheInvalidateByTags: ToolDefinition<typeof args> = {
  name: "edge-cache-invalidate-by-tags",
  description: `Invalidate by tag

Marks a cache tag as stale, causing cache entries associated with that tag to be revalidated in the background on the next request.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await edgeCacheInvalidateByTags(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
