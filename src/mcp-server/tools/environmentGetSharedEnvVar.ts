/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentGetSharedEnvVar } from "../../funcs/environmentGetSharedEnvVar.js";
import { GetSharedEnvVarRequest$inboundSchema } from "../../models/getsharedenvvarop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetSharedEnvVarRequest$inboundSchema,
};

export const tool$environmentGetSharedEnvVar: ToolDefinition<typeof args> = {
  name: "environment-get-shared-env-var",
  description:
    `Retrieve the decrypted value of a Shared Environment Variable by id.

Retrieve the decrypted value of a Shared Environment Variable by id.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await environmentGetSharedEnvVar(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
