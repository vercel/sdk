/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetSupportedTldsRequest = {
  teamId?: string | undefined;
};

/** @internal */
export const GetSupportedTldsRequest$inboundSchema: z.ZodType<
  GetSupportedTldsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  teamId: z.string().optional(),
});

/** @internal */
export type GetSupportedTldsRequest$Outbound = {
  teamId?: string | undefined;
};

/** @internal */
export const GetSupportedTldsRequest$outboundSchema: z.ZodType<
  GetSupportedTldsRequest$Outbound,
  z.ZodTypeDef,
  GetSupportedTldsRequest
> = z.object({
  teamId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSupportedTldsRequest$ {
  /** @deprecated use `GetSupportedTldsRequest$inboundSchema` instead. */
  export const inboundSchema = GetSupportedTldsRequest$inboundSchema;
  /** @deprecated use `GetSupportedTldsRequest$outboundSchema` instead. */
  export const outboundSchema = GetSupportedTldsRequest$outboundSchema;
  /** @deprecated use `GetSupportedTldsRequest$Outbound` instead. */
  export type Outbound = GetSupportedTldsRequest$Outbound;
}

export function getSupportedTldsRequestToJSON(
  getSupportedTldsRequest: GetSupportedTldsRequest,
): string {
  return JSON.stringify(
    GetSupportedTldsRequest$outboundSchema.parse(getSupportedTldsRequest),
  );
}

export function getSupportedTldsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSupportedTldsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSupportedTldsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSupportedTldsRequest' from JSON`,
  );
}
