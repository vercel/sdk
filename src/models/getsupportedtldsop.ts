/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  InternalServerError,
  InternalServerError$inboundSchema,
  InternalServerError$Outbound,
  InternalServerError$outboundSchema,
} from "./internalservererror.js";
import {
  NotAuthorizedForScope,
  NotAuthorizedForScope$inboundSchema,
  NotAuthorizedForScope$Outbound,
  NotAuthorizedForScope$outboundSchema,
} from "./notauthorizedforscope.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import {
  Unauthorized,
  Unauthorized$inboundSchema,
  Unauthorized$Outbound,
  Unauthorized$outboundSchema,
} from "./unauthorized.js";

/**
 * Unauthorized
 */
export type GetSupportedTldsResponseBody =
  | Unauthorized
  | NotAuthorizedForScope
  | InternalServerError;

/** @internal */
export const GetSupportedTldsResponseBody$inboundSchema: z.ZodType<
  GetSupportedTldsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  Unauthorized$inboundSchema,
  NotAuthorizedForScope$inboundSchema,
  InternalServerError$inboundSchema,
]);

/** @internal */
export type GetSupportedTldsResponseBody$Outbound =
  | Unauthorized$Outbound
  | NotAuthorizedForScope$Outbound
  | InternalServerError$Outbound;

/** @internal */
export const GetSupportedTldsResponseBody$outboundSchema: z.ZodType<
  GetSupportedTldsResponseBody$Outbound,
  z.ZodTypeDef,
  GetSupportedTldsResponseBody
> = z.union([
  Unauthorized$outboundSchema,
  NotAuthorizedForScope$outboundSchema,
  InternalServerError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSupportedTldsResponseBody$ {
  /** @deprecated use `GetSupportedTldsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetSupportedTldsResponseBody$inboundSchema;
  /** @deprecated use `GetSupportedTldsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetSupportedTldsResponseBody$outboundSchema;
  /** @deprecated use `GetSupportedTldsResponseBody$Outbound` instead. */
  export type Outbound = GetSupportedTldsResponseBody$Outbound;
}

export function getSupportedTldsResponseBodyToJSON(
  getSupportedTldsResponseBody: GetSupportedTldsResponseBody,
): string {
  return JSON.stringify(
    GetSupportedTldsResponseBody$outboundSchema.parse(
      getSupportedTldsResponseBody,
    ),
  );
}

export function getSupportedTldsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetSupportedTldsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSupportedTldsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSupportedTldsResponseBody' from JSON`,
  );
}
