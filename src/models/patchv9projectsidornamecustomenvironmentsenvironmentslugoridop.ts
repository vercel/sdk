/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

/**
 * Type of matcher. One of \"equals\", \"startsWith\", or \"endsWith\".
 */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType =
  {
    Equals: "equals",
    StartsWith: "startsWith",
    EndsWith: "endsWith",
  } as const;
/**
 * Type of matcher. One of \"equals\", \"startsWith\", or \"endsWith\".
 */
export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType =
  ClosedEnum<
    typeof PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType
  >;

/**
 * How we want to determine a matching branch. This is optional.
 */
export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher =
  {
    /**
     * Type of matcher. One of \"equals\", \"startsWith\", or \"endsWith\".
     */
    type: PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType;
    /**
     * Git branch name or portion thereof.
     */
    pattern: string;
  };

export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody =
  {
    /**
     * The slug of the custom environment.
     */
    slug?: string | undefined;
    /**
     * Description of the custom environment. This is optional.
     */
    description?: string | undefined;
    /**
     * How we want to determine a matching branch. This is optional.
     */
    branchMatcher?:
      | PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher
      | null
      | undefined;
  };

export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest =
  {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * The unique custom environment identifier within the project
     */
    environmentSlugOrId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody?:
      | PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody
      | undefined;
  };

export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody =
  {};

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType
  > = z.nativeEnum(
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType,
  );

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType
  > =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$ {
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$inboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$outboundSchema;
}

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$inboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$inboundSchema,
    pattern: z.string(),
  });

/** @internal */
export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$Outbound =
  {
    type: string;
    pattern: string;
  };

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$outboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$Outbound,
    z.ZodTypeDef,
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher
  > = z.object({
    type:
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdType$outboundSchema,
    pattern: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$ {
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$inboundSchema` instead. */
  export const inboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$inboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$outboundSchema` instead. */
  export const outboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$outboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$Outbound` instead. */
  export type Outbound =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$Outbound;
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcherToJSON(
  patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher:
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher,
): string {
  return JSON.stringify(
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$outboundSchema
      .parse(
        patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher,
      ),
  );
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcherFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher' from JSON`,
  );
}

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$inboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    slug: z.string().optional(),
    description: z.string().optional(),
    branchMatcher: z.nullable(
      z.lazy(() =>
        PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$inboundSchema
      ),
    ).optional(),
  });

/** @internal */
export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$Outbound =
  {
    slug?: string | undefined;
    description?: string | undefined;
    branchMatcher?:
      | PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$Outbound
      | null
      | undefined;
  };

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$outboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$Outbound,
    z.ZodTypeDef,
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody
  > = z.object({
    slug: z.string().optional(),
    description: z.string().optional(),
    branchMatcher: z.nullable(
      z.lazy(() =>
        PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdBranchMatcher$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$ {
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$inboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$outboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$Outbound` instead. */
  export type Outbound =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$Outbound;
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBodyToJSON(
  patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody:
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody,
): string {
  return JSON.stringify(
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$outboundSchema
      .parse(
        patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody,
      ),
  );
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody' from JSON`,
  );
}

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$inboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    idOrName: z.string(),
    environmentSlugOrId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    RequestBody: z.lazy(() =>
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$Outbound =
  {
    idOrName: string;
    environmentSlugOrId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody?:
      | PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$Outbound
      | undefined;
  };

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$outboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$Outbound,
    z.ZodTypeDef,
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest
  > = z.object({
    idOrName: z.string(),
    environmentSlugOrId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    requestBody: z.lazy(() =>
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestBody$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$ {
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$inboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$outboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$Outbound` instead. */
  export type Outbound =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$Outbound;
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestToJSON(
  patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest:
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
): string {
  return JSON.stringify(
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$outboundSchema
      .parse(
        patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
      ),
  );
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest' from JSON`,
  );
}

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$inboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$Outbound =
  {};

/** @internal */
export const PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$outboundSchema:
  z.ZodType<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$ {
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$inboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$outboundSchema;
  /** @deprecated use `PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$Outbound` instead. */
  export type Outbound =
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$Outbound;
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBodyToJSON(
  patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody:
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody,
): string {
  return JSON.stringify(
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$outboundSchema
      .parse(
        patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody,
      ),
  );
}

export function patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody' from JSON`,
  );
}
