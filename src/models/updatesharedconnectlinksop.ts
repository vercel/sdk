/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type UpdateSharedConnectLinksRequestBody = {
  regions: Array<string>;
};

export type UpdateSharedConnectLinksRequest = {
  /**
   * The unique project identifier or the project name
   */
  idOrName: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
  requestBody?: UpdateSharedConnectLinksRequestBody | undefined;
};

export const UpdateSharedConnectLinksEnvId2 = {
  Preview: "preview",
  Production: "production",
} as const;
export type UpdateSharedConnectLinksEnvId2 = ClosedEnum<
  typeof UpdateSharedConnectLinksEnvId2
>;

export type UpdateSharedConnectLinksEnvId =
  | string
  | UpdateSharedConnectLinksEnvId2;

export type UpdateSharedConnectLinksAws = {
  subnetIds: Array<string>;
  securityGroupId: string;
};

export type UpdateSharedConnectLinksResponseBody = {
  envId: string | UpdateSharedConnectLinksEnvId2;
  connectConfigurationId: string;
  dc?: string | undefined;
  passive: boolean;
  buildsEnabled: boolean;
  aws?: UpdateSharedConnectLinksAws | undefined;
  createdAt: number;
  updatedAt: number;
};

/** @internal */
export const UpdateSharedConnectLinksRequestBody$inboundSchema: z.ZodType<
  UpdateSharedConnectLinksRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  regions: z.array(z.string()),
});

/** @internal */
export type UpdateSharedConnectLinksRequestBody$Outbound = {
  regions: Array<string>;
};

/** @internal */
export const UpdateSharedConnectLinksRequestBody$outboundSchema: z.ZodType<
  UpdateSharedConnectLinksRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateSharedConnectLinksRequestBody
> = z.object({
  regions: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSharedConnectLinksRequestBody$ {
  /** @deprecated use `UpdateSharedConnectLinksRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateSharedConnectLinksRequestBody$inboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateSharedConnectLinksRequestBody$outboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksRequestBody$Outbound` instead. */
  export type Outbound = UpdateSharedConnectLinksRequestBody$Outbound;
}

export function updateSharedConnectLinksRequestBodyToJSON(
  updateSharedConnectLinksRequestBody: UpdateSharedConnectLinksRequestBody,
): string {
  return JSON.stringify(
    UpdateSharedConnectLinksRequestBody$outboundSchema.parse(
      updateSharedConnectLinksRequestBody,
    ),
  );
}

export function updateSharedConnectLinksRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSharedConnectLinksRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateSharedConnectLinksRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSharedConnectLinksRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateSharedConnectLinksRequest$inboundSchema: z.ZodType<
  UpdateSharedConnectLinksRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  idOrName: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  RequestBody: z.lazy(() => UpdateSharedConnectLinksRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateSharedConnectLinksRequest$Outbound = {
  idOrName: string;
  teamId?: string | undefined;
  slug?: string | undefined;
  RequestBody?: UpdateSharedConnectLinksRequestBody$Outbound | undefined;
};

/** @internal */
export const UpdateSharedConnectLinksRequest$outboundSchema: z.ZodType<
  UpdateSharedConnectLinksRequest$Outbound,
  z.ZodTypeDef,
  UpdateSharedConnectLinksRequest
> = z.object({
  idOrName: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  requestBody: z.lazy(() => UpdateSharedConnectLinksRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSharedConnectLinksRequest$ {
  /** @deprecated use `UpdateSharedConnectLinksRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateSharedConnectLinksRequest$inboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateSharedConnectLinksRequest$outboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksRequest$Outbound` instead. */
  export type Outbound = UpdateSharedConnectLinksRequest$Outbound;
}

export function updateSharedConnectLinksRequestToJSON(
  updateSharedConnectLinksRequest: UpdateSharedConnectLinksRequest,
): string {
  return JSON.stringify(
    UpdateSharedConnectLinksRequest$outboundSchema.parse(
      updateSharedConnectLinksRequest,
    ),
  );
}

export function updateSharedConnectLinksRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSharedConnectLinksRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSharedConnectLinksRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSharedConnectLinksRequest' from JSON`,
  );
}

/** @internal */
export const UpdateSharedConnectLinksEnvId2$inboundSchema: z.ZodNativeEnum<
  typeof UpdateSharedConnectLinksEnvId2
> = z.nativeEnum(UpdateSharedConnectLinksEnvId2);

/** @internal */
export const UpdateSharedConnectLinksEnvId2$outboundSchema: z.ZodNativeEnum<
  typeof UpdateSharedConnectLinksEnvId2
> = UpdateSharedConnectLinksEnvId2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSharedConnectLinksEnvId2$ {
  /** @deprecated use `UpdateSharedConnectLinksEnvId2$inboundSchema` instead. */
  export const inboundSchema = UpdateSharedConnectLinksEnvId2$inboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksEnvId2$outboundSchema` instead. */
  export const outboundSchema = UpdateSharedConnectLinksEnvId2$outboundSchema;
}

/** @internal */
export const UpdateSharedConnectLinksEnvId$inboundSchema: z.ZodType<
  UpdateSharedConnectLinksEnvId,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), UpdateSharedConnectLinksEnvId2$inboundSchema]);

/** @internal */
export type UpdateSharedConnectLinksEnvId$Outbound = string | string;

/** @internal */
export const UpdateSharedConnectLinksEnvId$outboundSchema: z.ZodType<
  UpdateSharedConnectLinksEnvId$Outbound,
  z.ZodTypeDef,
  UpdateSharedConnectLinksEnvId
> = z.union([z.string(), UpdateSharedConnectLinksEnvId2$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSharedConnectLinksEnvId$ {
  /** @deprecated use `UpdateSharedConnectLinksEnvId$inboundSchema` instead. */
  export const inboundSchema = UpdateSharedConnectLinksEnvId$inboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksEnvId$outboundSchema` instead. */
  export const outboundSchema = UpdateSharedConnectLinksEnvId$outboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksEnvId$Outbound` instead. */
  export type Outbound = UpdateSharedConnectLinksEnvId$Outbound;
}

export function updateSharedConnectLinksEnvIdToJSON(
  updateSharedConnectLinksEnvId: UpdateSharedConnectLinksEnvId,
): string {
  return JSON.stringify(
    UpdateSharedConnectLinksEnvId$outboundSchema.parse(
      updateSharedConnectLinksEnvId,
    ),
  );
}

export function updateSharedConnectLinksEnvIdFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSharedConnectLinksEnvId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSharedConnectLinksEnvId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSharedConnectLinksEnvId' from JSON`,
  );
}

/** @internal */
export const UpdateSharedConnectLinksAws$inboundSchema: z.ZodType<
  UpdateSharedConnectLinksAws,
  z.ZodTypeDef,
  unknown
> = z.object({
  subnetIds: z.array(z.string()),
  securityGroupId: z.string(),
});

/** @internal */
export type UpdateSharedConnectLinksAws$Outbound = {
  subnetIds: Array<string>;
  securityGroupId: string;
};

/** @internal */
export const UpdateSharedConnectLinksAws$outboundSchema: z.ZodType<
  UpdateSharedConnectLinksAws$Outbound,
  z.ZodTypeDef,
  UpdateSharedConnectLinksAws
> = z.object({
  subnetIds: z.array(z.string()),
  securityGroupId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSharedConnectLinksAws$ {
  /** @deprecated use `UpdateSharedConnectLinksAws$inboundSchema` instead. */
  export const inboundSchema = UpdateSharedConnectLinksAws$inboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksAws$outboundSchema` instead. */
  export const outboundSchema = UpdateSharedConnectLinksAws$outboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksAws$Outbound` instead. */
  export type Outbound = UpdateSharedConnectLinksAws$Outbound;
}

export function updateSharedConnectLinksAwsToJSON(
  updateSharedConnectLinksAws: UpdateSharedConnectLinksAws,
): string {
  return JSON.stringify(
    UpdateSharedConnectLinksAws$outboundSchema.parse(
      updateSharedConnectLinksAws,
    ),
  );
}

export function updateSharedConnectLinksAwsFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSharedConnectLinksAws, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSharedConnectLinksAws$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSharedConnectLinksAws' from JSON`,
  );
}

/** @internal */
export const UpdateSharedConnectLinksResponseBody$inboundSchema: z.ZodType<
  UpdateSharedConnectLinksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  envId: z.union([z.string(), UpdateSharedConnectLinksEnvId2$inboundSchema]),
  connectConfigurationId: z.string(),
  dc: z.string().optional(),
  passive: z.boolean(),
  buildsEnabled: z.boolean(),
  aws: z.lazy(() => UpdateSharedConnectLinksAws$inboundSchema).optional(),
  createdAt: z.number(),
  updatedAt: z.number(),
});

/** @internal */
export type UpdateSharedConnectLinksResponseBody$Outbound = {
  envId: string | string;
  connectConfigurationId: string;
  dc?: string | undefined;
  passive: boolean;
  buildsEnabled: boolean;
  aws?: UpdateSharedConnectLinksAws$Outbound | undefined;
  createdAt: number;
  updatedAt: number;
};

/** @internal */
export const UpdateSharedConnectLinksResponseBody$outboundSchema: z.ZodType<
  UpdateSharedConnectLinksResponseBody$Outbound,
  z.ZodTypeDef,
  UpdateSharedConnectLinksResponseBody
> = z.object({
  envId: z.union([z.string(), UpdateSharedConnectLinksEnvId2$outboundSchema]),
  connectConfigurationId: z.string(),
  dc: z.string().optional(),
  passive: z.boolean(),
  buildsEnabled: z.boolean(),
  aws: z.lazy(() => UpdateSharedConnectLinksAws$outboundSchema).optional(),
  createdAt: z.number(),
  updatedAt: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSharedConnectLinksResponseBody$ {
  /** @deprecated use `UpdateSharedConnectLinksResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateSharedConnectLinksResponseBody$inboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateSharedConnectLinksResponseBody$outboundSchema;
  /** @deprecated use `UpdateSharedConnectLinksResponseBody$Outbound` instead. */
  export type Outbound = UpdateSharedConnectLinksResponseBody$Outbound;
}

export function updateSharedConnectLinksResponseBodyToJSON(
  updateSharedConnectLinksResponseBody: UpdateSharedConnectLinksResponseBody,
): string {
  return JSON.stringify(
    UpdateSharedConnectLinksResponseBody$outboundSchema.parse(
      updateSharedConnectLinksResponseBody,
    ),
  );
}

export function updateSharedConnectLinksResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSharedConnectLinksResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateSharedConnectLinksResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSharedConnectLinksResponseBody' from JSON`,
  );
}
