/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentDeleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId } from "../funcs/environmentDeleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId.js";
import { environmentGetV9ProjectsIdOrNameCustomEnvironments } from "../funcs/environmentGetV9ProjectsIdOrNameCustomEnvironments.js";
import { environmentGetV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId } from "../funcs/environmentGetV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId.js";
import { environmentPatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId } from "../funcs/environmentPatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId.js";
import { environmentPostV1ProjectsIdOrNameCustomEnvironments } from "../funcs/environmentPostV1ProjectsIdOrNameCustomEnvironments.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import {
  DeleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
  DeleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody,
} from "../models/deletev9projectsidornamecustomenvironmentsenvironmentslugoridop.js";
import {
  GetV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
  GetV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody,
} from "../models/getv9projectsidornamecustomenvironmentsenvironmentslugoridop.js";
import {
  GetV9ProjectsIdOrNameCustomEnvironmentsRequest,
  GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody,
} from "../models/getv9projectsidornamecustomenvironmentsop.js";
import {
  PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
  PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody,
} from "../models/patchv9projectsidornamecustomenvironmentsenvironmentslugoridop.js";
import {
  PostV1ProjectsIdOrNameCustomEnvironmentsRequest,
  PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody,
} from "../models/postv1projectsidornamecustomenvironmentsop.js";
import { unwrapAsync } from "../types/fp.js";

export class Environment extends ClientSDK {
  /**
   * Create a custom environment for the current project.
   *
   * @remarks
   * Creates a custom environment for the current project. Cannot be named 'Production' or 'Preview'.
   */
  async postV1ProjectsIdOrNameCustomEnvironments(
    request: PostV1ProjectsIdOrNameCustomEnvironmentsRequest,
    options?: RequestOptions,
  ): Promise<PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody> {
    return unwrapAsync(environmentPostV1ProjectsIdOrNameCustomEnvironments(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve custom environments
   *
   * @remarks
   * Retrieve custom environments for the project. Must not be named 'Production' or 'Preview'.
   */
  async getV9ProjectsIdOrNameCustomEnvironments(
    request: GetV9ProjectsIdOrNameCustomEnvironmentsRequest,
    options?: RequestOptions,
  ): Promise<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody> {
    return unwrapAsync(environmentGetV9ProjectsIdOrNameCustomEnvironments(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a custom environment
   *
   * @remarks
   * Retrieve a custom environment for the project. Must not be named 'Production' or 'Preview'.
   */
  async getV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId(
    request: GetV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
    options?: RequestOptions,
  ): Promise<
    GetV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody
  > {
    return unwrapAsync(
      environmentGetV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId(
        this,
        request,
        options,
      ),
    );
  }

  /**
   * Update a custom environment
   *
   * @remarks
   * Update a custom environment for the project. Must not be named 'Production' or 'Preview'.
   */
  async patchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId(
    request:
      PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
    options?: RequestOptions,
  ): Promise<
    PatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody
  > {
    return unwrapAsync(
      environmentPatchV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId(
        this,
        request,
        options,
      ),
    );
  }

  /**
   * Remove a custom environment
   *
   * @remarks
   * Remove a custom environment for the project. Must not be named 'Production' or 'Preview'.
   */
  async deleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId(
    request:
      DeleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdRequest,
    options?: RequestOptions,
  ): Promise<
    DeleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrIdResponseBody
  > {
    return unwrapAsync(
      environmentDeleteV9ProjectsIdOrNameCustomEnvironmentsEnvironmentSlugOrId(
        this,
        request,
        options,
      ),
    );
  }
}
